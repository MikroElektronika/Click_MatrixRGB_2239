;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/21/2018 11:19:43 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x173D0000  	5949
0x0008	0x17350000  	5941
0x000C	0x17350000  	5941
0x0010	0x17350000  	5941
0x0014	0x17350000  	5941
0x0018	0x17350000  	5941
0x001C	0x17350000  	5941
0x0020	0x17350000  	5941
0x0024	0x17350000  	5941
0x0028	0x17350000  	5941
0x002C	0x17350000  	5941
0x0030	0x17350000  	5941
0x0034	0x17350000  	5941
0x0038	0x17350000  	5941
0x003C	0x17350000  	5941
0x0040	0x17350000  	5941
0x0044	0x17350000  	5941
0x0048	0x17350000  	5941
0x004C	0x17350000  	5941
0x0050	0x17350000  	5941
0x0054	0x17350000  	5941
0x0058	0x17350000  	5941
0x005C	0x17350000  	5941
0x0060	0x17350000  	5941
0x0064	0x17350000  	5941
0x0068	0x17350000  	5941
0x006C	0x17350000  	5941
0x0070	0x17350000  	5941
0x0074	0x17350000  	5941
0x0078	0x17350000  	5941
0x007C	0x17350000  	5941
0x0080	0x17350000  	5941
0x0084	0x17350000  	5941
0x0088	0x17350000  	5941
0x008C	0x17350000  	5941
0x0090	0x17350000  	5941
0x0094	0x17350000  	5941
0x0098	0x17350000  	5941
0x009C	0x17350000  	5941
0x00A0	0x17350000  	5941
0x00A4	0x17350000  	5941
0x00A8	0x17350000  	5941
0x00AC	0x17350000  	5941
0x00B0	0x17350000  	5941
0x00B4	0x17350000  	5941
0x00B8	0x17350000  	5941
0x00BC	0x17350000  	5941
0x00C0	0x17350000  	5941
0x00C4	0x17350000  	5941
0x00C8	0x17350000  	5941
0x00CC	0x17350000  	5941
0x00D0	0x17350000  	5941
0x00D4	0x17350000  	5941
0x00D8	0x17350000  	5941
0x00DC	0x17350000  	5941
0x00E0	0x17350000  	5941
0x00E4	0x17350000  	5941
0x00E8	0x17350000  	5941
0x00EC	0x17350000  	5941
0x00F0	0x17350000  	5941
0x00F4	0x17350000  	5941
0x00F8	0x17350000  	5941
0x00FC	0x17350000  	5941
0x0100	0x17350000  	5941
0x0104	0x17350000  	5941
0x0108	0x17350000  	5941
0x010C	0x17350000  	5941
0x0110	0x17350000  	5941
0x0114	0x17350000  	5941
0x0118	0x17350000  	5941
0x011C	0x17350000  	5941
0x0120	0x17350000  	5941
0x0124	0x17350000  	5941
0x0128	0x17350000  	5941
0x012C	0x17350000  	5941
0x0130	0x17350000  	5941
0x0134	0x17350000  	5941
0x0138	0x17350000  	5941
0x013C	0x17350000  	5941
0x0140	0x17350000  	5941
0x0144	0x17350000  	5941
0x0148	0x17350000  	5941
0x014C	0x17350000  	5941
; end of ____SysVT
_main:
;Click_Matrix_RGB_STM.c, 102 :: 		void main()
0x173C	0xF000F80E  BL	5980
0x1740	0xF000FFDE  BL	9984
0x1744	0xF7FFFFEC  BL	5920
0x1748	0xF000FF9A  BL	9856
;Click_Matrix_RGB_STM.c, 104 :: 		systemInit();
0x174C	0xF7FFFFC0  BL	_systemInit+0
;Click_Matrix_RGB_STM.c, 105 :: 		applicationInit();
0x1750	0xF7FFFEE6  BL	_applicationInit+0
;Click_Matrix_RGB_STM.c, 107 :: 		while (1)
L_main30:
;Click_Matrix_RGB_STM.c, 109 :: 		applicationTask();
0x1754	0xF7FFFF20  BL	_applicationTask+0
;Click_Matrix_RGB_STM.c, 110 :: 		}
0x1758	0xE7FC    B	L_main30
;Click_Matrix_RGB_STM.c, 111 :: 		}
L_end_main:
L__main_end_loop:
0x175A	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x150C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x150E	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x1512	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x1516	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x151A	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x151C	0xB001    ADD	SP, SP, #4
0x151E	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x1464	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x1466	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x146A	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x146E	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x1472	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x1474	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x1478	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x147A	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x147C	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x147E	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x1482	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x1486	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x1488	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x148C	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x148E	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x1490	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x1494	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x1498	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x149A	0xB001    ADD	SP, SP, #4
0x149C	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_Matrix_RGB_STM.c, 36 :: 		void systemInit()
0x16D0	0xB081    SUB	SP, SP, #4
0x16D2	0xF8CDE000  STR	LR, [SP, #0]
;Click_Matrix_RGB_STM.c, 38 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT );
0x16D6	0x2201    MOVS	R2, #1
0x16D8	0x2107    MOVS	R1, #7
0x16DA	0x2000    MOVS	R0, #0
0x16DC	0xF7FFFDC4  BL	_mikrobus_gpioInit+0
;Click_Matrix_RGB_STM.c, 39 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT );
0x16E0	0x2200    MOVS	R2, #0
0x16E2	0x2102    MOVS	R1, #2
0x16E4	0x2000    MOVS	R0, #0
0x16E6	0xF7FFFDBF  BL	_mikrobus_gpioInit+0
;Click_Matrix_RGB_STM.c, 40 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT );
0x16EA	0x2200    MOVS	R2, #0
0x16EC	0x2101    MOVS	R1, #1
0x16EE	0x2000    MOVS	R0, #0
0x16F0	0xF7FFFDBA  BL	_mikrobus_gpioInit+0
;Click_Matrix_RGB_STM.c, 42 :: 		mikrobus_spiInit( _MIKROBUS1, &_MATRIXRGB_SPI_CFG[0] );
0x16F4	0x4809    LDR	R0, [PC, #36]
0x16F6	0x4601    MOV	R1, R0
0x16F8	0x2000    MOVS	R0, #0
0x16FA	0xF7FFFDD7  BL	_mikrobus_spiInit+0
;Click_Matrix_RGB_STM.c, 44 :: 		Delay_ms( 100 );
0x16FE	0xF644777F  MOVW	R7, #20351
0x1702	0xF2C00712  MOVT	R7, #18
0x1706	0xBF00    NOP
0x1708	0xBF00    NOP
L_systemInit0:
0x170A	0x1E7F    SUBS	R7, R7, #1
0x170C	0xD1FD    BNE	L_systemInit0
0x170E	0xBF00    NOP
0x1710	0xBF00    NOP
0x1712	0xBF00    NOP
;Click_Matrix_RGB_STM.c, 45 :: 		}
L_end_systemInit:
0x1714	0xF8DDE000  LDR	LR, [SP, #0]
0x1718	0xB001    ADD	SP, SP, #4
0x171A	0x4770    BX	LR
0x171C	0x26700000  	__MATRIXRGB_SPI_CFG+0
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1268	0xB081    SUB	SP, SP, #4
0x126A	0xF8CDE000  STR	LR, [SP, #0]
0x126E	0xFA5FF981  UXTB	R9, R1
0x1272	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x1276	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x1278	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x127C	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1280	0xF7FFFC46  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x1284	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x1286	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x128A	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x128E	0xF7FFFB63  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x1292	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x1294	0x2001    MOVS	R0, #1
0x1296	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x1298	0x2800    CMP	R0, #0
0x129A	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x129C	0x2801    CMP	R0, #1
0x129E	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x12A0	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x12A2	0xF8DDE000  LDR	LR, [SP, #0]
0x12A6	0xB001    ADD	SP, SP, #4
0x12A8	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x0B10	0xB081    SUB	SP, SP, #4
0x0B12	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x0B16	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x0B18	0x2901    CMP	R1, #1
0x0B1A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x0B1C	0xF2400110  MOVW	R1, #16
0x0B20	0x4865    LDR	R0, [PC, #404]
0x0B22	0xF7FFFE33  BL	_GPIO_Digital_Input+0
0x0B26	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x0B28	0xF2400110  MOVW	R1, #16
0x0B2C	0x4862    LDR	R0, [PC, #392]
0x0B2E	0xF7FFFDF3  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x0B32	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x0B34	0x2901    CMP	R1, #1
0x0B36	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x0B38	0xF2400104  MOVW	R1, #4
0x0B3C	0x485F    LDR	R0, [PC, #380]
0x0B3E	0xF7FFFE25  BL	_GPIO_Digital_Input+0
0x0B42	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x0B44	0xF2400104  MOVW	R1, #4
0x0B48	0x485C    LDR	R0, [PC, #368]
0x0B4A	0xF7FFFDE5  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x0B4E	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x0B50	0x2901    CMP	R1, #1
0x0B52	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x0B54	0xF2420100  MOVW	R1, #8192
0x0B58	0x4859    LDR	R0, [PC, #356]
0x0B5A	0xF7FFFE17  BL	_GPIO_Digital_Input+0
0x0B5E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x0B60	0xF2420100  MOVW	R1, #8192
0x0B64	0x4856    LDR	R0, [PC, #344]
0x0B66	0xF7FFFDD7  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x0B6A	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x0B6C	0x2901    CMP	R1, #1
0x0B6E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x0B70	0xF2404100  MOVW	R1, #1024
0x0B74	0x4851    LDR	R0, [PC, #324]
0x0B76	0xF7FFFE09  BL	_GPIO_Digital_Input+0
0x0B7A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x0B7C	0xF2404100  MOVW	R1, #1024
0x0B80	0x484E    LDR	R0, [PC, #312]
0x0B82	0xF7FFFDC9  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x0B86	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x0B88	0x2901    CMP	R1, #1
0x0B8A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x0B8C	0xF6400100  MOVW	R1, #2048
0x0B90	0x484A    LDR	R0, [PC, #296]
0x0B92	0xF7FFFDFB  BL	_GPIO_Digital_Input+0
0x0B96	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x0B98	0xF6400100  MOVW	R1, #2048
0x0B9C	0x4847    LDR	R0, [PC, #284]
0x0B9E	0xF7FFFDBB  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x0BA2	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x0BA4	0x2901    CMP	R1, #1
0x0BA6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x0BA8	0xF2410100  MOVW	R1, #4096
0x0BAC	0x4843    LDR	R0, [PC, #268]
0x0BAE	0xF7FFFDED  BL	_GPIO_Digital_Input+0
0x0BB2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x0BB4	0xF2410100  MOVW	R1, #4096
0x0BB8	0x4840    LDR	R0, [PC, #256]
0x0BBA	0xF7FFFDAD  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x0BBE	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x0BC0	0x2901    CMP	R1, #1
0x0BC2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x0BC4	0xF2400101  MOVW	R1, #1
0x0BC8	0x483B    LDR	R0, [PC, #236]
0x0BCA	0xF7FFFDDF  BL	_GPIO_Digital_Input+0
0x0BCE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x0BD0	0xF2400101  MOVW	R1, #1
0x0BD4	0x4838    LDR	R0, [PC, #224]
0x0BD6	0xF7FFFD9F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x0BDA	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x0BDC	0x2901    CMP	R1, #1
0x0BDE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x0BE0	0xF2404100  MOVW	R1, #1024
0x0BE4	0x4836    LDR	R0, [PC, #216]
0x0BE6	0xF7FFFDD1  BL	_GPIO_Digital_Input+0
0x0BEA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x0BEC	0xF2404100  MOVW	R1, #1024
0x0BF0	0x4833    LDR	R0, [PC, #204]
0x0BF2	0xF7FFFD91  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x0BF6	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x0BF8	0x2901    CMP	R1, #1
0x0BFA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x0BFC	0xF2402100  MOVW	R1, #512
0x0C00	0x482F    LDR	R0, [PC, #188]
0x0C02	0xF7FFFDC3  BL	_GPIO_Digital_Input+0
0x0C06	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x0C08	0xF2402100  MOVW	R1, #512
0x0C0C	0x482C    LDR	R0, [PC, #176]
0x0C0E	0xF7FFFD83  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x0C12	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x0C14	0x2901    CMP	R1, #1
0x0C16	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x0C18	0xF2401100  MOVW	R1, #256
0x0C1C	0x4828    LDR	R0, [PC, #160]
0x0C1E	0xF7FFFDB5  BL	_GPIO_Digital_Input+0
0x0C22	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x0C24	0xF2401100  MOVW	R1, #256
0x0C28	0x4825    LDR	R0, [PC, #148]
0x0C2A	0xF7FFFD75  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x0C2E	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x0C30	0x2901    CMP	R1, #1
0x0C32	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x0C34	0xF2400140  MOVW	R1, #64
0x0C38	0x4822    LDR	R0, [PC, #136]
0x0C3A	0xF7FFFDA7  BL	_GPIO_Digital_Input+0
0x0C3E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x0C40	0xF2400140  MOVW	R1, #64
0x0C44	0x481F    LDR	R0, [PC, #124]
0x0C46	0xF7FFFD67  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x0C4A	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x0C4C	0x2901    CMP	R1, #1
0x0C4E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x0C50	0xF2400180  MOVW	R1, #128
0x0C54	0x481B    LDR	R0, [PC, #108]
0x0C56	0xF7FFFD99  BL	_GPIO_Digital_Input+0
0x0C5A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x0C5C	0xF2400180  MOVW	R1, #128
0x0C60	0x4818    LDR	R0, [PC, #96]
0x0C62	0xF7FFFD59  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x0C66	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x0C68	0x2001    MOVS	R0, #1
0x0C6A	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x0C6C	0x2800    CMP	R0, #0
0x0C6E	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x0C72	0x2801    CMP	R0, #1
0x0C74	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x0C78	0x2802    CMP	R0, #2
0x0C7A	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x0C7E	0x2803    CMP	R0, #3
0x0C80	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x0C84	0x2804    CMP	R0, #4
0x0C86	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x0C8A	0x2805    CMP	R0, #5
0x0C8C	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x0C90	0x2806    CMP	R0, #6
0x0C92	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x0C96	0x2807    CMP	R0, #7
0x0C98	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x0C9A	0x2808    CMP	R0, #8
0x0C9C	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x0C9E	0x2809    CMP	R0, #9
0x0CA0	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x0CA2	0x280A    CMP	R0, #10
0x0CA4	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x0CA6	0x280B    CMP	R0, #11
0x0CA8	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x0CAA	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x0CAC	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x0CAE	0xF8DDE000  LDR	LR, [SP, #0]
0x0CB2	0xB001    ADD	SP, SP, #4
0x0CB4	0x4770    BX	LR
0x0CB6	0xBF00    NOP
0x0CB8	0x08004001  	GPIOA_BASE+0
0x0CBC	0x10004001  	GPIOC_BASE+0
0x0CC0	0x14004001  	GPIOD_BASE+0
0x0CC4	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x078C	0xB081    SUB	SP, SP, #4
0x078E	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x0792	0xF04F0242  MOV	R2, #66
0x0796	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0798	0xF7FFFD7E  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x079C	0xF8DDE000  LDR	LR, [SP, #0]
0x07A0	0xB001    ADD	SP, SP, #4
0x07A2	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0298	0xB081    SUB	SP, SP, #4
0x029A	0xF8CDE000  STR	LR, [SP, #0]
0x029E	0xB28C    UXTH	R4, R1
0x02A0	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x02A2	0x4B77    LDR	R3, [PC, #476]
0x02A4	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x02A8	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x02AA	0x4618    MOV	R0, R3
0x02AC	0xF7FFFF50  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x02B0	0xF1B40FFF  CMP	R4, #255
0x02B4	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x02B6	0x4B73    LDR	R3, [PC, #460]
0x02B8	0x429D    CMP	R5, R3
0x02BA	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x02BC	0xF04F3333  MOV	R3, #858993459
0x02C0	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x02C2	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x02C4	0x2D42    CMP	R5, #66
0x02C6	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x02C8	0xF04F3344  MOV	R3, #1145324612
0x02CC	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x02CE	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x02D0	0xF64F73FF  MOVW	R3, #65535
0x02D4	0x429C    CMP	R4, R3
0x02D6	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x02D8	0x4B6A    LDR	R3, [PC, #424]
0x02DA	0x429D    CMP	R5, R3
0x02DC	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x02DE	0xF04F3333  MOV	R3, #858993459
0x02E2	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x02E4	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x02E6	0xF04F3333  MOV	R3, #858993459
0x02EA	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x02EC	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x02EE	0x2D42    CMP	R5, #66
0x02F0	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x02F2	0xF04F3344  MOV	R3, #1145324612
0x02F6	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x02F8	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x02FA	0xF04F3344  MOV	R3, #1145324612
0x02FE	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0300	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0302	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0304	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x0306	0xF0050301  AND	R3, R5, #1
0x030A	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x030C	0x2100    MOVS	R1, #0
0x030E	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0310	0xF0050302  AND	R3, R5, #2
0x0314	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x0316	0xF40573C0  AND	R3, R5, #384
0x031A	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x031C	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x031E	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0320	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0322	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0324	0xF0050304  AND	R3, R5, #4
0x0328	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x032A	0xF0050320  AND	R3, R5, #32
0x032E	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0330	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0332	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0334	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x0336	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x0338	0xF0050308  AND	R3, R5, #8
0x033C	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x033E	0xF0050320  AND	R3, R5, #32
0x0342	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x0344	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x0346	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x0348	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x034A	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x034C	0x4B4E    LDR	R3, [PC, #312]
0x034E	0xEA050303  AND	R3, R5, R3, LSL #0
0x0352	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x0354	0x2003    MOVS	R0, #3
0x0356	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x0358	0xF4057300  AND	R3, R5, #512
0x035C	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x035E	0x2002    MOVS	R0, #2
0x0360	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x0362	0xF4056380  AND	R3, R5, #1024
0x0366	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x0368	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x036A	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x036C	0xF005030C  AND	R3, R5, #12
0x0370	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x0372	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x0374	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x0376	0xF00403FF  AND	R3, R4, #255
0x037A	0xB29B    UXTH	R3, R3
0x037C	0x2B00    CMP	R3, #0
0x037E	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x0380	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x0382	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x0384	0xFA1FF884  UXTH	R8, R4
0x0388	0x4632    MOV	R2, R6
0x038A	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x038C	0x2808    CMP	R0, #8
0x038E	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x0390	0xF04F0301  MOV	R3, #1
0x0394	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x0398	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x039C	0x42A3    CMP	R3, R4
0x039E	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x03A0	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x03A2	0xF04F030F  MOV	R3, #15
0x03A6	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x03A8	0x43DB    MVN	R3, R3
0x03AA	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x03AE	0xFA01F305  LSL	R3, R1, R5
0x03B2	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x03B6	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x03B8	0xF4067381  AND	R3, R6, #258
0x03BC	0xF5B37F81  CMP	R3, #258
0x03C0	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x03C2	0xF2020414  ADDW	R4, R2, #20
0x03C6	0xF04F0301  MOV	R3, #1
0x03CA	0x4083    LSLS	R3, R0
0x03CC	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x03CE	0xF0060382  AND	R3, R6, #130
0x03D2	0x2B82    CMP	R3, #130
0x03D4	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x03D6	0xF2020410  ADDW	R4, R2, #16
0x03DA	0xF04F0301  MOV	R3, #1
0x03DE	0x4083    LSLS	R3, R0
0x03E0	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x03E2	0x462F    MOV	R7, R5
0x03E4	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x03E6	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x03E8	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x03EA	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x03EC	0xFA1FF088  UXTH	R0, R8
0x03F0	0x460F    MOV	R7, R1
0x03F2	0x4631    MOV	R1, R6
0x03F4	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x03F6	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x03F8	0x460F    MOV	R7, R1
0x03FA	0x4629    MOV	R1, R5
0x03FC	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x03FE	0xF1B00FFF  CMP	R0, #255
0x0402	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0404	0x1D33    ADDS	R3, R6, #4
0x0406	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x040A	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x040C	0x2A08    CMP	R2, #8
0x040E	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0410	0xF2020408  ADDW	R4, R2, #8
0x0414	0xF04F0301  MOV	R3, #1
0x0418	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x041C	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0420	0x42A3    CMP	R3, R4
0x0422	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0424	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x0426	0xF04F030F  MOV	R3, #15
0x042A	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x042C	0x43DB    MVN	R3, R3
0x042E	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x0432	0xFA07F305  LSL	R3, R7, R5
0x0436	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x043A	0xF4017381  AND	R3, R1, #258
0x043E	0xF5B37F81  CMP	R3, #258
0x0442	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x0444	0xF2060514  ADDW	R5, R6, #20
0x0448	0xF2020408  ADDW	R4, R2, #8
0x044C	0xF04F0301  MOV	R3, #1
0x0450	0x40A3    LSLS	R3, R4
0x0452	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x0454	0xF0010382  AND	R3, R1, #130
0x0458	0x2B82    CMP	R3, #130
0x045A	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x045C	0xF2060510  ADDW	R5, R6, #16
0x0460	0xF2020408  ADDW	R4, R2, #8
0x0464	0xF04F0301  MOV	R3, #1
0x0468	0x40A3    LSLS	R3, R4
0x046A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x046C	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x046E	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x0470	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x0472	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x0474	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x0478	0xF8DDE000  LDR	LR, [SP, #0]
0x047C	0xB001    ADD	SP, SP, #4
0x047E	0x4770    BX	LR
0x0480	0xFC00FFFF  	#-1024
0x0484	0x00140008  	#524308
0x0488	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0152	0x4919    LDR	R1, [PC, #100]
0x0154	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0158	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x015A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x015C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x015E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0160	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0162	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0164	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0166	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0168	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x016A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x016C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x016E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0170	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0172	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0174	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0176	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x017A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x017C	0x490F    LDR	R1, [PC, #60]
0x017E	0x4288    CMP	R0, R1
0x0180	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0182	0x490F    LDR	R1, [PC, #60]
0x0184	0x4288    CMP	R0, R1
0x0186	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0188	0x490E    LDR	R1, [PC, #56]
0x018A	0x4288    CMP	R0, R1
0x018C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x018E	0x490E    LDR	R1, [PC, #56]
0x0190	0x4288    CMP	R0, R1
0x0192	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0194	0x490D    LDR	R1, [PC, #52]
0x0196	0x4288    CMP	R0, R1
0x0198	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x019A	0x490D    LDR	R1, [PC, #52]
0x019C	0x4288    CMP	R0, R1
0x019E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x01A0	0x490C    LDR	R1, [PC, #48]
0x01A2	0x4288    CMP	R0, R1
0x01A4	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01A6	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x01A8	0x490B    LDR	R1, [PC, #44]
0x01AA	0x6809    LDR	R1, [R1, #0]
0x01AC	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01B0	0x4909    LDR	R1, [PC, #36]
0x01B2	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x01B4	0xB001    ADD	SP, SP, #4
0x01B6	0x4770    BX	LR
0x01B8	0xFC00FFFF  	#-1024
0x01BC	0x08004001  	#1073809408
0x01C0	0x0C004001  	#1073810432
0x01C4	0x10004001  	#1073811456
0x01C8	0x14004001  	#1073812480
0x01CC	0x18004001  	#1073813504
0x01D0	0x1C004001  	#1073814528
0x01D4	0x20004001  	#1073815552
0x01D8	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0718	0xB081    SUB	SP, SP, #4
0x071A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x071E	0x4A04    LDR	R2, [PC, #16]
0x0720	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0722	0xF7FFFDB9  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x0726	0xF8DDE000  LDR	LR, [SP, #0]
0x072A	0xB001    ADD	SP, SP, #4
0x072C	0x4770    BX	LR
0x072E	0xBF00    NOP
0x0730	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x0958	0xB081    SUB	SP, SP, #4
0x095A	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x095E	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x0960	0x2901    CMP	R1, #1
0x0962	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x0964	0xF2400120  MOVW	R1, #32
0x0968	0x4865    LDR	R0, [PC, #404]
0x096A	0xF7FFFF0F  BL	_GPIO_Digital_Input+0
0x096E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x0970	0xF2400120  MOVW	R1, #32
0x0974	0x4862    LDR	R0, [PC, #392]
0x0976	0xF7FFFECF  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x097A	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x097C	0x2901    CMP	R1, #1
0x097E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x0980	0xF2400108  MOVW	R1, #8
0x0984	0x485F    LDR	R0, [PC, #380]
0x0986	0xF7FFFF01  BL	_GPIO_Digital_Input+0
0x098A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x098C	0xF2400108  MOVW	R1, #8
0x0990	0x485C    LDR	R0, [PC, #368]
0x0992	0xF7FFFEC1  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x0996	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x0998	0x2901    CMP	R1, #1
0x099A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x099C	0xF2440100  MOVW	R1, #16384
0x09A0	0x4859    LDR	R0, [PC, #356]
0x09A2	0xF7FFFEF3  BL	_GPIO_Digital_Input+0
0x09A6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x09A8	0xF2440100  MOVW	R1, #16384
0x09AC	0x4856    LDR	R0, [PC, #344]
0x09AE	0xF7FFFEB3  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x09B2	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x09B4	0x2901    CMP	R1, #1
0x09B6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x09B8	0xF2404100  MOVW	R1, #1024
0x09BC	0x4851    LDR	R0, [PC, #324]
0x09BE	0xF7FFFEE5  BL	_GPIO_Digital_Input+0
0x09C2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x09C4	0xF2404100  MOVW	R1, #1024
0x09C8	0x484E    LDR	R0, [PC, #312]
0x09CA	0xF7FFFEA5  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x09CE	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x09D0	0x2901    CMP	R1, #1
0x09D2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x09D4	0xF6400100  MOVW	R1, #2048
0x09D8	0x484A    LDR	R0, [PC, #296]
0x09DA	0xF7FFFED7  BL	_GPIO_Digital_Input+0
0x09DE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x09E0	0xF6400100  MOVW	R1, #2048
0x09E4	0x4847    LDR	R0, [PC, #284]
0x09E6	0xF7FFFE97  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x09EA	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x09EC	0x2901    CMP	R1, #1
0x09EE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x09F0	0xF2410100  MOVW	R1, #4096
0x09F4	0x4843    LDR	R0, [PC, #268]
0x09F6	0xF7FFFEC9  BL	_GPIO_Digital_Input+0
0x09FA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x09FC	0xF2410100  MOVW	R1, #4096
0x0A00	0x4840    LDR	R0, [PC, #256]
0x0A02	0xF7FFFE89  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x0A06	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x0A08	0x2901    CMP	R1, #1
0x0A0A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x0A0C	0xF2410100  MOVW	R1, #4096
0x0A10	0x483D    LDR	R0, [PC, #244]
0x0A12	0xF7FFFEBB  BL	_GPIO_Digital_Input+0
0x0A16	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x0A18	0xF2410100  MOVW	R1, #4096
0x0A1C	0x483A    LDR	R0, [PC, #232]
0x0A1E	0xF7FFFE7B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x0A22	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x0A24	0x2901    CMP	R1, #1
0x0A26	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x0A28	0xF6400100  MOVW	R1, #2048
0x0A2C	0x4836    LDR	R0, [PC, #216]
0x0A2E	0xF7FFFEAD  BL	_GPIO_Digital_Input+0
0x0A32	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x0A34	0xF6400100  MOVW	R1, #2048
0x0A38	0x4833    LDR	R0, [PC, #204]
0x0A3A	0xF7FFFE6D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x0A3E	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x0A40	0x2901    CMP	R1, #1
0x0A42	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x0A44	0xF2400140  MOVW	R1, #64
0x0A48	0x482F    LDR	R0, [PC, #188]
0x0A4A	0xF7FFFE9F  BL	_GPIO_Digital_Input+0
0x0A4E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x0A50	0xF2400140  MOVW	R1, #64
0x0A54	0x482C    LDR	R0, [PC, #176]
0x0A56	0xF7FFFE5F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x0A5A	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x0A5C	0x2901    CMP	R1, #1
0x0A5E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x0A60	0xF2400120  MOVW	R1, #32
0x0A64	0x4828    LDR	R0, [PC, #160]
0x0A66	0xF7FFFE91  BL	_GPIO_Digital_Input+0
0x0A6A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x0A6C	0xF2400120  MOVW	R1, #32
0x0A70	0x4825    LDR	R0, [PC, #148]
0x0A72	0xF7FFFE51  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x0A76	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x0A78	0x2901    CMP	R1, #1
0x0A7A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x0A7C	0xF2400140  MOVW	R1, #64
0x0A80	0x4822    LDR	R0, [PC, #136]
0x0A82	0xF7FFFE83  BL	_GPIO_Digital_Input+0
0x0A86	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x0A88	0xF2400140  MOVW	R1, #64
0x0A8C	0x481F    LDR	R0, [PC, #124]
0x0A8E	0xF7FFFE43  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x0A92	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x0A94	0x2901    CMP	R1, #1
0x0A96	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x0A98	0xF2400180  MOVW	R1, #128
0x0A9C	0x481B    LDR	R0, [PC, #108]
0x0A9E	0xF7FFFE75  BL	_GPIO_Digital_Input+0
0x0AA2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x0AA4	0xF2400180  MOVW	R1, #128
0x0AA8	0x4818    LDR	R0, [PC, #96]
0x0AAA	0xF7FFFE35  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x0AAE	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x0AB0	0x2001    MOVS	R0, #1
0x0AB2	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x0AB4	0x2800    CMP	R0, #0
0x0AB6	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x0ABA	0x2801    CMP	R0, #1
0x0ABC	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x0AC0	0x2802    CMP	R0, #2
0x0AC2	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x0AC6	0x2803    CMP	R0, #3
0x0AC8	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x0ACC	0x2804    CMP	R0, #4
0x0ACE	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x0AD2	0x2805    CMP	R0, #5
0x0AD4	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x0AD8	0x2806    CMP	R0, #6
0x0ADA	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x0ADE	0x2807    CMP	R0, #7
0x0AE0	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x0AE2	0x2808    CMP	R0, #8
0x0AE4	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x0AE6	0x2809    CMP	R0, #9
0x0AE8	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x0AEA	0x280A    CMP	R0, #10
0x0AEC	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x0AEE	0x280B    CMP	R0, #11
0x0AF0	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x0AF2	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x0AF4	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x0AF6	0xF8DDE000  LDR	LR, [SP, #0]
0x0AFA	0xB001    ADD	SP, SP, #4
0x0AFC	0x4770    BX	LR
0x0AFE	0xBF00    NOP
0x0B00	0x08004001  	GPIOA_BASE+0
0x0B04	0x10004001  	GPIOC_BASE+0
0x0B08	0x14004001  	GPIOD_BASE+0
0x0B0C	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_mikrobus_spiInit:
;easymx_v7_STM32F107VC.c, 192 :: 		T_mikrobus_ret mikrobus_spiInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x12AC	0xB081    SUB	SP, SP, #4
0x12AE	0xF8CDE000  STR	LR, [SP, #0]
0x12B2	0x468B    MOV	R11, R1
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 44 (R11)
;easymx_v7_STM32F107VC.c, 194 :: 		switch( bus )
0x12B4	0xE009    B	L_mikrobus_spiInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 197 :: 		case _MIKROBUS1 : return _spiInit_1( cfg );
L_mikrobus_spiInit85:
0x12B6	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x12B8	0xF7FFFE0A  BL	easymx_v7_STM32F107VC__spiInit_1+0
0x12BC	0xE00A    B	L_end_mikrobus_spiInit
;easymx_v7_STM32F107VC.c, 200 :: 		case _MIKROBUS2 : return _spiInit_2( cfg );
L_mikrobus_spiInit86:
; cfg start address is: 44 (R11)
0x12BE	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x12C0	0xF7FFFE24  BL	easymx_v7_STM32F107VC__spiInit_2+0
0x12C4	0xE006    B	L_end_mikrobus_spiInit
;easymx_v7_STM32F107VC.c, 214 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_spiInit87:
0x12C6	0x2001    MOVS	R0, #1
0x12C8	0xE004    B	L_end_mikrobus_spiInit
;easymx_v7_STM32F107VC.c, 215 :: 		}
L_mikrobus_spiInit83:
; cfg start address is: 44 (R11)
; bus start address is: 0 (R0)
0x12CA	0x2800    CMP	R0, #0
0x12CC	0xD0F3    BEQ	L_mikrobus_spiInit85
0x12CE	0x2801    CMP	R0, #1
0x12D0	0xD0F5    BEQ	L_mikrobus_spiInit86
; bus end address is: 0 (R0)
; cfg end address is: 44 (R11)
0x12D2	0xE7F8    B	L_mikrobus_spiInit87
;easymx_v7_STM32F107VC.c, 217 :: 		}
L_end_mikrobus_spiInit:
0x12D4	0xF8DDE000  LDR	LR, [SP, #0]
0x12D8	0xB001    ADD	SP, SP, #4
0x12DA	0x4770    BX	LR
; end of _mikrobus_spiInit
easymx_v7_STM32F107VC__spiInit_1:
;__em_f107vc_spi.c, 27 :: 		static T_mikrobus_ret _spiInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x0ED0	0xB081    SUB	SP, SP, #4
0x0ED2	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_spi.c, 29 :: 		SPI3_Init_Advanced( (unsigned char)cfg[0], (long)cfg[1], &_GPIO_MODULE_SPI3_PC10_11_12 );
0x0ED6	0x1D01    ADDS	R1, R0, #4
0x0ED8	0x680A    LDR	R2, [R1, #0]
0x0EDA	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x0EDC	0xB2C8    UXTB	R0, R1
0x0EDE	0x4611    MOV	R1, R2
0x0EE0	0x4A03    LDR	R2, [PC, #12]
0x0EE2	0xF7FFFC5F  BL	_SPI3_Init_Advanced+0
;__em_f107vc_spi.c, 30 :: 		return _MIKROBUS_OK;
0x0EE6	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_spi.c, 31 :: 		}
L_end__spiInit_1:
0x0EE8	0xF8DDE000  LDR	LR, [SP, #0]
0x0EEC	0xB001    ADD	SP, SP, #4
0x0EEE	0x4770    BX	LR
0x0EF0	0x25A40000  	__GPIO_MODULE_SPI3_PC10_11_12+0
; end of easymx_v7_STM32F107VC__spiInit_1
_SPI3_Init_Advanced:
;__Lib_SPI_123.c, 133 :: 		
; module start address is: 8 (R2)
0x07A4	0xB083    SUB	SP, SP, #12
0x07A6	0xF8CDE000  STR	LR, [SP, #0]
0x07AA	0xF88D0004  STRB	R0, [SP, #4]
0x07AE	0x9102    STR	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_123.c, 134 :: 		
0x07B0	0x4C0B    LDR	R4, [PC, #44]
0x07B2	0x4B0C    LDR	R3, [PC, #48]
0x07B4	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 135 :: 		
0x07B6	0x4C0C    LDR	R4, [PC, #48]
0x07B8	0x4B0C    LDR	R3, [PC, #48]
0x07BA	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 137 :: 		
0x07BC	0x2401    MOVS	R4, #1
0x07BE	0xB264    SXTB	R4, R4
0x07C0	0x4B0B    LDR	R3, [PC, #44]
0x07C2	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 138 :: 		
0x07C4	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x07C6	0xF7FFFE61  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_123.c, 140 :: 		
0x07CA	0x9A02    LDR	R2, [SP, #8]
0x07CC	0xF89D1004  LDRB	R1, [SP, #4]
0x07D0	0x4808    LDR	R0, [PC, #32]
0x07D2	0xF7FFFEE3  BL	__Lib_SPI_123_SPIx_Init_Advanced+0
;__Lib_SPI_123.c, 141 :: 		
L_end_SPI3_Init_Advanced:
0x07D6	0xF8DDE000  LDR	LR, [SP, #0]
0x07DA	0xB003    ADD	SP, SP, #12
0x07DC	0x4770    BX	LR
0x07DE	0xBF00    NOP
0x07E0	0xFFFFFFFF  	_SPI3_Read+0
0x07E4	0x05042000  	_SPI_Rd_Ptr+0
0x07E8	0x06190000  	_SPI3_Write+0
0x07EC	0x05082000  	_SPI_Wr_Ptr+0
0x07F0	0x03BC4242  	RCC_APB1ENR+0
0x07F4	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Init_Advanced
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x048C	0xB081    SUB	SP, SP, #4
0x048E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0492	0x2201    MOVS	R2, #1
0x0494	0xB252    SXTB	R2, R2
0x0496	0x493E    LDR	R1, [PC, #248]
0x0498	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x049A	0xF2000168  ADDW	R1, R0, #104
0x049E	0x680B    LDR	R3, [R1, #0]
0x04A0	0xF06F6100  MVN	R1, #134217728
0x04A4	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x04A8	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x04AA	0xF0036100  AND	R1, R3, #134217728
0x04AE	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x04B0	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x04B2	0xF0024100  AND	R1, R2, #-2147483648
0x04B6	0xF1B14F00  CMP	R1, #-2147483648
0x04BA	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x04BC	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x04BE	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x04C0	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x04C2	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x04C4	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x04C6	0xF4042170  AND	R1, R4, #983040
0x04CA	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x04CC	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x04CE	0xF64F71FF  MOVW	R1, #65535
0x04D2	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x04D6	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x04D8	0xF4041140  AND	R1, R4, #3145728
0x04DC	0xF5B11F40  CMP	R1, #3145728
0x04E0	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x04E2	0xF06F6170  MVN	R1, #251658240
0x04E6	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x04EA	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x04EC	0x492A    LDR	R1, [PC, #168]
0x04EE	0x680A    LDR	R2, [R1, #0]
0x04F0	0xF06F6170  MVN	R1, #251658240
0x04F4	0x400A    ANDS	R2, R1
0x04F6	0x4928    LDR	R1, [PC, #160]
0x04F8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x04FA	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x04FC	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x04FE	0xF4041180  AND	R1, R4, #1048576
0x0502	0xF5B11F80  CMP	R1, #1048576
0x0506	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0508	0xF04F0103  MOV	R1, #3
0x050C	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x050E	0x43C9    MVN	R1, R1
0x0510	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0514	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0518	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x051A	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x051C	0x0D61    LSRS	R1, R4, #21
0x051E	0x0109    LSLS	R1, R1, #4
0x0520	0xFA05F101  LSL	R1, R5, R1
0x0524	0x43C9    MVN	R1, R1
0x0526	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0528	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x052C	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x052E	0x0D61    LSRS	R1, R4, #21
0x0530	0x0109    LSLS	R1, R1, #4
0x0532	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0536	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0538	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x053A	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x053E	0xF1B14F00  CMP	R1, #-2147483648
0x0542	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0544	0x4913    LDR	R1, [PC, #76]
0x0546	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0548	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x054A	0x4913    LDR	R1, [PC, #76]
0x054C	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x054E	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x0552	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0554	0xEA4F018A  LSL	R1, R10, #2
0x0558	0xEB090101  ADD	R1, R9, R1, LSL #0
0x055C	0x6809    LDR	R1, [R1, #0]
0x055E	0xF1B13FFF  CMP	R1, #-1
0x0562	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0564	0xF1090134  ADD	R1, R9, #52
0x0568	0xEA4F038A  LSL	R3, R10, #2
0x056C	0x18C9    ADDS	R1, R1, R3
0x056E	0x6809    LDR	R1, [R1, #0]
0x0570	0x460A    MOV	R2, R1
0x0572	0xEB090103  ADD	R1, R9, R3, LSL #0
0x0576	0x6809    LDR	R1, [R1, #0]
0x0578	0x4608    MOV	R0, R1
0x057A	0x4611    MOV	R1, R2
0x057C	0xF7FFFE40  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0580	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0584	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0586	0xF8DDE000  LDR	LR, [SP, #0]
0x058A	0xB001    ADD	SP, SP, #4
0x058C	0x4770    BX	LR
0x058E	0xBF00    NOP
0x0590	0x03004242  	RCC_APB2ENRbits+0
0x0594	0x001C4001  	AFIO_MAPR2+0
0x0598	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0200	0xB083    SUB	SP, SP, #12
0x0202	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0206	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x020A	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x020C	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x020E	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x0212	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0214	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x0216	0x4A19    LDR	R2, [PC, #100]
0x0218	0x9202    STR	R2, [SP, #8]
0x021A	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x021C	0x4A18    LDR	R2, [PC, #96]
0x021E	0x9202    STR	R2, [SP, #8]
0x0220	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x0222	0x4A18    LDR	R2, [PC, #96]
0x0224	0x9202    STR	R2, [SP, #8]
0x0226	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0228	0x4A17    LDR	R2, [PC, #92]
0x022A	0x9202    STR	R2, [SP, #8]
0x022C	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x022E	0x4A17    LDR	R2, [PC, #92]
0x0230	0x9202    STR	R2, [SP, #8]
0x0232	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0234	0x4A16    LDR	R2, [PC, #88]
0x0236	0x9202    STR	R2, [SP, #8]
0x0238	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x023A	0x4A16    LDR	R2, [PC, #88]
0x023C	0x9202    STR	R2, [SP, #8]
0x023E	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x0240	0x2800    CMP	R0, #0
0x0242	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x0244	0x2801    CMP	R0, #1
0x0246	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x0248	0x2802    CMP	R0, #2
0x024A	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x024C	0x2803    CMP	R0, #3
0x024E	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x0250	0x2804    CMP	R0, #4
0x0252	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x0254	0x2805    CMP	R0, #5
0x0256	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x0258	0x2806    CMP	R0, #6
0x025A	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x025C	0x2201    MOVS	R2, #1
0x025E	0xB212    SXTH	R2, R2
0x0260	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x0262	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x0266	0x9802    LDR	R0, [SP, #8]
0x0268	0x460A    MOV	R2, R1
0x026A	0xF8BD1004  LDRH	R1, [SP, #4]
0x026E	0xF000F813  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x0272	0xF8DDE000  LDR	LR, [SP, #0]
0x0276	0xB003    ADD	SP, SP, #12
0x0278	0x4770    BX	LR
0x027A	0xBF00    NOP
0x027C	0x08004001  	#1073809408
0x0280	0x0C004001  	#1073810432
0x0284	0x10004001  	#1073811456
0x0288	0x14004001  	#1073812480
0x028C	0x18004001  	#1073813504
0x0290	0x1C004001  	#1073814528
0x0294	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
__Lib_SPI_123_SPIx_Init_Advanced:
;__Lib_SPI_123.c, 53 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x059C	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_123.c, 56 :: 		
0x059E	0x2300    MOVS	R3, #0
0x05A0	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 58 :: 		
0x05A2	0x00CB    LSLS	R3, R1, #3
0x05A4	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x05A6	0xEA420303  ORR	R3, R2, R3, LSL #0
;__Lib_SPI_123.c, 60 :: 		
0x05AA	0x6804    LDR	R4, [R0, #0]
0x05AC	0xB29B    UXTH	R3, R3
0x05AE	0xEA440303  ORR	R3, R4, R3, LSL #0
0x05B2	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 61 :: 		
0x05B4	0x1D05    ADDS	R5, R0, #4
0x05B6	0x1413    ASRS	R3, R2, #16
; config end address is: 8 (R2)
0x05B8	0x461C    MOV	R4, R3
0x05BA	0x682B    LDR	R3, [R5, #0]
0x05BC	0xF3640382  BFI	R3, R4, #2, #1
0x05C0	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 63 :: 		
0x05C2	0xF200051C  ADDW	R5, R0, #28
0x05C6	0x2400    MOVS	R4, #0
0x05C8	0x682B    LDR	R3, [R5, #0]
0x05CA	0xF36423CB  BFI	R3, R4, #11, #1
0x05CE	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 64 :: 		
0x05D0	0x2401    MOVS	R4, #1
0x05D2	0x6803    LDR	R3, [R0, #0]
0x05D4	0xF3641386  BFI	R3, R4, #6, #1
0x05D8	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 65 :: 		
L_end_SPIx_Init_Advanced:
0x05DA	0xB001    ADD	SP, SP, #4
0x05DC	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Init_Advanced
easymx_v7_STM32F107VC__spiInit_2:
;__em_f107vc_spi.c, 33 :: 		static T_mikrobus_ret _spiInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x0F0C	0xB081    SUB	SP, SP, #4
0x0F0E	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_spi.c, 35 :: 		SPI3_Init_Advanced( (unsigned char)cfg[0], (long)cfg[1], &_GPIO_MODULE_SPI3_PC10_11_12 );
0x0F12	0x1D01    ADDS	R1, R0, #4
0x0F14	0x680A    LDR	R2, [R1, #0]
0x0F16	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x0F18	0xB2C8    UXTB	R0, R1
0x0F1A	0x4611    MOV	R1, R2
0x0F1C	0x4A03    LDR	R2, [PC, #12]
0x0F1E	0xF7FFFC41  BL	_SPI3_Init_Advanced+0
;__em_f107vc_spi.c, 36 :: 		return _MIKROBUS_OK;
0x0F22	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_spi.c, 37 :: 		}
L_end__spiInit_2:
0x0F24	0xF8DDE000  LDR	LR, [SP, #0]
0x0F28	0xB001    ADD	SP, SP, #4
0x0F2A	0x4770    BX	LR
0x0F2C	0x25A40000  	__GPIO_MODULE_SPI3_PC10_11_12+0
; end of easymx_v7_STM32F107VC__spiInit_2
_applicationInit:
;Click_Matrix_RGB_STM.c, 47 :: 		void applicationInit()
0x1520	0xB081    SUB	SP, SP, #4
0x1522	0xF8CDE000  STR	LR, [SP, #0]
;Click_Matrix_RGB_STM.c, 49 :: 		matrixrgb_spiDriverInit( (T_MATRIXRGB_P)&_MIKROBUS1_GPIO, (T_MATRIXRGB_P)&_MIKROBUS1_SPI );
0x1526	0x4918    LDR	R1, [PC, #96]
0x1528	0x4818    LDR	R0, [PC, #96]
0x152A	0xF7FFFED7  BL	_matrixrgb_spiDriverInit+0
;Click_Matrix_RGB_STM.c, 50 :: 		matrixrgb_deviceReset();
0x152E	0xF7FFFF7D  BL	_matrixrgb_deviceReset+0
;Click_Matrix_RGB_STM.c, 52 :: 		matrixrgb_deviceInit( _MATRIXRGB_PATTERN_1_MAP_5MM );
0x1532	0x2000    MOVS	R0, __MATRIXRGB_PATTERN_1_MAP_5MM
0x1534	0xF7FFFEE6  BL	_matrixrgb_deviceInit+0
;Click_Matrix_RGB_STM.c, 53 :: 		matrixrgb_setPower( 1 );
0x1538	0x2001    MOVS	R0, #1
0x153A	0xF7FFFE7D  BL	_matrixrgb_setPower+0
;Click_Matrix_RGB_STM.c, 54 :: 		Delay_ms( 1000 );
0x153E	0xF64127FF  MOVW	R7, #6911
0x1542	0xF2C007B7  MOVT	R7, #183
0x1546	0xBF00    NOP
0x1548	0xBF00    NOP
L_applicationInit2:
0x154A	0x1E7F    SUBS	R7, R7, #1
0x154C	0xD1FD    BNE	L_applicationInit2
0x154E	0xBF00    NOP
0x1550	0xBF00    NOP
0x1552	0xBF00    NOP
;Click_Matrix_RGB_STM.c, 56 :: 		matrixrgb_setFont( &Arial9x9[0], 0xFFFF, _MATRIXRGB_FONT_HORIZONTAL );
0x1554	0x2200    MOVS	R2, __MATRIXRGB_FONT_HORIZONTAL
0x1556	0xF64F71FF  MOVW	R1, #65535
0x155A	0x480D    LDR	R0, [PC, #52]
0x155C	0xF7FFFE42  BL	_matrixrgb_setFont+0
;Click_Matrix_RGB_STM.c, 57 :: 		matrixrgb_fillScreen( 0xFFFF );
0x1560	0xF64F70FF  MOVW	R0, #65535
0x1564	0xF7FFFDFE  BL	_matrixrgb_fillScreen+0
;Click_Matrix_RGB_STM.c, 58 :: 		Delay_ms( 1000 );
0x1568	0xF64127FF  MOVW	R7, #6911
0x156C	0xF2C007B7  MOVT	R7, #183
L_applicationInit4:
0x1570	0x1E7F    SUBS	R7, R7, #1
0x1572	0xD1FD    BNE	L_applicationInit4
0x1574	0xBF00    NOP
0x1576	0xBF00    NOP
0x1578	0xBF00    NOP
0x157A	0xBF00    NOP
0x157C	0xBF00    NOP
;Click_Matrix_RGB_STM.c, 59 :: 		}
L_end_applicationInit:
0x157E	0xF8DDE000  LDR	LR, [SP, #0]
0x1582	0xB001    ADD	SP, SP, #4
0x1584	0x4770    BX	LR
0x1586	0xBF00    NOP
0x1588	0x26780000  	__MIKROBUS1_SPI+0
0x158C	0x26100000  	__MIKROBUS1_GPIO+0
0x1590	0x00002000  	Click_Matrix_RGB_STM_Arial9x9+0
; end of _applicationInit
_matrixrgb_spiDriverInit:
;__matrixrgb_driver.c, 80 :: 		void matrixrgb_spiDriverInit(T_MATRIXRGB_P gpioObj, T_MATRIXRGB_P spiObj)
; spiObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x12DC	0xB081    SUB	SP, SP, #4
0x12DE	0xF8CDE000  STR	LR, [SP, #0]
0x12E2	0x4603    MOV	R3, R0
; spiObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 12 (R3)
; spiObj start address is: 4 (R1)
;__matrixrgb_driver.c, 82 :: 		hal_spiMap( (T_HAL_P)spiObj );
0x12E4	0x4608    MOV	R0, R1
; spiObj end address is: 4 (R1)
0x12E6	0xF7FFFAC7  BL	__matrixrgb_driver_hal_spiMap+0
;__matrixrgb_driver.c, 83 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x12EA	0x4618    MOV	R0, R3
; gpioObj end address is: 12 (R3)
0x12EC	0xF7FFFAAE  BL	__matrixrgb_driver_hal_gpioMap+0
;__matrixrgb_driver.c, 85 :: 		hal_gpio_csSet( 1 );
0x12F0	0x2001    MOVS	R0, #1
0x12F2	0x4C03    LDR	R4, [PC, #12]
0x12F4	0x6824    LDR	R4, [R4, #0]
0x12F6	0x47A0    BLX	R4
;__matrixrgb_driver.c, 86 :: 		}
L_end_matrixrgb_spiDriverInit:
0x12F8	0xF8DDE000  LDR	LR, [SP, #0]
0x12FC	0xB001    ADD	SP, SP, #4
0x12FE	0x4770    BX	LR
0x1300	0x05182000  	__matrixrgb_driver_hal_gpio_csSet+0
; end of _matrixrgb_spiDriverInit
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F00	0x4901    LDR	R1, [PC, #4]
0x0F02	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x0F04	0x4770    BX	LR
0x0F06	0xBF00    NOP
0x0F08	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0EF4	0x4901    LDR	R1, [PC, #4]
0x0EF6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x0EF8	0x4770    BX	LR
0x0EFA	0xBF00    NOP
0x0EFC	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x091C	0x4901    LDR	R1, [PC, #4]
0x091E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x0920	0x4770    BX	LR
0x0922	0xBF00    NOP
0x0924	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0910	0x4901    LDR	R1, [PC, #4]
0x0912	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x0914	0x4770    BX	LR
0x0916	0xBF00    NOP
0x0918	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0904	0x4901    LDR	R1, [PC, #4]
0x0906	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x0908	0x4770    BX	LR
0x090A	0xBF00    NOP
0x090C	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0928	0x4901    LDR	R1, [PC, #4]
0x092A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x092C	0x4770    BX	LR
0x092E	0xBF00    NOP
0x0930	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x094C	0x4901    LDR	R1, [PC, #4]
0x094E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x0950	0x4770    BX	LR
0x0952	0xBF00    NOP
0x0954	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0940	0x4901    LDR	R1, [PC, #4]
0x0942	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x0944	0x4770    BX	LR
0x0946	0xBF00    NOP
0x0948	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0934	0x4901    LDR	R1, [PC, #4]
0x0936	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x0938	0x4770    BX	LR
0x093A	0xBF00    NOP
0x093C	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F30	0x4901    LDR	R1, [PC, #4]
0x0F32	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x0F34	0x4770    BX	LR
0x0F36	0xBF00    NOP
0x0F38	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0FA8	0x4901    LDR	R1, [PC, #4]
0x0FAA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x0FAC	0x4770    BX	LR
0x0FAE	0xBF00    NOP
0x0FB0	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F9C	0x4901    LDR	R1, [PC, #4]
0x0F9E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x0FA0	0x4770    BX	LR
0x0FA2	0xBF00    NOP
0x0FA4	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F90	0x4901    LDR	R1, [PC, #4]
0x0F92	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x0F94	0x4770    BX	LR
0x0F96	0xBF00    NOP
0x0F98	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0FB4	0x4901    LDR	R1, [PC, #4]
0x0FB6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x0FB8	0x4770    BX	LR
0x0FBA	0xBF00    NOP
0x0FBC	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0FC0	0x4901    LDR	R1, [PC, #4]
0x0FC2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x0FC4	0x4770    BX	LR
0x0FC6	0xBF00    NOP
0x0FC8	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0FCC	0x4901    LDR	R1, [PC, #4]
0x0FCE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x0FD0	0x4770    BX	LR
0x0FD2	0xBF00    NOP
0x0FD4	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F84	0x4901    LDR	R1, [PC, #4]
0x0F86	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x0F88	0x4770    BX	LR
0x0F8A	0xBF00    NOP
0x0F8C	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F54	0x4901    LDR	R1, [PC, #4]
0x0F56	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x0F58	0x4770    BX	LR
0x0F5A	0xBF00    NOP
0x0F5C	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F48	0x4901    LDR	R1, [PC, #4]
0x0F4A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x0F4C	0x4770    BX	LR
0x0F4E	0xBF00    NOP
0x0F50	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F78	0x4901    LDR	R1, [PC, #4]
0x0F7A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x0F7C	0x4770    BX	LR
0x0F7E	0xBF00    NOP
0x0F80	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F6C	0x4901    LDR	R1, [PC, #4]
0x0F6E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x0F70	0x4770    BX	LR
0x0F72	0xBF00    NOP
0x0F74	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F60	0x4901    LDR	R1, [PC, #4]
0x0F62	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x0F64	0x4770    BX	LR
0x0F66	0xBF00    NOP
0x0F68	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F3C	0x4901    LDR	R1, [PC, #4]
0x0F3E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x0F40	0x4770    BX	LR
0x0F42	0xBF00    NOP
0x0F44	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x08F8	0x4901    LDR	R1, [PC, #4]
0x08FA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x08FC	0x4770    BX	LR
0x08FE	0xBF00    NOP
0x0900	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
__matrixrgb_driver_hal_spiMap:
;__hal_stm32.c, 33 :: 		static void hal_spiMap(T_HAL_P spiObj)
; spiObj start address is: 0 (R0)
; spiObj end address is: 0 (R0)
; spiObj start address is: 0 (R0)
;__hal_stm32.c, 37 :: 		fp_spiWrite = tmp->spiWrite;
0x0878	0x6802    LDR	R2, [R0, #0]
0x087A	0x4903    LDR	R1, [PC, #12]
0x087C	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 38 :: 		fp_spiRead  = tmp->spiRead;
0x087E	0x1D01    ADDS	R1, R0, #4
; spiObj end address is: 0 (R0)
0x0880	0x680A    LDR	R2, [R1, #0]
0x0882	0x4902    LDR	R1, [PC, #8]
0x0884	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 39 :: 		}
L_end_hal_spiMap:
0x0886	0x4770    BX	LR
0x0888	0x05342000  	__matrixrgb_driver_fp_spiWrite+0
0x088C	0x05382000  	__matrixrgb_driver_fp_spiRead+0
; end of __matrixrgb_driver_hal_spiMap
__matrixrgb_driver_hal_gpioMap:
;__matrixrgb_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__matrixrgb_hal.c, 347 :: 		hal_gpio_intGet = tmp->gpioGet[ __INT_PIN_INPUT__ ];
0x084C	0xF2000130  ADDW	R1, R0, #48
0x0850	0x311C    ADDS	R1, #28
0x0852	0x680A    LDR	R2, [R1, #0]
0x0854	0x4905    LDR	R1, [PC, #20]
0x0856	0x600A    STR	R2, [R1, #0]
;__matrixrgb_hal.c, 365 :: 		hal_gpio_csSet = tmp->gpioSet[ __CS_PIN_OUTPUT__ ];
0x0858	0xF2000108  ADDW	R1, R0, #8
0x085C	0x680A    LDR	R2, [R1, #0]
0x085E	0x4904    LDR	R1, [PC, #16]
0x0860	0x600A    STR	R2, [R1, #0]
;__matrixrgb_hal.c, 368 :: 		hal_gpio_rstSet = tmp->gpioSet[ __RST_PIN_OUTPUT__ ];
0x0862	0x1D01    ADDS	R1, R0, #4
; gpioObj end address is: 0 (R0)
0x0864	0x680A    LDR	R2, [R1, #0]
0x0866	0x4903    LDR	R1, [PC, #12]
0x0868	0x600A    STR	R2, [R1, #0]
;__matrixrgb_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x086A	0x4770    BX	LR
0x086C	0x05142000  	__matrixrgb_driver_hal_gpio_intGet+0
0x0870	0x05182000  	__matrixrgb_driver_hal_gpio_csSet+0
0x0874	0x05302000  	__matrixrgb_driver_hal_gpio_rstSet+0
; end of __matrixrgb_driver_hal_gpioMap
_matrixrgb_deviceReset:
;__matrixrgb_driver.c, 117 :: 		void matrixrgb_deviceReset()
0x142C	0xB081    SUB	SP, SP, #4
0x142E	0xF8CDE000  STR	LR, [SP, #0]
;__matrixrgb_driver.c, 119 :: 		hal_gpio_rstSet(1);
0x1432	0x2001    MOVS	R0, #1
0x1434	0x4C0A    LDR	R4, [PC, #40]
0x1436	0x6824    LDR	R4, [R4, #0]
0x1438	0x47A0    BLX	R4
;__matrixrgb_driver.c, 120 :: 		Delay_100ms();
0x143A	0xF7FFFA51  BL	_Delay_100ms+0
;__matrixrgb_driver.c, 121 :: 		hal_gpio_rstSet(0);
0x143E	0x2000    MOVS	R0, #0
0x1440	0x4C07    LDR	R4, [PC, #28]
0x1442	0x6824    LDR	R4, [R4, #0]
0x1444	0x47A0    BLX	R4
;__matrixrgb_driver.c, 122 :: 		Delay_100ms();
0x1446	0xF7FFFA4B  BL	_Delay_100ms+0
;__matrixrgb_driver.c, 123 :: 		hal_gpio_rstSet(1);
0x144A	0x2001    MOVS	R0, #1
0x144C	0x4C04    LDR	R4, [PC, #16]
0x144E	0x6824    LDR	R4, [R4, #0]
0x1450	0x47A0    BLX	R4
;__matrixrgb_driver.c, 124 :: 		Delay_100ms();
0x1452	0xF7FFFA45  BL	_Delay_100ms+0
;__matrixrgb_driver.c, 125 :: 		}
L_end_matrixrgb_deviceReset:
0x1456	0xF8DDE000  LDR	LR, [SP, #0]
0x145A	0xB001    ADD	SP, SP, #4
0x145C	0x4770    BX	LR
0x145E	0xBF00    NOP
0x1460	0x05302000  	__matrixrgb_driver_hal_gpio_rstSet+0
; end of _matrixrgb_deviceReset
_Delay_100ms:
;__Lib_Delays.c, 53 :: 		void Delay_100ms() {
;__Lib_Delays.c, 54 :: 		Delay_ms(100);
0x08E0	0xF644777F  MOVW	R7, #20351
0x08E4	0xF2C00712  MOVT	R7, #18
L_Delay_100ms20:
0x08E8	0x1E7F    SUBS	R7, R7, #1
0x08EA	0xD1FD    BNE	L_Delay_100ms20
0x08EC	0xBF00    NOP
0x08EE	0xBF00    NOP
0x08F0	0xBF00    NOP
0x08F2	0xBF00    NOP
0x08F4	0xBF00    NOP
;__Lib_Delays.c, 55 :: 		}
L_end_Delay_100ms:
0x08F6	0x4770    BX	LR
; end of _Delay_100ms
_matrixrgb_deviceInit:
;__matrixrgb_driver.c, 128 :: 		matrixrgb_deviceInit( const uint8_t pattern_id )
; pattern_id start address is: 0 (R0)
0x1304	0xB081    SUB	SP, SP, #4
0x1306	0xF8CDE000  STR	LR, [SP, #0]
; pattern_id end address is: 0 (R0)
; pattern_id start address is: 0 (R0)
;__matrixrgb_driver.c, 132 :: 		switch (pattern_id)
0x130A	0xE059    B	L_matrixrgb_deviceInit6
;__matrixrgb_driver.c, 134 :: 		case 0: case 1:
L_matrixrgb_deviceInit8:
L_matrixrgb_deviceInit9:
;__matrixrgb_driver.c, 135 :: 		_pix_w = 32;
0x130C	0x2220    MOVS	R2, #32
0x130E	0x4944    LDR	R1, [PC, #272]
0x1310	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 136 :: 		_pix_h = 32;
0x1312	0x2220    MOVS	R2, #32
0x1314	0x4943    LDR	R1, [PC, #268]
0x1316	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 137 :: 		_ram_s = 1024;
0x1318	0xF2404200  MOVW	R2, #1024
0x131C	0x4942    LDR	R1, [PC, #264]
0x131E	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 138 :: 		break;
0x1320	0xE075    B	L_matrixrgb_deviceInit7
;__matrixrgb_driver.c, 139 :: 		case 2: case 3:
L_matrixrgb_deviceInit10:
L_matrixrgb_deviceInit11:
;__matrixrgb_driver.c, 140 :: 		_pix_w = 64;
0x1322	0x2240    MOVS	R2, #64
0x1324	0x493E    LDR	R1, [PC, #248]
0x1326	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 141 :: 		_pix_h = 32;
0x1328	0x2220    MOVS	R2, #32
0x132A	0x493E    LDR	R1, [PC, #248]
0x132C	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 142 :: 		_ram_s = 2048;
0x132E	0xF6400200  MOVW	R2, #2048
0x1332	0x493D    LDR	R1, [PC, #244]
0x1334	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 143 :: 		break;
0x1336	0xE06A    B	L_matrixrgb_deviceInit7
;__matrixrgb_driver.c, 144 :: 		case 4: case 5:
L_matrixrgb_deviceInit12:
L_matrixrgb_deviceInit13:
;__matrixrgb_driver.c, 145 :: 		_pix_w = 32;
0x1338	0x2220    MOVS	R2, #32
0x133A	0x4939    LDR	R1, [PC, #228]
0x133C	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 146 :: 		_pix_h = 64;
0x133E	0x2240    MOVS	R2, #64
0x1340	0x4938    LDR	R1, [PC, #224]
0x1342	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 147 :: 		_ram_s = 2048;
0x1344	0xF6400200  MOVW	R2, #2048
0x1348	0x4937    LDR	R1, [PC, #220]
0x134A	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 148 :: 		break;
0x134C	0xE05F    B	L_matrixrgb_deviceInit7
;__matrixrgb_driver.c, 149 :: 		case 6: case 7:
L_matrixrgb_deviceInit14:
L_matrixrgb_deviceInit15:
;__matrixrgb_driver.c, 150 :: 		_pix_w = 96;
0x134E	0x2260    MOVS	R2, #96
0x1350	0x4933    LDR	R1, [PC, #204]
0x1352	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 151 :: 		_pix_h = 32;
0x1354	0x2220    MOVS	R2, #32
0x1356	0x4933    LDR	R1, [PC, #204]
0x1358	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 152 :: 		_ram_s = 3072;
0x135A	0xF6404200  MOVW	R2, #3072
0x135E	0x4932    LDR	R1, [PC, #200]
0x1360	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 153 :: 		break;
0x1362	0xE054    B	L_matrixrgb_deviceInit7
;__matrixrgb_driver.c, 154 :: 		case 8: case 9:
L_matrixrgb_deviceInit16:
L_matrixrgb_deviceInit17:
;__matrixrgb_driver.c, 155 :: 		_pix_w = 32;
0x1364	0x2220    MOVS	R2, #32
0x1366	0x492E    LDR	R1, [PC, #184]
0x1368	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 156 :: 		_pix_h = 96;
0x136A	0x2260    MOVS	R2, #96
0x136C	0x492D    LDR	R1, [PC, #180]
0x136E	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 157 :: 		_ram_s = 3072;
0x1370	0xF6404200  MOVW	R2, #3072
0x1374	0x492C    LDR	R1, [PC, #176]
0x1376	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 158 :: 		break;
0x1378	0xE049    B	L_matrixrgb_deviceInit7
;__matrixrgb_driver.c, 159 :: 		case 10: case 11:
L_matrixrgb_deviceInit18:
L_matrixrgb_deviceInit19:
;__matrixrgb_driver.c, 160 :: 		_pix_w = 128;
0x137A	0x2280    MOVS	R2, #128
0x137C	0x4928    LDR	R1, [PC, #160]
0x137E	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 161 :: 		_pix_h = 32;
0x1380	0x2220    MOVS	R2, #32
0x1382	0x4928    LDR	R1, [PC, #160]
0x1384	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 162 :: 		_ram_s = 4096;
0x1386	0xF2410200  MOVW	R2, #4096
0x138A	0x4927    LDR	R1, [PC, #156]
0x138C	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 163 :: 		break;
0x138E	0xE03E    B	L_matrixrgb_deviceInit7
;__matrixrgb_driver.c, 164 :: 		case 12: case 13:
L_matrixrgb_deviceInit20:
L_matrixrgb_deviceInit21:
;__matrixrgb_driver.c, 165 :: 		_pix_w = 32;
0x1390	0x2220    MOVS	R2, #32
0x1392	0x4923    LDR	R1, [PC, #140]
0x1394	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 166 :: 		_pix_h = 128;
0x1396	0x2280    MOVS	R2, #128
0x1398	0x4922    LDR	R1, [PC, #136]
0x139A	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 167 :: 		_ram_s = 4096;
0x139C	0xF2410200  MOVW	R2, #4096
0x13A0	0x4921    LDR	R1, [PC, #132]
0x13A2	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 168 :: 		break;
0x13A4	0xE033    B	L_matrixrgb_deviceInit7
;__matrixrgb_driver.c, 169 :: 		case 14: case 15:
L_matrixrgb_deviceInit22:
L_matrixrgb_deviceInit23:
;__matrixrgb_driver.c, 170 :: 		_pix_w = 64;
0x13A6	0x2240    MOVS	R2, #64
0x13A8	0x491D    LDR	R1, [PC, #116]
0x13AA	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 171 :: 		_pix_h = 64;
0x13AC	0x2240    MOVS	R2, #64
0x13AE	0x491D    LDR	R1, [PC, #116]
0x13B0	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 172 :: 		_ram_s = 4096;
0x13B2	0xF2410200  MOVW	R2, #4096
0x13B6	0x491C    LDR	R1, [PC, #112]
0x13B8	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 173 :: 		break;
; pattern_id end address is: 0 (R0)
0x13BA	0xE028    B	L_matrixrgb_deviceInit7
;__matrixrgb_driver.c, 174 :: 		default :
L_matrixrgb_deviceInit24:
;__matrixrgb_driver.c, 175 :: 		return 1;
0x13BC	0x2001    MOVS	R0, #1
0x13BE	0xE02B    B	L_end_matrixrgb_deviceInit
;__matrixrgb_driver.c, 177 :: 		}
L_matrixrgb_deviceInit6:
; pattern_id start address is: 0 (R0)
0x13C0	0x2800    CMP	R0, #0
0x13C2	0xF43FAFA3  BEQ	L_matrixrgb_deviceInit8
0x13C6	0x2801    CMP	R0, #1
0x13C8	0xF43FAFA0  BEQ	L_matrixrgb_deviceInit9
0x13CC	0x2802    CMP	R0, #2
0x13CE	0xF43FAFA8  BEQ	L_matrixrgb_deviceInit10
0x13D2	0x2803    CMP	R0, #3
0x13D4	0xF43FAFA5  BEQ	L_matrixrgb_deviceInit11
0x13D8	0x2804    CMP	R0, #4
0x13DA	0xF43FAFAD  BEQ	L_matrixrgb_deviceInit12
0x13DE	0x2805    CMP	R0, #5
0x13E0	0xF43FAFAA  BEQ	L_matrixrgb_deviceInit13
0x13E4	0x2806    CMP	R0, #6
0x13E6	0xD0B2    BEQ	L_matrixrgb_deviceInit14
0x13E8	0x2807    CMP	R0, #7
0x13EA	0xD0B0    BEQ	L_matrixrgb_deviceInit15
0x13EC	0x2808    CMP	R0, #8
0x13EE	0xD0B9    BEQ	L_matrixrgb_deviceInit16
0x13F0	0x2809    CMP	R0, #9
0x13F2	0xD0B7    BEQ	L_matrixrgb_deviceInit17
0x13F4	0x280A    CMP	R0, #10
0x13F6	0xD0C0    BEQ	L_matrixrgb_deviceInit18
0x13F8	0x280B    CMP	R0, #11
0x13FA	0xD0BE    BEQ	L_matrixrgb_deviceInit19
0x13FC	0x280C    CMP	R0, #12
0x13FE	0xD0C7    BEQ	L_matrixrgb_deviceInit20
0x1400	0x280D    CMP	R0, #13
0x1402	0xD0C5    BEQ	L_matrixrgb_deviceInit21
0x1404	0x280E    CMP	R0, #14
0x1406	0xD0CE    BEQ	L_matrixrgb_deviceInit22
0x1408	0x280F    CMP	R0, #15
0x140A	0xD0CC    BEQ	L_matrixrgb_deviceInit23
; pattern_id end address is: 0 (R0)
0x140C	0xE7D6    B	L_matrixrgb_deviceInit24
L_matrixrgb_deviceInit7:
;__matrixrgb_driver.c, 180 :: 		_spi_cmd( _MATRIXRGB_CMD_PAN_SETUP, tmp );
; pattern_id start address is: 0 (R0)
0x140E	0xB2C1    UXTB	R1, R0
; pattern_id end address is: 0 (R0)
0x1410	0x2010    MOVS	R0, #16
0x1412	0xF7FFFA3D  BL	__matrixrgb_driver__spi_cmd+0
;__matrixrgb_driver.c, 182 :: 		return 0;
0x1416	0x2000    MOVS	R0, #0
;__matrixrgb_driver.c, 183 :: 		}
L_end_matrixrgb_deviceInit:
0x1418	0xF8DDE000  LDR	LR, [SP, #0]
0x141C	0xB001    ADD	SP, SP, #4
0x141E	0x4770    BX	LR
0x1420	0x05102000  	__matrixrgb_driver__pix_w+0
0x1424	0x05122000  	__matrixrgb_driver__pix_h+0
0x1428	0x051C2000  	__matrixrgb_driver__ram_s+0
; end of _matrixrgb_deviceInit
__matrixrgb_driver__spi_cmd:
;__matrixrgb_driver.c, 315 :: 		static void _spi_cmd( const uint8_t cmd, uint8_t arg )
; arg start address is: 4 (R1)
; cmd start address is: 0 (R0)
0x0890	0xB082    SUB	SP, SP, #8
0x0892	0xF8CDE000  STR	LR, [SP, #0]
0x0896	0xB2C6    UXTB	R6, R0
0x0898	0xB2CD    UXTB	R5, R1
; arg end address is: 4 (R1)
; cmd end address is: 0 (R0)
; cmd start address is: 24 (R6)
; arg start address is: 20 (R5)
;__matrixrgb_driver.c, 319 :: 		tmp[0] = cmd;
0x089A	0xAC01    ADD	R4, SP, #4
0x089C	0x7026    STRB	R6, [R4, #0]
; cmd end address is: 24 (R6)
;__matrixrgb_driver.c, 320 :: 		tmp[1] = arg;
0x089E	0x1C62    ADDS	R2, R4, #1
0x08A0	0x7015    STRB	R5, [R2, #0]
; arg end address is: 20 (R5)
;__matrixrgb_driver.c, 322 :: 		WAIT_CYCLE();
L___matrixrgb_driver__spi_cmd45:
0x08A2	0x4C0C    LDR	R4, [PC, #48]
0x08A4	0x6824    LDR	R4, [R4, #0]
0x08A6	0x47A0    BLX	R4
0x08A8	0xB100    CBZ	R0, L___matrixrgb_driver__spi_cmd46
0x08AA	0xE7FA    B	L___matrixrgb_driver__spi_cmd45
L___matrixrgb_driver__spi_cmd46:
;__matrixrgb_driver.c, 323 :: 		hal_gpio_csSet( 0 );
0x08AC	0x2000    MOVS	R0, #0
0x08AE	0x4C0A    LDR	R4, [PC, #40]
0x08B0	0x6824    LDR	R4, [R4, #0]
0x08B2	0x47A0    BLX	R4
;__matrixrgb_driver.c, 324 :: 		hal_spiWrite( tmp, 2 );
0x08B4	0xAA01    ADD	R2, SP, #4
0x08B6	0x2102    MOVS	R1, #2
0x08B8	0x4610    MOV	R0, R2
0x08BA	0xF7FFFF49  BL	__matrixrgb_driver_hal_spiWrite+0
;__matrixrgb_driver.c, 325 :: 		hal_gpio_csSet( 1 );
0x08BE	0x2001    MOVS	R0, #1
0x08C0	0x4C05    LDR	R4, [PC, #20]
0x08C2	0x6824    LDR	R4, [R4, #0]
0x08C4	0x47A0    BLX	R4
;__matrixrgb_driver.c, 326 :: 		Delay_1ms();
0x08C6	0xF7FFFEEB  BL	_Delay_1ms+0
;__matrixrgb_driver.c, 327 :: 		}
L_end__spi_cmd:
0x08CA	0xF8DDE000  LDR	LR, [SP, #0]
0x08CE	0xB002    ADD	SP, SP, #8
0x08D0	0x4770    BX	LR
0x08D2	0xBF00    NOP
0x08D4	0x05142000  	__matrixrgb_driver_hal_gpio_intGet+0
0x08D8	0x05182000  	__matrixrgb_driver_hal_gpio_csSet+0
; end of __matrixrgb_driver__spi_cmd
easymx_v7_STM32F107VC__getAN_1:
;__em_f107vc_gpio.c, 31 :: 		static uint8_t _getAN_1  () 			{ return GPIOA_IDR.B4 ;  }
0x06B8	0x4801    LDR	R0, [PC, #4]
0x06BA	0x6800    LDR	R0, [R0, #0]
L_end__getAN_1:
0x06BC	0x4770    BX	LR
0x06BE	0xBF00    NOP
0x06C0	0x01104221  	GPIOA_IDR+0
; end of easymx_v7_STM32F107VC__getAN_1
easymx_v7_STM32F107VC__getRST_1:
;__em_f107vc_gpio.c, 32 :: 		static uint8_t _getRST_1 () 			{ return GPIOC_IDR.B2 ;  }
0x0688	0x4801    LDR	R0, [PC, #4]
0x068A	0x6800    LDR	R0, [R0, #0]
L_end__getRST_1:
0x068C	0x4770    BX	LR
0x068E	0xBF00    NOP
0x0690	0x01084222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getRST_1
easymx_v7_STM32F107VC__getCS_1:
;__em_f107vc_gpio.c, 33 :: 		static uint8_t _getCS_1  () 			{ return GPIOD_IDR.B13;  }
0x0694	0x4801    LDR	R0, [PC, #4]
0x0696	0x6800    LDR	R0, [R0, #0]
L_end__getCS_1:
0x0698	0x4770    BX	LR
0x069A	0xBF00    NOP
0x069C	0x81344222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getCS_1
easymx_v7_STM32F107VC__getSCK_1:
;__em_f107vc_gpio.c, 34 :: 		static uint8_t _getSCK_1 () 			{ return GPIOC_IDR.B10;  }
0x06DC	0x4801    LDR	R0, [PC, #4]
0x06DE	0x6800    LDR	R0, [R0, #0]
L_end__getSCK_1:
0x06E0	0x4770    BX	LR
0x06E2	0xBF00    NOP
0x06E4	0x01284222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getSCK_1
easymx_v7_STM32F107VC__getMISO_1:
;__em_f107vc_gpio.c, 35 :: 		static uint8_t _getMISO_1() 			{ return GPIOC_IDR.B11;  }
0x06E8	0x4801    LDR	R0, [PC, #4]
0x06EA	0x6800    LDR	R0, [R0, #0]
L_end__getMISO_1:
0x06EC	0x4770    BX	LR
0x06EE	0xBF00    NOP
0x06F0	0x012C4222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMISO_1
easymx_v7_STM32F107VC__getMOSI_1:
;__em_f107vc_gpio.c, 36 :: 		static uint8_t _getMOSI_1() 			{ return GPIOC_IDR.B12;  }
0x06C4	0x4801    LDR	R0, [PC, #4]
0x06C6	0x6800    LDR	R0, [R0, #0]
L_end__getMOSI_1:
0x06C8	0x4770    BX	LR
0x06CA	0xBF00    NOP
0x06CC	0x01304222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMOSI_1
easymx_v7_STM32F107VC__getPWM_1:
;__em_f107vc_gpio.c, 37 :: 		static uint8_t _getPWM_1 () 			{ return GPIOA_IDR.B0 ;  }
0x06D0	0x4801    LDR	R0, [PC, #4]
0x06D2	0x6800    LDR	R0, [R0, #0]
L_end__getPWM_1:
0x06D4	0x4770    BX	LR
0x06D6	0xBF00    NOP
0x06D8	0x01004221  	GPIOA_IDR+0
; end of easymx_v7_STM32F107VC__getPWM_1
easymx_v7_STM32F107VC__getINT_1:
;__em_f107vc_gpio.c, 38 :: 		static uint8_t _getINT_1 () 			{ return GPIOD_IDR.B10;  }
0x0634	0x4801    LDR	R0, [PC, #4]
0x0636	0x6800    LDR	R0, [R0, #0]
L_end__getINT_1:
0x0638	0x4770    BX	LR
0x063A	0xBF00    NOP
0x063C	0x81284222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getINT_1
easymx_v7_STM32F107VC__getRX_1:
;__em_f107vc_gpio.c, 39 :: 		static uint8_t _getRX_1  () 			{ return GPIOD_IDR.B9 ;  }
0x064C	0x4801    LDR	R0, [PC, #4]
0x064E	0x6800    LDR	R0, [R0, #0]
L_end__getRX_1:
0x0650	0x4770    BX	LR
0x0652	0xBF00    NOP
0x0654	0x81244222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getRX_1
easymx_v7_STM32F107VC__getTX_1:
;__em_f107vc_gpio.c, 40 :: 		static uint8_t _getTX_1  () 			{ return GPIOD_IDR.B8 ;  }
0x0670	0x4801    LDR	R0, [PC, #4]
0x0672	0x6800    LDR	R0, [R0, #0]
L_end__getTX_1:
0x0674	0x4770    BX	LR
0x0676	0xBF00    NOP
0x0678	0x81204222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getTX_1
easymx_v7_STM32F107VC__getSCL_1:
;__em_f107vc_gpio.c, 41 :: 		static uint8_t _getSCL_1 () 			{ return GPIOB_IDR.B6 ;  }
0x067C	0x4801    LDR	R0, [PC, #4]
0x067E	0x6800    LDR	R0, [R0, #0]
L_end__getSCL_1:
0x0680	0x4770    BX	LR
0x0682	0xBF00    NOP
0x0684	0x81184221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSCL_1
easymx_v7_STM32F107VC__getSDA_1:
;__em_f107vc_gpio.c, 42 :: 		static uint8_t _getSDA_1 () 			{ return GPIOB_IDR.B7 ;  }
0x0664	0x4801    LDR	R0, [PC, #4]
0x0666	0x6800    LDR	R0, [R0, #0]
L_end__getSDA_1:
0x0668	0x4770    BX	LR
0x066A	0xBF00    NOP
0x066C	0x811C4221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSDA_1
easymx_v7_STM32F107VC__getAN_2:
;__em_f107vc_gpio.c, 56 :: 		static uint8_t _getAN_2  ()             { return GPIOA_IDR.B5 ;  }
0x0658	0x4801    LDR	R0, [PC, #4]
0x065A	0x6800    LDR	R0, [R0, #0]
L_end__getAN_2:
0x065C	0x4770    BX	LR
0x065E	0xBF00    NOP
0x0660	0x01144221  	GPIOA_IDR+0
; end of easymx_v7_STM32F107VC__getAN_2
easymx_v7_STM32F107VC__getRST_2:
;__em_f107vc_gpio.c, 57 :: 		static uint8_t _getRST_2 ()             { return GPIOC_IDR.B3 ;  }
0x0640	0x4801    LDR	R0, [PC, #4]
0x0642	0x6800    LDR	R0, [R0, #0]
L_end__getRST_2:
0x0644	0x4770    BX	LR
0x0646	0xBF00    NOP
0x0648	0x010C4222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getRST_2
easymx_v7_STM32F107VC__getCS_2:
;__em_f107vc_gpio.c, 58 :: 		static uint8_t _getCS_2  ()             { return GPIOD_IDR.B14;  }
0x0810	0x4801    LDR	R0, [PC, #4]
0x0812	0x6800    LDR	R0, [R0, #0]
L_end__getCS_2:
0x0814	0x4770    BX	LR
0x0816	0xBF00    NOP
0x0818	0x81384222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getCS_2
easymx_v7_STM32F107VC__getSCK_2:
;__em_f107vc_gpio.c, 59 :: 		static uint8_t _getSCK_2 ()             { return GPIOC_IDR.B10;  }
0x0804	0x4801    LDR	R0, [PC, #4]
0x0806	0x6800    LDR	R0, [R0, #0]
L_end__getSCK_2:
0x0808	0x4770    BX	LR
0x080A	0xBF00    NOP
0x080C	0x01284222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getSCK_2
easymx_v7_STM32F107VC__getMISO_2:
;__em_f107vc_gpio.c, 60 :: 		static uint8_t _getMISO_2()             { return GPIOC_IDR.B11;  }
0x07F8	0x4801    LDR	R0, [PC, #4]
0x07FA	0x6800    LDR	R0, [R0, #0]
L_end__getMISO_2:
0x07FC	0x4770    BX	LR
0x07FE	0xBF00    NOP
0x0800	0x012C4222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMISO_2
easymx_v7_STM32F107VC__getMOSI_2:
;__em_f107vc_gpio.c, 61 :: 		static uint8_t _getMOSI_2()             { return GPIOC_IDR.B12;  }
0x081C	0x4801    LDR	R0, [PC, #4]
0x081E	0x6800    LDR	R0, [R0, #0]
L_end__getMOSI_2:
0x0820	0x4770    BX	LR
0x0822	0xBF00    NOP
0x0824	0x01304222  	GPIOC_IDR+0
; end of easymx_v7_STM32F107VC__getMOSI_2
easymx_v7_STM32F107VC__getPWM_2:
;__em_f107vc_gpio.c, 62 :: 		static uint8_t _getPWM_2 ()             { return GPIOD_IDR.B12;  }
0x0840	0x4801    LDR	R0, [PC, #4]
0x0842	0x6800    LDR	R0, [R0, #0]
L_end__getPWM_2:
0x0844	0x4770    BX	LR
0x0846	0xBF00    NOP
0x0848	0x81304222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getPWM_2
easymx_v7_STM32F107VC__getINT_2:
;__em_f107vc_gpio.c, 63 :: 		static uint8_t _getINT_2 ()             { return GPIOD_IDR.B12;  }
0x0834	0x4801    LDR	R0, [PC, #4]
0x0836	0x6800    LDR	R0, [R0, #0]
L_end__getINT_2:
0x0838	0x4770    BX	LR
0x083A	0xBF00    NOP
0x083C	0x81304222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getINT_2
easymx_v7_STM32F107VC__getRX_2:
;__em_f107vc_gpio.c, 64 :: 		static uint8_t _getRX_2  ()             { return GPIOD_IDR.B6 ;  }
0x0828	0x4801    LDR	R0, [PC, #4]
0x082A	0x6800    LDR	R0, [R0, #0]
L_end__getRX_2:
0x082C	0x4770    BX	LR
0x082E	0xBF00    NOP
0x0830	0x81184222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getRX_2
easymx_v7_STM32F107VC__getTX_2:
;__em_f107vc_gpio.c, 65 :: 		static uint8_t _getTX_2  ()             { return GPIOD_IDR.B5 ;  }
0x070C	0x4801    LDR	R0, [PC, #4]
0x070E	0x6800    LDR	R0, [R0, #0]
L_end__getTX_2:
0x0710	0x4770    BX	LR
0x0712	0xBF00    NOP
0x0714	0x81144222  	GPIOD_IDR+0
; end of easymx_v7_STM32F107VC__getTX_2
easymx_v7_STM32F107VC__getSCL_2:
;__em_f107vc_gpio.c, 66 :: 		static uint8_t _getSCL_2 ()             { return GPIOB_IDR.B6 ;  }
0x0700	0x4801    LDR	R0, [PC, #4]
0x0702	0x6800    LDR	R0, [R0, #0]
L_end__getSCL_2:
0x0704	0x4770    BX	LR
0x0706	0xBF00    NOP
0x0708	0x81184221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSCL_2
easymx_v7_STM32F107VC__getSDA_2:
;__em_f107vc_gpio.c, 67 :: 		static uint8_t _getSDA_2 ()             { return GPIOB_IDR.B7 ;  }
0x06F4	0x4801    LDR	R0, [PC, #4]
0x06F6	0x6800    LDR	R0, [R0, #0]
L_end__getSDA_2:
0x06F8	0x4770    BX	LR
0x06FA	0xBF00    NOP
0x06FC	0x811C4221  	GPIOB_IDR+0
; end of easymx_v7_STM32F107VC__getSDA_2
__matrixrgb_driver_hal_spiWrite:
;__hal_stm32.c, 41 :: 		static void hal_spiWrite(uint8_t *pBuf, uint16_t nBytes)
; nBytes start address is: 4 (R1)
; pBuf start address is: 0 (R0)
0x0750	0xB083    SUB	SP, SP, #12
0x0752	0xF8CDE000  STR	LR, [SP, #0]
0x0756	0xB28A    UXTH	R2, R1
; nBytes end address is: 4 (R1)
; pBuf end address is: 0 (R0)
; pBuf start address is: 0 (R0)
; nBytes start address is: 8 (R2)
;__hal_stm32.c, 43 :: 		uint8_t *ptr = pBuf;
; ptr start address is: 4 (R1)
0x0758	0x4601    MOV	R1, R0
; pBuf end address is: 0 (R0)
; nBytes end address is: 8 (R2)
; ptr end address is: 4 (R1)
0x075A	0xB290    UXTH	R0, R2
;__hal_stm32.c, 44 :: 		while( nBytes-- )
L___matrixrgb_driver_hal_spiWrite0:
; ptr start address is: 4 (R1)
; nBytes start address is: 0 (R0)
; nBytes start address is: 0 (R0)
0x075C	0xB283    UXTH	R3, R0
0x075E	0x1E42    SUBS	R2, R0, #1
0x0760	0xB290    UXTH	R0, R2
; nBytes end address is: 0 (R0)
0x0762	0xB16B    CBZ	R3, L___matrixrgb_driver_hal_spiWrite1
; nBytes end address is: 0 (R0)
;__hal_stm32.c, 45 :: 		fp_spiWrite( *( ptr++ ) );
; nBytes start address is: 0 (R0)
0x0764	0x780A    LDRB	R2, [R1, #0]
0x0766	0xB2D4    UXTB	R4, R2
0x0768	0xF8AD0004  STRH	R0, [SP, #4]
0x076C	0x9102    STR	R1, [SP, #8]
0x076E	0xB2A0    UXTH	R0, R4
0x0770	0x4C05    LDR	R4, [PC, #20]
0x0772	0x6824    LDR	R4, [R4, #0]
0x0774	0x47A0    BLX	R4
0x0776	0x9902    LDR	R1, [SP, #8]
0x0778	0xF8BD0004  LDRH	R0, [SP, #4]
0x077C	0x1C49    ADDS	R1, R1, #1
; nBytes end address is: 0 (R0)
; ptr end address is: 4 (R1)
0x077E	0xE7ED    B	L___matrixrgb_driver_hal_spiWrite0
L___matrixrgb_driver_hal_spiWrite1:
;__hal_stm32.c, 46 :: 		}
L_end_hal_spiWrite:
0x0780	0xF8DDE000  LDR	LR, [SP, #0]
0x0784	0xB003    ADD	SP, SP, #12
0x0786	0x4770    BX	LR
0x0788	0x05342000  	__matrixrgb_driver_fp_spiWrite+0
; end of __matrixrgb_driver_hal_spiWrite
_SPI1_Write:
;__Lib_SPI_123.c, 78 :: 		
; data_out start address is: 0 (R0)
0x05E0	0xB081    SUB	SP, SP, #4
0x05E2	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 79 :: 		
0x05E6	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x05E8	0x4803    LDR	R0, [PC, #12]
0x05EA	0xF7FFFDF7  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 80 :: 		
L_end_SPI1_Write:
0x05EE	0xF8DDE000  LDR	LR, [SP, #0]
0x05F2	0xB001    ADD	SP, SP, #4
0x05F4	0x4770    BX	LR
0x05F6	0xBF00    NOP
0x05F8	0x30004001  	SPI1_CR1+0
; end of _SPI1_Write
__Lib_SPI_123_SPIx_Read:
;__Lib_SPI_123.c, 67 :: 		
; data_out start address is: 4 (R1)
; base start address is: 0 (R0)
0x01DC	0xB081    SUB	SP, SP, #4
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; data_out start address is: 4 (R1)
;__Lib_SPI_123.c, 68 :: 		
0x01DE	0xF200020C  ADDW	R2, R0, #12
0x01E2	0x6011    STR	R1, [R2, #0]
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 69 :: 		
L___Lib_SPI_123_SPIx_Read0:
; base start address is: 0 (R0)
0x01E4	0xF2000208  ADDW	R2, R0, #8
0x01E8	0x6813    LDR	R3, [R2, #0]
0x01EA	0xF3C30200  UBFX	R2, R3, #0, #1
0x01EE	0xB902    CBNZ	R2, L___Lib_SPI_123_SPIx_Read1
;__Lib_SPI_123.c, 70 :: 		
0x01F0	0xE7F8    B	L___Lib_SPI_123_SPIx_Read0
L___Lib_SPI_123_SPIx_Read1:
;__Lib_SPI_123.c, 71 :: 		
0x01F2	0xF200020C  ADDW	R2, R0, #12
; base end address is: 0 (R0)
0x01F6	0x6812    LDR	R2, [R2, #0]
0x01F8	0xB290    UXTH	R0, R2
;__Lib_SPI_123.c, 72 :: 		
L_end_SPIx_Read:
0x01FA	0xB001    ADD	SP, SP, #4
0x01FC	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Read
_SPI2_Write:
;__Lib_SPI_123.c, 103 :: 		
; data_out start address is: 0 (R0)
0x05FC	0xB081    SUB	SP, SP, #4
0x05FE	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 104 :: 		
0x0602	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0604	0x4803    LDR	R0, [PC, #12]
0x0606	0xF7FFFDE9  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 105 :: 		
L_end_SPI2_Write:
0x060A	0xF8DDE000  LDR	LR, [SP, #0]
0x060E	0xB001    ADD	SP, SP, #4
0x0610	0x4770    BX	LR
0x0612	0xBF00    NOP
0x0614	0x38004000  	SPI2_CR1+0
; end of _SPI2_Write
_SPI3_Write:
;__Lib_SPI_123.c, 129 :: 		
; data_out start address is: 0 (R0)
0x0618	0xB081    SUB	SP, SP, #4
0x061A	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 130 :: 		
0x061E	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0620	0x4803    LDR	R0, [PC, #12]
0x0622	0xF7FFFDDB  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 131 :: 		
L_end_SPI3_Write:
0x0626	0xF8DDE000  LDR	LR, [SP, #0]
0x062A	0xB001    ADD	SP, SP, #4
0x062C	0x4770    BX	LR
0x062E	0xBF00    NOP
0x0630	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Write
_Delay_1ms:
;__Lib_Delays.c, 41 :: 		void Delay_1ms() {
;__Lib_Delays.c, 42 :: 		Delay_ms(1);
0x06A0	0xF64267DF  MOVW	R7, #11999
0x06A4	0xF2C00700  MOVT	R7, #0
L_Delay_1ms14:
0x06A8	0x1E7F    SUBS	R7, R7, #1
0x06AA	0xD1FD    BNE	L_Delay_1ms14
0x06AC	0xBF00    NOP
0x06AE	0xBF00    NOP
0x06B0	0xBF00    NOP
0x06B2	0xBF00    NOP
0x06B4	0xBF00    NOP
;__Lib_Delays.c, 43 :: 		}
L_end_Delay_1ms:
0x06B6	0x4770    BX	LR
; end of _Delay_1ms
_matrixrgb_setPower:
;__matrixrgb_driver.c, 185 :: 		void matrixrgb_setPower( uint8_t powerState )
; powerState start address is: 0 (R0)
0x1238	0xB081    SUB	SP, SP, #4
0x123A	0xF8CDE000  STR	LR, [SP, #0]
; powerState end address is: 0 (R0)
; powerState start address is: 0 (R0)
;__matrixrgb_driver.c, 190 :: 		_spi_cmd( _MATRIXRGB_CMD_POWER, tmp );
0x123E	0xB2C1    UXTB	R1, R0
; powerState end address is: 0 (R0)
0x1240	0x2001    MOVS	R0, #1
0x1242	0xF7FFFB25  BL	__matrixrgb_driver__spi_cmd+0
;__matrixrgb_driver.c, 191 :: 		}
L_end_matrixrgb_setPower:
0x1246	0xF8DDE000  LDR	LR, [SP, #0]
0x124A	0xB001    ADD	SP, SP, #4
0x124C	0x4770    BX	LR
; end of _matrixrgb_setPower
_matrixrgb_setFont:
;__matrixrgb_driver.c, 279 :: 		void matrixrgb_setFont( uint8_t *font, uint16_t color, uint8_t orientation )
; orientation start address is: 8 (R2)
; color start address is: 4 (R1)
; font start address is: 0 (R0)
; orientation end address is: 8 (R2)
; color end address is: 4 (R1)
; font end address is: 0 (R0)
; font start address is: 0 (R0)
; color start address is: 4 (R1)
; orientation start address is: 8 (R2)
;__matrixrgb_driver.c, 281 :: 		_font               = font;
0x11E4	0x4B0E    LDR	R3, [PC, #56]
0x11E6	0x6018    STR	R0, [R3, #0]
;__matrixrgb_driver.c, 282 :: 		_font_first_char    = font[2] + (font[3] << 8);
0x11E8	0x1C83    ADDS	R3, R0, #2
0x11EA	0x781C    LDRB	R4, [R3, #0]
0x11EC	0x1CC3    ADDS	R3, R0, #3
0x11EE	0x781B    LDRB	R3, [R3, #0]
0x11F0	0x021B    LSLS	R3, R3, #8
0x11F2	0xB29B    UXTH	R3, R3
0x11F4	0x18E4    ADDS	R4, R4, R3
0x11F6	0x4B0B    LDR	R3, [PC, #44]
0x11F8	0x801C    STRH	R4, [R3, #0]
;__matrixrgb_driver.c, 283 :: 		_font_last_char     = font[4] + (font[5] << 8);
0x11FA	0x1D03    ADDS	R3, R0, #4
0x11FC	0x781C    LDRB	R4, [R3, #0]
0x11FE	0x1D43    ADDS	R3, R0, #5
0x1200	0x781B    LDRB	R3, [R3, #0]
0x1202	0x021B    LSLS	R3, R3, #8
0x1204	0xB29B    UXTH	R3, R3
0x1206	0x18E4    ADDS	R4, R4, R3
0x1208	0x4B07    LDR	R3, [PC, #28]
0x120A	0x801C    STRH	R4, [R3, #0]
;__matrixrgb_driver.c, 284 :: 		_font_height        = font[6];
0x120C	0x1D83    ADDS	R3, R0, #6
; font end address is: 0 (R0)
0x120E	0x781C    LDRB	R4, [R3, #0]
0x1210	0x4B06    LDR	R3, [PC, #24]
0x1212	0x801C    STRH	R4, [R3, #0]
;__matrixrgb_driver.c, 285 :: 		_font_color         = color;
0x1214	0x4B06    LDR	R3, [PC, #24]
0x1216	0x8019    STRH	R1, [R3, #0]
; color end address is: 4 (R1)
;__matrixrgb_driver.c, 286 :: 		_font_orientation   = orientation ;
0x1218	0x4B06    LDR	R3, [PC, #24]
0x121A	0x701A    STRB	R2, [R3, #0]
; orientation end address is: 8 (R2)
;__matrixrgb_driver.c, 287 :: 		}
L_end_matrixrgb_setFont:
0x121C	0x4770    BX	LR
0x121E	0xBF00    NOP
0x1220	0x05242000  	__matrixrgb_driver__font+0
0x1224	0x051E2000  	__matrixrgb_driver__font_first_char+0
0x1228	0x05202000  	__matrixrgb_driver__font_last_char+0
0x122C	0x05282000  	__matrixrgb_driver__font_height+0
0x1230	0x052C2000  	__matrixrgb_driver__font_color+0
0x1234	0x05032000  	__matrixrgb_driver__font_orientation+0
; end of _matrixrgb_setFont
_matrixrgb_fillScreen:
;__matrixrgb_driver.c, 231 :: 		void matrixrgb_fillScreen( uint16_t color )
; color start address is: 0 (R0)
0x1164	0xB083    SUB	SP, SP, #12
0x1166	0xF8CDE000  STR	LR, [SP, #0]
0x116A	0xB285    UXTH	R5, R0
; color end address is: 0 (R0)
; color start address is: 20 (R5)
;__matrixrgb_driver.c, 237 :: 		cmd = _MATRIXRGB_CMD_LOAD_IMG;
0x116C	0x2403    MOVS	R4, #3
0x116E	0xF88D4008  STRB	R4, [SP, #8]
;__matrixrgb_driver.c, 238 :: 		tmp[0] = color;
0x1172	0xF10D0409  ADD	R4, SP, #9
0x1176	0x7025    STRB	R5, [R4, #0]
;__matrixrgb_driver.c, 239 :: 		tmp[1] = color >> 8;
0x1178	0x1C61    ADDS	R1, R4, #1
0x117A	0x0A2C    LSRS	R4, R5, #8
; color end address is: 20 (R5)
0x117C	0x700C    STRB	R4, [R1, #0]
;__matrixrgb_driver.c, 241 :: 		WAIT_CYCLE();
L_matrixrgb_fillScreen30:
0x117E	0x4C16    LDR	R4, [PC, #88]
0x1180	0x6824    LDR	R4, [R4, #0]
0x1182	0x47A0    BLX	R4
0x1184	0xB100    CBZ	R0, L_matrixrgb_fillScreen31
0x1186	0xE7FA    B	L_matrixrgb_fillScreen30
L_matrixrgb_fillScreen31:
;__matrixrgb_driver.c, 242 :: 		hal_gpio_csSet( 0 );
0x1188	0x2000    MOVS	R0, #0
0x118A	0x4C14    LDR	R4, [PC, #80]
0x118C	0x6824    LDR	R4, [R4, #0]
0x118E	0x47A0    BLX	R4
;__matrixrgb_driver.c, 243 :: 		hal_spiWrite( &cmd, 1 );
0x1190	0xA902    ADD	R1, SP, #8
0x1192	0x4608    MOV	R0, R1
0x1194	0x2101    MOVS	R1, #1
0x1196	0xF7FFFADB  BL	__matrixrgb_driver_hal_spiWrite+0
;__matrixrgb_driver.c, 245 :: 		for (pos = 0; pos < _ram_s; pos++)
; pos start address is: 0 (R0)
0x119A	0x2000    MOVS	R0, #0
; pos end address is: 0 (R0)
L_matrixrgb_fillScreen32:
; pos start address is: 0 (R0)
0x119C	0x4910    LDR	R1, [PC, #64]
0x119E	0x8809    LDRH	R1, [R1, #0]
0x11A0	0x4288    CMP	R0, R1
0x11A2	0xD20E    BCS	L_matrixrgb_fillScreen33
;__matrixrgb_driver.c, 247 :: 		hal_spiWrite( tmp, 2 );
0x11A4	0xF10D0109  ADD	R1, SP, #9
0x11A8	0xF8AD0004  STRH	R0, [SP, #4]
0x11AC	0x4608    MOV	R0, R1
0x11AE	0x2102    MOVS	R1, #2
0x11B0	0xF7FFFACE  BL	__matrixrgb_driver_hal_spiWrite+0
0x11B4	0xF8BD0004  LDRH	R0, [SP, #4]
;__matrixrgb_driver.c, 248 :: 		Delay_1ms();
0x11B8	0xF7FFFA72  BL	_Delay_1ms+0
;__matrixrgb_driver.c, 245 :: 		for (pos = 0; pos < _ram_s; pos++)
0x11BC	0x1C40    ADDS	R0, R0, #1
0x11BE	0xB280    UXTH	R0, R0
;__matrixrgb_driver.c, 249 :: 		}
; pos end address is: 0 (R0)
0x11C0	0xE7EC    B	L_matrixrgb_fillScreen32
L_matrixrgb_fillScreen33:
;__matrixrgb_driver.c, 251 :: 		hal_gpio_csSet( 1 );
0x11C2	0x2001    MOVS	R0, #1
0x11C4	0x4C05    LDR	R4, [PC, #20]
0x11C6	0x6824    LDR	R4, [R4, #0]
0x11C8	0x47A0    BLX	R4
;__matrixrgb_driver.c, 252 :: 		Delay_1ms();
0x11CA	0xF7FFFA69  BL	_Delay_1ms+0
;__matrixrgb_driver.c, 253 :: 		}
L_end_matrixrgb_fillScreen:
0x11CE	0xF8DDE000  LDR	LR, [SP, #0]
0x11D2	0xB003    ADD	SP, SP, #12
0x11D4	0x4770    BX	LR
0x11D6	0xBF00    NOP
0x11D8	0x05142000  	__matrixrgb_driver_hal_gpio_intGet+0
0x11DC	0x05182000  	__matrixrgb_driver_hal_gpio_csSet+0
0x11E0	0x051C2000  	__matrixrgb_driver__ram_s+0
; end of _matrixrgb_fillScreen
_applicationTask:
;Click_Matrix_RGB_STM.c, 61 :: 		void applicationTask()
0x1598	0xB082    SUB	SP, SP, #8
0x159A	0xF8CDE000  STR	LR, [SP, #0]
;Click_Matrix_RGB_STM.c, 66 :: 		for (test = 5; test < 50; test++)
; test start address is: 4 (R1)
0x159E	0x2105    MOVS	R1, #5
; test end address is: 4 (R1)
L_applicationTask6:
; test start address is: 4 (R1)
0x15A0	0x2932    CMP	R1, #50
0x15A2	0xD214    BCS	L_applicationTask7
;Click_Matrix_RGB_STM.c, 68 :: 		matrixrgb_setBrightness( test );
0x15A4	0xF8AD1004  STRH	R1, [SP, #4]
0x15A8	0xB2C8    UXTB	R0, R1
0x15AA	0xF7FFFE51  BL	_matrixrgb_setBrightness+0
0x15AE	0xF8BD1004  LDRH	R1, [SP, #4]
;Click_Matrix_RGB_STM.c, 69 :: 		Delay_ms( 50 );
0x15B2	0xF24277BF  MOVW	R7, #10175
0x15B6	0xF2C00709  MOVT	R7, #9
L_applicationTask9:
0x15BA	0x1E7F    SUBS	R7, R7, #1
0x15BC	0xD1FD    BNE	L_applicationTask9
0x15BE	0xBF00    NOP
0x15C0	0xBF00    NOP
0x15C2	0xBF00    NOP
0x15C4	0xBF00    NOP
0x15C6	0xBF00    NOP
;Click_Matrix_RGB_STM.c, 66 :: 		for (test = 5; test < 50; test++)
0x15C8	0x1C49    ADDS	R1, R1, #1
0x15CA	0xB289    UXTH	R1, R1
;Click_Matrix_RGB_STM.c, 70 :: 		}
; test end address is: 4 (R1)
0x15CC	0xE7E8    B	L_applicationTask6
L_applicationTask7:
;Click_Matrix_RGB_STM.c, 72 :: 		for (test = 50; test > 5; test--)
; test start address is: 4 (R1)
0x15CE	0x2132    MOVS	R1, #50
; test end address is: 4 (R1)
L_applicationTask11:
; test start address is: 4 (R1)
0x15D0	0x2905    CMP	R1, #5
0x15D2	0xD914    BLS	L_applicationTask12
;Click_Matrix_RGB_STM.c, 74 :: 		matrixrgb_setBrightness( test );
0x15D4	0xF8AD1004  STRH	R1, [SP, #4]
0x15D8	0xB2C8    UXTB	R0, R1
0x15DA	0xF7FFFE39  BL	_matrixrgb_setBrightness+0
0x15DE	0xF8BD1004  LDRH	R1, [SP, #4]
;Click_Matrix_RGB_STM.c, 75 :: 		Delay_ms( 50 );
0x15E2	0xF24277BF  MOVW	R7, #10175
0x15E6	0xF2C00709  MOVT	R7, #9
L_applicationTask14:
0x15EA	0x1E7F    SUBS	R7, R7, #1
0x15EC	0xD1FD    BNE	L_applicationTask14
0x15EE	0xBF00    NOP
0x15F0	0xBF00    NOP
0x15F2	0xBF00    NOP
0x15F4	0xBF00    NOP
0x15F6	0xBF00    NOP
;Click_Matrix_RGB_STM.c, 72 :: 		for (test = 50; test > 5; test--)
0x15F8	0x1E49    SUBS	R1, R1, #1
0x15FA	0xB289    UXTH	R1, R1
;Click_Matrix_RGB_STM.c, 76 :: 		}
; test end address is: 4 (R1)
0x15FC	0xE7E8    B	L_applicationTask11
L_applicationTask12:
;Click_Matrix_RGB_STM.c, 79 :: 		matrixrgb_fillScreen( 0x0000 );
0x15FE	0x2000    MOVS	R0, #0
0x1600	0xF7FFFDB0  BL	_matrixrgb_fillScreen+0
;Click_Matrix_RGB_STM.c, 80 :: 		for (test = 0; test < 32; test++)
; test start address is: 4 (R1)
0x1604	0x2100    MOVS	R1, #0
; test end address is: 4 (R1)
L_applicationTask16:
; test start address is: 4 (R1)
0x1606	0x2920    CMP	R1, #32
0x1608	0xD216    BCS	L_applicationTask17
;Click_Matrix_RGB_STM.c, 82 :: 		matrixrgb_writePixel( test, test, 0xF100 );
0x160A	0xF8AD1004  STRH	R1, [SP, #4]
0x160E	0xF24F1200  MOVW	R2, #61696
0x1612	0xB288    UXTH	R0, R1
0x1614	0xF7FFFCE0  BL	_matrixrgb_writePixel+0
0x1618	0xF8BD1004  LDRH	R1, [SP, #4]
;Click_Matrix_RGB_STM.c, 83 :: 		Delay_ms( 100 );
0x161C	0xF644777F  MOVW	R7, #20351
0x1620	0xF2C00712  MOVT	R7, #18
0x1624	0xBF00    NOP
0x1626	0xBF00    NOP
L_applicationTask19:
0x1628	0x1E7F    SUBS	R7, R7, #1
0x162A	0xD1FD    BNE	L_applicationTask19
0x162C	0xBF00    NOP
0x162E	0xBF00    NOP
0x1630	0xBF00    NOP
;Click_Matrix_RGB_STM.c, 80 :: 		for (test = 0; test < 32; test++)
0x1632	0x1C49    ADDS	R1, R1, #1
0x1634	0xB289    UXTH	R1, R1
;Click_Matrix_RGB_STM.c, 84 :: 		}
; test end address is: 4 (R1)
0x1636	0xE7E6    B	L_applicationTask16
L_applicationTask17:
;Click_Matrix_RGB_STM.c, 85 :: 		for (test = 32; test > 0; test--)
; test start address is: 4 (R1)
0x1638	0x2120    MOVS	R1, #32
; test end address is: 4 (R1)
L_applicationTask21:
; test start address is: 4 (R1)
0x163A	0x2900    CMP	R1, #0
0x163C	0xD917    BLS	L_applicationTask22
;Click_Matrix_RGB_STM.c, 87 :: 		matrixrgb_writePixel( 31 - test, test, 0xF100 );
0x163E	0xF1C1001F  RSB	R0, R1, #31
0x1642	0xF8AD1004  STRH	R1, [SP, #4]
0x1646	0xF24F1200  MOVW	R2, #61696
0x164A	0xF7FFFCC5  BL	_matrixrgb_writePixel+0
0x164E	0xF8BD1004  LDRH	R1, [SP, #4]
;Click_Matrix_RGB_STM.c, 88 :: 		Delay_ms( 100 );
0x1652	0xF644777F  MOVW	R7, #20351
0x1656	0xF2C00712  MOVT	R7, #18
L_applicationTask24:
0x165A	0x1E7F    SUBS	R7, R7, #1
0x165C	0xD1FD    BNE	L_applicationTask24
0x165E	0xBF00    NOP
0x1660	0xBF00    NOP
0x1662	0xBF00    NOP
0x1664	0xBF00    NOP
0x1666	0xBF00    NOP
;Click_Matrix_RGB_STM.c, 85 :: 		for (test = 32; test > 0; test--)
0x1668	0x1E49    SUBS	R1, R1, #1
0x166A	0xB289    UXTH	R1, R1
;Click_Matrix_RGB_STM.c, 89 :: 		}
; test end address is: 4 (R1)
0x166C	0xE7E5    B	L_applicationTask21
L_applicationTask22:
;Click_Matrix_RGB_STM.c, 92 :: 		matrixrgb_fillScreen( 0x0000 );
0x166E	0x2000    MOVS	R0, #0
0x1670	0xF7FFFD78  BL	_matrixrgb_fillScreen+0
;Click_Matrix_RGB_STM.c, 93 :: 		matrixrgb_writeText( "RGB", 6, 5 );
0x1674	0x4813    LDR	R0, [PC, #76]
0x1676	0x2205    MOVS	R2, #5
0x1678	0x2106    MOVS	R1, #6
0x167A	0xF7FFFD41  BL	_matrixrgb_writeText+0
;Click_Matrix_RGB_STM.c, 94 :: 		matrixrgb_writeText( "Demo", 4, 20 );
0x167E	0x4812    LDR	R0, [PC, #72]
0x1680	0x2214    MOVS	R2, #20
0x1682	0x2104    MOVS	R1, #4
0x1684	0xF7FFFD3C  BL	_matrixrgb_writeText+0
;Click_Matrix_RGB_STM.c, 95 :: 		Delay_ms( 2000 );
0x1688	0xF24357FF  MOVW	R7, #13823
0x168C	0xF2C0176E  MOVT	R7, #366
L_applicationTask26:
0x1690	0x1E7F    SUBS	R7, R7, #1
0x1692	0xD1FD    BNE	L_applicationTask26
0x1694	0xBF00    NOP
0x1696	0xBF00    NOP
0x1698	0xBF00    NOP
0x169A	0xBF00    NOP
0x169C	0xBF00    NOP
;Click_Matrix_RGB_STM.c, 98 :: 		matrixrgb_drawImage( mikroe_logo_32x32_bmp );
0x169E	0x480B    LDR	R0, [PC, #44]
0x16A0	0xF7FFFCE4  BL	_matrixrgb_drawImage+0
;Click_Matrix_RGB_STM.c, 99 :: 		Delay_ms( 1000 );
0x16A4	0xF64127FF  MOVW	R7, #6911
0x16A8	0xF2C007B7  MOVT	R7, #183
0x16AC	0xBF00    NOP
0x16AE	0xBF00    NOP
L_applicationTask28:
0x16B0	0x1E7F    SUBS	R7, R7, #1
0x16B2	0xD1FD    BNE	L_applicationTask28
0x16B4	0xBF00    NOP
0x16B6	0xBF00    NOP
0x16B8	0xBF00    NOP
;Click_Matrix_RGB_STM.c, 100 :: 		}
L_end_applicationTask:
0x16BA	0xF8DDE000  LDR	LR, [SP, #0]
0x16BE	0xB002    ADD	SP, SP, #8
0x16C0	0x4770    BX	LR
0x16C2	0xBF00    NOP
0x16C4	0x04FA2000  	?lstr1_Click_Matrix_RGB_STM+0
0x16C8	0x04FE2000  	?lstr2_Click_Matrix_RGB_STM+0
0x16CC	0x18A00000  	Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+0
; end of _applicationTask
_matrixrgb_setBrightness:
;__matrixrgb_driver.c, 193 :: 		void matrixrgb_setBrightness( uint8_t brightness )
; brightness start address is: 0 (R0)
0x1250	0xB081    SUB	SP, SP, #4
0x1252	0xF8CDE000  STR	LR, [SP, #0]
; brightness end address is: 0 (R0)
; brightness start address is: 0 (R0)
;__matrixrgb_driver.c, 198 :: 		_spi_cmd( _MATRIXRGB_CMD_BRIGHTNESS, tmp );
0x1256	0xB2C1    UXTB	R1, R0
; brightness end address is: 0 (R0)
0x1258	0x2002    MOVS	R0, #2
0x125A	0xF7FFFB19  BL	__matrixrgb_driver__spi_cmd+0
;__matrixrgb_driver.c, 199 :: 		}
L_end_matrixrgb_setBrightness:
0x125E	0xF8DDE000  LDR	LR, [SP, #0]
0x1262	0xB001    ADD	SP, SP, #4
0x1264	0x4770    BX	LR
; end of _matrixrgb_setBrightness
_matrixrgb_writePixel:
;__matrixrgb_driver.c, 202 :: 		matrixrgb_writePixel( uint16_t x, uint16_t y, uint16_t color )
; color start address is: 8 (R2)
; y start address is: 4 (R1)
; x start address is: 0 (R0)
0x0FD8	0xB083    SUB	SP, SP, #12
0x0FDA	0xF8CDE000  STR	LR, [SP, #0]
; color end address is: 8 (R2)
; y end address is: 4 (R1)
; x end address is: 0 (R0)
; x start address is: 0 (R0)
; y start address is: 4 (R1)
; color start address is: 8 (R2)
;__matrixrgb_driver.c, 208 :: 		if (( x >= _pix_w ) || ( y >= _pix_h ))
0x0FDE	0x4B1F    LDR	R3, [PC, #124]
0x0FE0	0x881B    LDRH	R3, [R3, #0]
0x0FE2	0x4298    CMP	R0, R3
0x0FE4	0xD204    BCS	L__matrixrgb_writePixel73
0x0FE6	0x4B1E    LDR	R3, [PC, #120]
0x0FE8	0x881B    LDRH	R3, [R3, #0]
0x0FEA	0x4299    CMP	R1, R3
0x0FEC	0xD200    BCS	L__matrixrgb_writePixel72
0x0FEE	0xE001    B	L_matrixrgb_writePixel27
; x end address is: 0 (R0)
; y end address is: 4 (R1)
; color end address is: 8 (R2)
L__matrixrgb_writePixel73:
L__matrixrgb_writePixel72:
;__matrixrgb_driver.c, 210 :: 		return 1;
0x0FF0	0x2001    MOVS	R0, #1
0x0FF2	0xE02E    B	L_end_matrixrgb_writePixel
;__matrixrgb_driver.c, 211 :: 		}
L_matrixrgb_writePixel27:
;__matrixrgb_driver.c, 213 :: 		cmd = _MATRIXRGB_CMD_LOAD_PIX;
; color start address is: 8 (R2)
; y start address is: 4 (R1)
; x start address is: 0 (R0)
0x0FF4	0x2304    MOVS	R3, #4
0x0FF6	0xF88D3004  STRB	R3, [SP, #4]
;__matrixrgb_driver.c, 214 :: 		pos = ((y * _pix_w) + x);
0x0FFA	0x4B18    LDR	R3, [PC, #96]
0x0FFC	0x881B    LDRH	R3, [R3, #0]
0x0FFE	0x434B    MULS	R3, R1, R3
0x1000	0xB29B    UXTH	R3, R3
; y end address is: 4 (R1)
0x1002	0x181B    ADDS	R3, R3, R0
; x end address is: 0 (R0)
; pos start address is: 24 (R6)
0x1004	0xB29E    UXTH	R6, R3
;__matrixrgb_driver.c, 216 :: 		tmp[0] = color;
0x1006	0xF10D0505  ADD	R5, SP, #5
0x100A	0x702A    STRB	R2, [R5, #0]
;__matrixrgb_driver.c, 217 :: 		tmp[1] = color >> 8;
0x100C	0x1C6B    ADDS	R3, R5, #1
0x100E	0x0A14    LSRS	R4, R2, #8
; color end address is: 8 (R2)
0x1010	0x701C    STRB	R4, [R3, #0]
;__matrixrgb_driver.c, 218 :: 		tmp[2] = pos;
0x1012	0x1CAB    ADDS	R3, R5, #2
0x1014	0x701E    STRB	R6, [R3, #0]
;__matrixrgb_driver.c, 219 :: 		tmp[3] = pos >> 8;
0x1016	0x1CEB    ADDS	R3, R5, #3
0x1018	0x0A34    LSRS	R4, R6, #8
; pos end address is: 24 (R6)
0x101A	0x701C    STRB	R4, [R3, #0]
;__matrixrgb_driver.c, 221 :: 		WAIT_CYCLE();
L_matrixrgb_writePixel28:
0x101C	0x4C11    LDR	R4, [PC, #68]
0x101E	0x6824    LDR	R4, [R4, #0]
0x1020	0x47A0    BLX	R4
0x1022	0xB100    CBZ	R0, L_matrixrgb_writePixel29
0x1024	0xE7FA    B	L_matrixrgb_writePixel28
L_matrixrgb_writePixel29:
;__matrixrgb_driver.c, 222 :: 		hal_gpio_csSet( 0 );
0x1026	0x2000    MOVS	R0, #0
0x1028	0x4C0F    LDR	R4, [PC, #60]
0x102A	0x6824    LDR	R4, [R4, #0]
0x102C	0x47A0    BLX	R4
;__matrixrgb_driver.c, 223 :: 		hal_spiWrite( &cmd, 1 );
0x102E	0xAB01    ADD	R3, SP, #4
0x1030	0x2101    MOVS	R1, #1
0x1032	0x4618    MOV	R0, R3
0x1034	0xF7FFFB8C  BL	__matrixrgb_driver_hal_spiWrite+0
;__matrixrgb_driver.c, 224 :: 		hal_spiWrite( tmp, 4 );
0x1038	0xF10D0305  ADD	R3, SP, #5
0x103C	0x2104    MOVS	R1, #4
0x103E	0x4618    MOV	R0, R3
0x1040	0xF7FFFB86  BL	__matrixrgb_driver_hal_spiWrite+0
;__matrixrgb_driver.c, 225 :: 		hal_gpio_csSet( 1 );
0x1044	0x2001    MOVS	R0, #1
0x1046	0x4C08    LDR	R4, [PC, #32]
0x1048	0x6824    LDR	R4, [R4, #0]
0x104A	0x47A0    BLX	R4
;__matrixrgb_driver.c, 226 :: 		Delay_1ms();
0x104C	0xF7FFFB28  BL	_Delay_1ms+0
;__matrixrgb_driver.c, 228 :: 		return 0;
0x1050	0x2000    MOVS	R0, #0
;__matrixrgb_driver.c, 229 :: 		}
L_end_matrixrgb_writePixel:
0x1052	0xF8DDE000  LDR	LR, [SP, #0]
0x1056	0xB003    ADD	SP, SP, #12
0x1058	0x4770    BX	LR
0x105A	0xBF00    NOP
0x105C	0x05102000  	__matrixrgb_driver__pix_w+0
0x1060	0x05122000  	__matrixrgb_driver__pix_h+0
0x1064	0x05142000  	__matrixrgb_driver_hal_gpio_intGet+0
0x1068	0x05182000  	__matrixrgb_driver_hal_gpio_csSet+0
; end of _matrixrgb_writePixel
_matrixrgb_writeText:
;__matrixrgb_driver.c, 290 :: 		matrixrgb_writeText( char *text, uint16_t x, uint16_t y )
; y start address is: 8 (R2)
; x start address is: 4 (R1)
; text start address is: 0 (R0)
0x1100	0xB083    SUB	SP, SP, #12
0x1102	0xF8CDE000  STR	LR, [SP, #0]
; y end address is: 8 (R2)
; x end address is: 4 (R1)
; text end address is: 0 (R0)
; text start address is: 0 (R0)
; x start address is: 4 (R1)
; y start address is: 8 (R2)
;__matrixrgb_driver.c, 294 :: 		if (( x >= _pix_w ) || ( y >= _pix_h ))
0x1106	0x4B13    LDR	R3, [PC, #76]
0x1108	0x881B    LDRH	R3, [R3, #0]
0x110A	0x4299    CMP	R1, R3
0x110C	0xD204    BCS	L__matrixrgb_writeText79
0x110E	0x4B12    LDR	R3, [PC, #72]
0x1110	0x881B    LDRH	R3, [R3, #0]
0x1112	0x429A    CMP	R2, R3
0x1114	0xD200    BCS	L__matrixrgb_writeText78
0x1116	0xE001    B	L_matrixrgb_writeText42
; x end address is: 4 (R1)
; y end address is: 8 (R2)
; text end address is: 0 (R0)
L__matrixrgb_writeText79:
L__matrixrgb_writeText78:
;__matrixrgb_driver.c, 296 :: 		return 1;
0x1118	0x2001    MOVS	R0, #1
0x111A	0xE017    B	L_end_matrixrgb_writeText
;__matrixrgb_driver.c, 297 :: 		}
L_matrixrgb_writeText42:
;__matrixrgb_driver.c, 299 :: 		i = 0;
; text start address is: 0 (R0)
; i start address is: 16 (R4)
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0x111C	0x2400    MOVS	R4, #0
;__matrixrgb_driver.c, 301 :: 		_font_x_cord = x;
0x111E	0x4B0F    LDR	R3, [PC, #60]
0x1120	0x8019    STRH	R1, [R3, #0]
; x end address is: 4 (R1)
;__matrixrgb_driver.c, 302 :: 		_font_y_cord = y;
0x1122	0x4B0F    LDR	R3, [PC, #60]
0x1124	0x801A    STRH	R2, [R3, #0]
; y end address is: 8 (R2)
; i end address is: 16 (R4)
; text end address is: 0 (R0)
0x1126	0xB2A1    UXTH	R1, R4
;__matrixrgb_driver.c, 304 :: 		while( text[i] )
L_matrixrgb_writeText43:
; i start address is: 4 (R1)
; text start address is: 0 (R0)
0x1128	0x1843    ADDS	R3, R0, R1
0x112A	0x781B    LDRB	R3, [R3, #0]
0x112C	0xB16B    CBZ	R3, L_matrixrgb_writeText44
;__matrixrgb_driver.c, 306 :: 		_char_wr( text[i] );
0x112E	0x1843    ADDS	R3, R0, R1
0x1130	0x781B    LDRB	R3, [R3, #0]
0x1132	0x9001    STR	R0, [SP, #4]
0x1134	0xF8AD1008  STRH	R1, [SP, #8]
0x1138	0xB298    UXTH	R0, R3
0x113A	0xF7FFFDC5  BL	__matrixrgb_driver__char_wr+0
0x113E	0xF8BD1008  LDRH	R1, [SP, #8]
0x1142	0x9801    LDR	R0, [SP, #4]
;__matrixrgb_driver.c, 307 :: 		i++;
0x1144	0x1C49    ADDS	R1, R1, #1
0x1146	0xB289    UXTH	R1, R1
;__matrixrgb_driver.c, 308 :: 		}
; text end address is: 0 (R0)
; i end address is: 4 (R1)
0x1148	0xE7EE    B	L_matrixrgb_writeText43
L_matrixrgb_writeText44:
;__matrixrgb_driver.c, 310 :: 		return 0;
0x114A	0x2000    MOVS	R0, #0
;__matrixrgb_driver.c, 311 :: 		}
L_end_matrixrgb_writeText:
0x114C	0xF8DDE000  LDR	LR, [SP, #0]
0x1150	0xB003    ADD	SP, SP, #12
0x1152	0x4770    BX	LR
0x1154	0x05102000  	__matrixrgb_driver__pix_w+0
0x1158	0x05122000  	__matrixrgb_driver__pix_h+0
0x115C	0x052A2000  	__matrixrgb_driver__font_x_cord+0
0x1160	0x05222000  	__matrixrgb_driver__font_y_cord+0
; end of _matrixrgb_writeText
__matrixrgb_driver__char_wr:
;__matrixrgb_driver.c, 329 :: 		static void _char_wr( uint16_t ch )
; ch start address is: 0 (R0)
0x0CC8	0xB086    SUB	SP, SP, #24
0x0CCA	0xF8CDE000  STR	LR, [SP, #0]
; ch end address is: 0 (R0)
; ch start address is: 0 (R0)
;__matrixrgb_driver.c, 331 :: 		uint8_t     ch_width = 0;
;__matrixrgb_driver.c, 334 :: 		uint16_t    x = 0;
0x0CCE	0xF2400100  MOVW	R1, #0
0x0CD2	0xF8AD1010  STRH	R1, [SP, #16]
0x0CD6	0x2100    MOVS	R1, #0
0x0CD8	0xF88D1012  STRB	R1, [SP, #18]
;__matrixrgb_driver.c, 335 :: 		uint16_t    y = 0;
;__matrixrgb_driver.c, 337 :: 		uint8_t     temp = 0;
;__matrixrgb_driver.c, 338 :: 		uint8_t     mask = 0;
;__matrixrgb_driver.c, 343 :: 		if (ch < _font_first_char)
0x0CDC	0x4974    LDR	R1, [PC, #464]
0x0CDE	0x8809    LDRH	R1, [R1, #0]
0x0CE0	0x4288    CMP	R0, R1
0x0CE2	0xD200    BCS	L___matrixrgb_driver__char_wr47
; ch end address is: 0 (R0)
;__matrixrgb_driver.c, 345 :: 		return;
0x0CE4	0xE0DF    B	L_end__char_wr
;__matrixrgb_driver.c, 346 :: 		}
L___matrixrgb_driver__char_wr47:
;__matrixrgb_driver.c, 348 :: 		if (ch > _font_last_char)
; ch start address is: 0 (R0)
0x0CE6	0x4973    LDR	R1, [PC, #460]
0x0CE8	0x8809    LDRH	R1, [R1, #0]
0x0CEA	0x4288    CMP	R0, R1
0x0CEC	0xD900    BLS	L___matrixrgb_driver__char_wr48
; ch end address is: 0 (R0)
;__matrixrgb_driver.c, 350 :: 		return;
0x0CEE	0xE0DA    B	L_end__char_wr
;__matrixrgb_driver.c, 351 :: 		}
L___matrixrgb_driver__char_wr48:
;__matrixrgb_driver.c, 354 :: 		tmp = (ch - _font_first_char) << 2;
; ch start address is: 0 (R0)
0x0CF0	0x496F    LDR	R1, [PC, #444]
0x0CF2	0x8809    LDRH	R1, [R1, #0]
0x0CF4	0x1A41    SUB	R1, R0, R1
0x0CF6	0xB289    UXTH	R1, R1
; ch end address is: 0 (R0)
0x0CF8	0x008A    LSLS	R2, R1, #2
0x0CFA	0xB292    UXTH	R2, R2
;__matrixrgb_driver.c, 355 :: 		ch_table = _font + 8 + tmp;
0x0CFC	0x4C6E    LDR	R4, [PC, #440]
0x0CFE	0x6821    LDR	R1, [R4, #0]
0x0D00	0x3108    ADDS	R1, #8
0x0D02	0x188B    ADDS	R3, R1, R2
;__matrixrgb_driver.c, 356 :: 		ch_width = *ch_table;
0x0D04	0x7819    LDRB	R1, [R3, #0]
0x0D06	0xF88D1013  STRB	R1, [SP, #19]
;__matrixrgb_driver.c, 358 :: 		offset = (uint32_t)ch_table[1] + ((uint32_t)ch_table[2] << 8) + ((uint32_t)ch_table[3] << 16);
0x0D0A	0x1C59    ADDS	R1, R3, #1
0x0D0C	0x7809    LDRB	R1, [R1, #0]
0x0D0E	0xB2CA    UXTB	R2, R1
0x0D10	0x1C99    ADDS	R1, R3, #2
0x0D12	0x7809    LDRB	R1, [R1, #0]
0x0D14	0x0209    LSLS	R1, R1, #8
0x0D16	0x1852    ADDS	R2, R2, R1
0x0D18	0x1CD9    ADDS	R1, R3, #3
0x0D1A	0x7809    LDRB	R1, [R1, #0]
0x0D1C	0x0409    LSLS	R1, R1, #16
0x0D1E	0x1852    ADDS	R2, R2, R1
;__matrixrgb_driver.c, 359 :: 		ch_bitmap = _font + offset;
0x0D20	0x4621    MOV	R1, R4
0x0D22	0x6809    LDR	R1, [R1, #0]
0x0D24	0x1889    ADDS	R1, R1, R2
0x0D26	0x9103    STR	R1, [SP, #12]
;__matrixrgb_driver.c, 361 :: 		if ((_font_orientation == _MATRIXRGB_FONT_HORIZONTAL) || (_font_orientation == _MATRIXRGB_FONT_VERTICAL_COLUMN))
0x0D28	0x4964    LDR	R1, [PC, #400]
0x0D2A	0x7809    LDRB	R1, [R1, #0]
0x0D2C	0xB121    CBZ	R1, L___matrixrgb_driver__char_wr76
0x0D2E	0x4963    LDR	R1, [PC, #396]
0x0D30	0x7809    LDRB	R1, [R1, #0]
0x0D32	0x2902    CMP	R1, #2
0x0D34	0xD000    BEQ	L___matrixrgb_driver__char_wr75
0x0D36	0xE05E    B	L___matrixrgb_driver__char_wr51
L___matrixrgb_driver__char_wr76:
L___matrixrgb_driver__char_wr75:
;__matrixrgb_driver.c, 363 :: 		y = _font_y_cord;
0x0D38	0x4961    LDR	R1, [PC, #388]
; y start address is: 12 (R3)
0x0D3A	0x880B    LDRH	R3, [R1, #0]
;__matrixrgb_driver.c, 365 :: 		for (y_cnt = 0; y_cnt < _font_height; y_cnt++)
; y_cnt start address is: 8 (R2)
0x0D3C	0x2200    MOVS	R2, #0
; y end address is: 12 (R3)
; y_cnt end address is: 8 (R2)
L___matrixrgb_driver__char_wr52:
; y_cnt start address is: 8 (R2)
; y start address is: 12 (R3)
0x0D3E	0x4961    LDR	R1, [PC, #388]
0x0D40	0x8809    LDRH	R1, [R1, #0]
0x0D42	0x428A    CMP	R2, R1
0x0D44	0xD24B    BCS	L___matrixrgb_driver__char_wr53
;__matrixrgb_driver.c, 367 :: 		x = _font_x_cord;
0x0D46	0x4960    LDR	R1, [PC, #384]
0x0D48	0x8809    LDRH	R1, [R1, #0]
0x0D4A	0xF8AD1010  STRH	R1, [SP, #16]
;__matrixrgb_driver.c, 368 :: 		mask = 0;
0x0D4E	0x2100    MOVS	R1, #0
0x0D50	0xF88D1014  STRB	R1, [SP, #20]
;__matrixrgb_driver.c, 369 :: 		for (x_cnt = 0; x_cnt < ch_width; x_cnt++)
0x0D54	0x2100    MOVS	R1, #0
0x0D56	0xF88D1008  STRB	R1, [SP, #8]
; y end address is: 12 (R3)
; y_cnt end address is: 8 (R2)
0x0D5A	0xB2D0    UXTB	R0, R2
L___matrixrgb_driver__char_wr55:
; y start address is: 12 (R3)
; y_cnt start address is: 0 (R0)
0x0D5C	0xF89D2013  LDRB	R2, [SP, #19]
0x0D60	0xF89D1008  LDRB	R1, [SP, #8]
0x0D64	0x4291    CMP	R1, R2
0x0D66	0xD235    BCS	L___matrixrgb_driver__char_wr56
;__matrixrgb_driver.c, 371 :: 		if (!mask)
0x0D68	0xF89D1014  LDRB	R1, [SP, #20]
0x0D6C	0xB949    CBNZ	R1, L___matrixrgb_driver__char_wr58
;__matrixrgb_driver.c, 373 :: 		temp = *ch_bitmap++;
0x0D6E	0x9903    LDR	R1, [SP, #12]
0x0D70	0x7809    LDRB	R1, [R1, #0]
0x0D72	0xF88D1012  STRB	R1, [SP, #18]
0x0D76	0x9903    LDR	R1, [SP, #12]
0x0D78	0x1C49    ADDS	R1, R1, #1
0x0D7A	0x9103    STR	R1, [SP, #12]
;__matrixrgb_driver.c, 374 :: 		mask = 0x01;
0x0D7C	0x2101    MOVS	R1, #1
0x0D7E	0xF88D1014  STRB	R1, [SP, #20]
;__matrixrgb_driver.c, 375 :: 		}
L___matrixrgb_driver__char_wr58:
;__matrixrgb_driver.c, 377 :: 		if (temp & mask)
0x0D82	0xF89D2014  LDRB	R2, [SP, #20]
0x0D86	0xF89D1012  LDRB	R1, [SP, #18]
0x0D8A	0x4011    ANDS	R1, R2
0x0D8C	0xB2C9    UXTB	R1, R1
0x0D8E	0xB189    CBZ	R1, L___matrixrgb_driver__char_wr59
;__matrixrgb_driver.c, 379 :: 		matrixrgb_writePixel( x, y, _font_color );
0x0D90	0x494E    LDR	R1, [PC, #312]
0x0D92	0x8809    LDRH	R1, [R1, #0]
0x0D94	0xF88D0004  STRB	R0, [SP, #4]
0x0D98	0xF8AD3006  STRH	R3, [SP, #6]
0x0D9C	0xB28A    UXTH	R2, R1
0x0D9E	0xB299    UXTH	R1, R3
0x0DA0	0xF8BD0010  LDRH	R0, [SP, #16]
0x0DA4	0xF000F918  BL	_matrixrgb_writePixel+0
0x0DA8	0xF8BD3006  LDRH	R3, [SP, #6]
0x0DAC	0xF89D0004  LDRB	R0, [SP, #4]
;__matrixrgb_driver.c, 380 :: 		Delay_80us();
0x0DB0	0xF7FFFCC2  BL	_Delay_80us+0
;__matrixrgb_driver.c, 381 :: 		}
L___matrixrgb_driver__char_wr59:
;__matrixrgb_driver.c, 383 :: 		x++;
0x0DB4	0xF8BD1010  LDRH	R1, [SP, #16]
0x0DB8	0x1C49    ADDS	R1, R1, #1
0x0DBA	0xF8AD1010  STRH	R1, [SP, #16]
;__matrixrgb_driver.c, 384 :: 		mask <<= 1;
0x0DBE	0xF89D1014  LDRB	R1, [SP, #20]
0x0DC2	0x0049    LSLS	R1, R1, #1
0x0DC4	0xF88D1014  STRB	R1, [SP, #20]
;__matrixrgb_driver.c, 369 :: 		for (x_cnt = 0; x_cnt < ch_width; x_cnt++)
0x0DC8	0xF89D1008  LDRB	R1, [SP, #8]
0x0DCC	0x1C49    ADDS	R1, R1, #1
0x0DCE	0xF88D1008  STRB	R1, [SP, #8]
;__matrixrgb_driver.c, 385 :: 		}
0x0DD2	0xE7C3    B	L___matrixrgb_driver__char_wr55
L___matrixrgb_driver__char_wr56:
;__matrixrgb_driver.c, 386 :: 		y++;
0x0DD4	0x1C5B    ADDS	R3, R3, #1
0x0DD6	0xB29B    UXTH	R3, R3
;__matrixrgb_driver.c, 365 :: 		for (y_cnt = 0; y_cnt < _font_height; y_cnt++)
0x0DD8	0x1C41    ADDS	R1, R0, #1
; y_cnt end address is: 0 (R0)
; y_cnt start address is: 8 (R2)
0x0DDA	0xB2CA    UXTB	R2, R1
;__matrixrgb_driver.c, 387 :: 		}
; y_cnt end address is: 8 (R2)
0x0DDC	0xE7AF    B	L___matrixrgb_driver__char_wr52
L___matrixrgb_driver__char_wr53:
;__matrixrgb_driver.c, 389 :: 		if (_font_orientation == _MATRIXRGB_FONT_HORIZONTAL)
0x0DDE	0x4937    LDR	R1, [PC, #220]
0x0DE0	0x7809    LDRB	R1, [R1, #0]
0x0DE2	0xB929    CBNZ	R1, L___matrixrgb_driver__char_wr60
; y end address is: 12 (R3)
;__matrixrgb_driver.c, 391 :: 		_font_x_cord = x + 1;
0x0DE4	0xF8BD1010  LDRH	R1, [SP, #16]
0x0DE8	0x1C4A    ADDS	R2, R1, #1
0x0DEA	0x4937    LDR	R1, [PC, #220]
0x0DEC	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 392 :: 		}
0x0DEE	0xE001    B	L___matrixrgb_driver__char_wr61
L___matrixrgb_driver__char_wr60:
;__matrixrgb_driver.c, 395 :: 		_font_y_cord = y;
; y start address is: 12 (R3)
0x0DF0	0x4933    LDR	R1, [PC, #204]
0x0DF2	0x800B    STRH	R3, [R1, #0]
; y end address is: 12 (R3)
;__matrixrgb_driver.c, 396 :: 		}
L___matrixrgb_driver__char_wr61:
;__matrixrgb_driver.c, 397 :: 		}
0x0DF4	0xE057    B	L___matrixrgb_driver__char_wr62
L___matrixrgb_driver__char_wr51:
;__matrixrgb_driver.c, 400 :: 		y = _font_x_cord;
0x0DF6	0x4934    LDR	R1, [PC, #208]
; y start address is: 12 (R3)
0x0DF8	0x880B    LDRH	R3, [R1, #0]
;__matrixrgb_driver.c, 402 :: 		for (y_cnt = 0; y_cnt < _font_height; y_cnt++)
; y_cnt start address is: 8 (R2)
0x0DFA	0x2200    MOVS	R2, #0
; y end address is: 12 (R3)
; y_cnt end address is: 8 (R2)
L___matrixrgb_driver__char_wr63:
; y_cnt start address is: 8 (R2)
; y start address is: 12 (R3)
0x0DFC	0x4931    LDR	R1, [PC, #196]
0x0DFE	0x8809    LDRH	R1, [R1, #0]
0x0E00	0x428A    CMP	R2, R1
0x0E02	0xD24B    BCS	L___matrixrgb_driver__char_wr64
;__matrixrgb_driver.c, 404 :: 		x = _font_y_cord;
0x0E04	0x492E    LDR	R1, [PC, #184]
0x0E06	0x8809    LDRH	R1, [R1, #0]
0x0E08	0xF8AD1010  STRH	R1, [SP, #16]
;__matrixrgb_driver.c, 405 :: 		mask = 0;
0x0E0C	0x2100    MOVS	R1, #0
0x0E0E	0xF88D1014  STRB	R1, [SP, #20]
;__matrixrgb_driver.c, 407 :: 		for (x_cnt = 0; x_cnt < ch_width; x_cnt++)
0x0E12	0x2100    MOVS	R1, #0
0x0E14	0xF88D1008  STRB	R1, [SP, #8]
; y end address is: 12 (R3)
; y_cnt end address is: 8 (R2)
0x0E18	0xB2D0    UXTB	R0, R2
L___matrixrgb_driver__char_wr66:
; y start address is: 12 (R3)
; y_cnt start address is: 0 (R0)
0x0E1A	0xF89D2013  LDRB	R2, [SP, #19]
0x0E1E	0xF89D1008  LDRB	R1, [SP, #8]
0x0E22	0x4291    CMP	R1, R2
0x0E24	0xD235    BCS	L___matrixrgb_driver__char_wr67
;__matrixrgb_driver.c, 409 :: 		if (mask == 0)
0x0E26	0xF89D1014  LDRB	R1, [SP, #20]
0x0E2A	0xB949    CBNZ	R1, L___matrixrgb_driver__char_wr69
;__matrixrgb_driver.c, 411 :: 		temp = *ch_bitmap++;
0x0E2C	0x9903    LDR	R1, [SP, #12]
0x0E2E	0x7809    LDRB	R1, [R1, #0]
0x0E30	0xF88D1012  STRB	R1, [SP, #18]
0x0E34	0x9903    LDR	R1, [SP, #12]
0x0E36	0x1C49    ADDS	R1, R1, #1
0x0E38	0x9103    STR	R1, [SP, #12]
;__matrixrgb_driver.c, 412 :: 		mask = 0x01;
0x0E3A	0x2101    MOVS	R1, #1
0x0E3C	0xF88D1014  STRB	R1, [SP, #20]
;__matrixrgb_driver.c, 413 :: 		}
L___matrixrgb_driver__char_wr69:
;__matrixrgb_driver.c, 415 :: 		if (temp & mask)
0x0E40	0xF89D2014  LDRB	R2, [SP, #20]
0x0E44	0xF89D1012  LDRB	R1, [SP, #18]
0x0E48	0x4011    ANDS	R1, R2
0x0E4A	0xB2C9    UXTB	R1, R1
0x0E4C	0xB189    CBZ	R1, L___matrixrgb_driver__char_wr70
;__matrixrgb_driver.c, 417 :: 		matrixrgb_writePixel( x, y, _font_color );
0x0E4E	0x491F    LDR	R1, [PC, #124]
0x0E50	0x8809    LDRH	R1, [R1, #0]
0x0E52	0xF88D0004  STRB	R0, [SP, #4]
0x0E56	0xF8AD3006  STRH	R3, [SP, #6]
0x0E5A	0xB28A    UXTH	R2, R1
0x0E5C	0xB299    UXTH	R1, R3
0x0E5E	0xF8BD0010  LDRH	R0, [SP, #16]
0x0E62	0xF000F8B9  BL	_matrixrgb_writePixel+0
0x0E66	0xF8BD3006  LDRH	R3, [SP, #6]
0x0E6A	0xF89D0004  LDRB	R0, [SP, #4]
;__matrixrgb_driver.c, 418 :: 		Delay_80us();
0x0E6E	0xF7FFFC63  BL	_Delay_80us+0
;__matrixrgb_driver.c, 419 :: 		}
L___matrixrgb_driver__char_wr70:
;__matrixrgb_driver.c, 421 :: 		x--;
0x0E72	0xF8BD1010  LDRH	R1, [SP, #16]
0x0E76	0x1E49    SUBS	R1, R1, #1
0x0E78	0xF8AD1010  STRH	R1, [SP, #16]
;__matrixrgb_driver.c, 422 :: 		mask <<= 1;
0x0E7C	0xF89D1014  LDRB	R1, [SP, #20]
0x0E80	0x0049    LSLS	R1, R1, #1
0x0E82	0xF88D1014  STRB	R1, [SP, #20]
;__matrixrgb_driver.c, 407 :: 		for (x_cnt = 0; x_cnt < ch_width; x_cnt++)
0x0E86	0xF89D1008  LDRB	R1, [SP, #8]
0x0E8A	0x1C49    ADDS	R1, R1, #1
0x0E8C	0xF88D1008  STRB	R1, [SP, #8]
;__matrixrgb_driver.c, 423 :: 		}
0x0E90	0xE7C3    B	L___matrixrgb_driver__char_wr66
L___matrixrgb_driver__char_wr67:
;__matrixrgb_driver.c, 424 :: 		y++;
0x0E92	0x1C5B    ADDS	R3, R3, #1
0x0E94	0xB29B    UXTH	R3, R3
;__matrixrgb_driver.c, 402 :: 		for (y_cnt = 0; y_cnt < _font_height; y_cnt++)
0x0E96	0x1C42    ADDS	R2, R0, #1
0x0E98	0xB2D2    UXTB	R2, R2
; y_cnt end address is: 0 (R0)
; y_cnt start address is: 8 (R2)
;__matrixrgb_driver.c, 425 :: 		}
; y end address is: 12 (R3)
; y_cnt end address is: 8 (R2)
0x0E9A	0xE7AF    B	L___matrixrgb_driver__char_wr63
L___matrixrgb_driver__char_wr64:
;__matrixrgb_driver.c, 426 :: 		_font_y_cord = x - 1;
0x0E9C	0xF8BD1010  LDRH	R1, [SP, #16]
0x0EA0	0x1E4A    SUBS	R2, R1, #1
0x0EA2	0x4907    LDR	R1, [PC, #28]
0x0EA4	0x800A    STRH	R2, [R1, #0]
;__matrixrgb_driver.c, 427 :: 		}
L___matrixrgb_driver__char_wr62:
;__matrixrgb_driver.c, 428 :: 		}
L_end__char_wr:
0x0EA6	0xF8DDE000  LDR	LR, [SP, #0]
0x0EAA	0xB006    ADD	SP, SP, #24
0x0EAC	0x4770    BX	LR
0x0EAE	0xBF00    NOP
0x0EB0	0x051E2000  	__matrixrgb_driver__font_first_char+0
0x0EB4	0x05202000  	__matrixrgb_driver__font_last_char+0
0x0EB8	0x05242000  	__matrixrgb_driver__font+0
0x0EBC	0x05032000  	__matrixrgb_driver__font_orientation+0
0x0EC0	0x05222000  	__matrixrgb_driver__font_y_cord+0
0x0EC4	0x05282000  	__matrixrgb_driver__font_height+0
0x0EC8	0x052A2000  	__matrixrgb_driver__font_x_cord+0
0x0ECC	0x052C2000  	__matrixrgb_driver__font_color+0
; end of __matrixrgb_driver__char_wr
_Delay_80us:
;__Lib_Delays.c, 29 :: 		void Delay_80us() {
;__Lib_Delays.c, 30 :: 		Delay_us(78);
0x0738	0xF24037A7  MOVW	R7, #935
0x073C	0xF2C00700  MOVT	R7, #0
L_Delay_80us8:
0x0740	0x1E7F    SUBS	R7, R7, #1
0x0742	0xD1FD    BNE	L_Delay_80us8
0x0744	0xBF00    NOP
0x0746	0xBF00    NOP
0x0748	0xBF00    NOP
0x074A	0xBF00    NOP
0x074C	0xBF00    NOP
;__Lib_Delays.c, 31 :: 		}
L_end_Delay_80us:
0x074E	0x4770    BX	LR
; end of _Delay_80us
_matrixrgb_drawImage:
;__matrixrgb_driver.c, 255 :: 		void matrixrgb_drawImage( const uint8_t *img )
0x106C	0xB084    SUB	SP, SP, #16
0x106E	0xF8CDE000  STR	LR, [SP, #0]
0x1072	0x9003    STR	R0, [SP, #12]
;__matrixrgb_driver.c, 261 :: 		cmd = _MATRIXRGB_CMD_LOAD_IMG;
0x1074	0x2403    MOVS	R4, #3
0x1076	0xF88D4008  STRB	R4, [SP, #8]
;__matrixrgb_driver.c, 263 :: 		WAIT_CYCLE();
L_matrixrgb_drawImage35:
0x107A	0x4C1E    LDR	R4, [PC, #120]
0x107C	0x6824    LDR	R4, [R4, #0]
0x107E	0x47A0    BLX	R4
0x1080	0xB100    CBZ	R0, L_matrixrgb_drawImage36
0x1082	0xE7FA    B	L_matrixrgb_drawImage35
L_matrixrgb_drawImage36:
;__matrixrgb_driver.c, 264 :: 		hal_gpio_csSet( 0 );
0x1084	0x2000    MOVS	R0, #0
0x1086	0x4C1C    LDR	R4, [PC, #112]
0x1088	0x6824    LDR	R4, [R4, #0]
0x108A	0x47A0    BLX	R4
;__matrixrgb_driver.c, 265 :: 		hal_spiWrite( &cmd, 1 );
0x108C	0xA902    ADD	R1, SP, #8
0x108E	0x4608    MOV	R0, R1
0x1090	0x2101    MOVS	R1, #1
0x1092	0xF7FFFB5D  BL	__matrixrgb_driver_hal_spiWrite+0
;__matrixrgb_driver.c, 267 :: 		for (pos = 0; pos < _ram_s; pos++)
; pos start address is: 16 (R4)
0x1096	0x2400    MOVS	R4, #0
; pos end address is: 16 (R4)
0x1098	0xB2A0    UXTH	R0, R4
L_matrixrgb_drawImage37:
; pos start address is: 0 (R0)
0x109A	0x4918    LDR	R1, [PC, #96]
0x109C	0x8809    LDRH	R1, [R1, #0]
0x109E	0x4288    CMP	R0, R1
0x10A0	0xD21E    BCS	L_matrixrgb_drawImage38
;__matrixrgb_driver.c, 269 :: 		tmp[ 0 ] = img[ pos * 2 ];
0x10A2	0xF10D0409  ADD	R4, SP, #9
0x10A6	0x0042    LSLS	R2, R0, #1
0x10A8	0xB292    UXTH	R2, R2
0x10AA	0x9903    LDR	R1, [SP, #12]
0x10AC	0x1889    ADDS	R1, R1, R2
0x10AE	0x7809    LDRB	R1, [R1, #0]
0x10B0	0x7021    STRB	R1, [R4, #0]
;__matrixrgb_driver.c, 270 :: 		tmp[ 1 ] = img[ pos * 2 + 1 ];
0x10B2	0x1C63    ADDS	R3, R4, #1
0x10B4	0x0041    LSLS	R1, R0, #1
0x10B6	0xB289    UXTH	R1, R1
0x10B8	0x1C4A    ADDS	R2, R1, #1
0x10BA	0xB292    UXTH	R2, R2
0x10BC	0x9903    LDR	R1, [SP, #12]
0x10BE	0x1889    ADDS	R1, R1, R2
0x10C0	0x7809    LDRB	R1, [R1, #0]
0x10C2	0x7019    STRB	R1, [R3, #0]
;__matrixrgb_driver.c, 271 :: 		hal_spiWrite( tmp, 2 );
0x10C4	0xF8AD0004  STRH	R0, [SP, #4]
0x10C8	0x2102    MOVS	R1, #2
0x10CA	0x4620    MOV	R0, R4
0x10CC	0xF7FFFB40  BL	__matrixrgb_driver_hal_spiWrite+0
0x10D0	0xF8BD0004  LDRH	R0, [SP, #4]
;__matrixrgb_driver.c, 272 :: 		Delay_1ms();
0x10D4	0xF7FFFAE4  BL	_Delay_1ms+0
;__matrixrgb_driver.c, 267 :: 		for (pos = 0; pos < _ram_s; pos++)
0x10D8	0x1C41    ADDS	R1, R0, #1
; pos end address is: 0 (R0)
; pos start address is: 16 (R4)
0x10DA	0xB28C    UXTH	R4, R1
;__matrixrgb_driver.c, 273 :: 		}
0x10DC	0xB2A0    UXTH	R0, R4
; pos end address is: 16 (R4)
0x10DE	0xE7DC    B	L_matrixrgb_drawImage37
L_matrixrgb_drawImage38:
;__matrixrgb_driver.c, 275 :: 		hal_gpio_csSet( 1 );
0x10E0	0x2001    MOVS	R0, #1
0x10E2	0x4C05    LDR	R4, [PC, #20]
0x10E4	0x6824    LDR	R4, [R4, #0]
0x10E6	0x47A0    BLX	R4
;__matrixrgb_driver.c, 276 :: 		Delay_1ms();
0x10E8	0xF7FFFADA  BL	_Delay_1ms+0
;__matrixrgb_driver.c, 277 :: 		}
L_end_matrixrgb_drawImage:
0x10EC	0xF8DDE000  LDR	LR, [SP, #0]
0x10F0	0xB004    ADD	SP, SP, #16
0x10F2	0x4770    BX	LR
0x10F4	0x05142000  	__matrixrgb_driver_hal_gpio_intGet+0
0x10F8	0x05182000  	__matrixrgb_driver_hal_gpio_csSet+0
0x10FC	0x051C2000  	__matrixrgb_driver__ram_s+0
; end of _matrixrgb_drawImage
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x175C	0xB081    SUB	SP, SP, #4
0x175E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1762	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x1764	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x1766	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1768	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x176A	0xF64B3080  MOVW	R0, #48000
0x176E	0x4281    CMP	R1, R0
0x1770	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x1772	0x4846    LDR	R0, [PC, #280]
0x1774	0x6800    LDR	R0, [R0, #0]
0x1776	0xF0400102  ORR	R1, R0, #2
0x177A	0x4844    LDR	R0, [PC, #272]
0x177C	0x6001    STR	R1, [R0, #0]
0x177E	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1780	0xF64550C0  MOVW	R0, #24000
0x1784	0x4281    CMP	R1, R0
0x1786	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x1788	0x4840    LDR	R0, [PC, #256]
0x178A	0x6800    LDR	R0, [R0, #0]
0x178C	0xF0400101  ORR	R1, R0, #1
0x1790	0x483E    LDR	R0, [PC, #248]
0x1792	0x6001    STR	R1, [R0, #0]
0x1794	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x1796	0x483D    LDR	R0, [PC, #244]
0x1798	0x6801    LDR	R1, [R0, #0]
0x179A	0xF06F0007  MVN	R0, #7
0x179E	0x4001    ANDS	R1, R0
0x17A0	0x483A    LDR	R0, [PC, #232]
0x17A2	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x17A4	0xF7FFFE7C  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x17A8	0x4839    LDR	R0, [PC, #228]
0x17AA	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x17AC	0x4839    LDR	R0, [PC, #228]
0x17AE	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x17B0	0x4839    LDR	R0, [PC, #228]
0x17B2	0xEA020100  AND	R1, R2, R0, LSL #0
0x17B6	0x4839    LDR	R0, [PC, #228]
0x17B8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x17BA	0xF0020001  AND	R0, R2, #1
0x17BE	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x17C0	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x17C2	0x4836    LDR	R0, [PC, #216]
0x17C4	0x6800    LDR	R0, [R0, #0]
0x17C6	0xF0000002  AND	R0, R0, #2
0x17CA	0x2800    CMP	R0, #0
0x17CC	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x17CE	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x17D0	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x17D2	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x17D4	0xF4023080  AND	R0, R2, #65536
0x17D8	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x17DA	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x17DC	0x482F    LDR	R0, [PC, #188]
0x17DE	0x6800    LDR	R0, [R0, #0]
0x17E0	0xF4003000  AND	R0, R0, #131072
0x17E4	0x2800    CMP	R0, #0
0x17E6	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x17E8	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x17EA	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x17EC	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x17EE	0xF0025080  AND	R0, R2, #268435456
0x17F2	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x17F4	0x4829    LDR	R0, [PC, #164]
0x17F6	0x6800    LDR	R0, [R0, #0]
0x17F8	0xF0405180  ORR	R1, R0, #268435456
0x17FC	0x4827    LDR	R0, [PC, #156]
0x17FE	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1800	0x4826    LDR	R0, [PC, #152]
0x1802	0x6800    LDR	R0, [R0, #0]
0x1804	0xF0005000  AND	R0, R0, #536870912
0x1808	0x2800    CMP	R0, #0
0x180A	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x180C	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x180E	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1810	0xF0026080  AND	R0, R2, #67108864
0x1814	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x1816	0x4821    LDR	R0, [PC, #132]
0x1818	0x6800    LDR	R0, [R0, #0]
0x181A	0xF0406180  ORR	R1, R0, #67108864
0x181E	0x481F    LDR	R0, [PC, #124]
0x1820	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1822	0x4611    MOV	R1, R2
0x1824	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1826	0x481D    LDR	R0, [PC, #116]
0x1828	0x6800    LDR	R0, [R0, #0]
0x182A	0xF0006000  AND	R0, R0, #134217728
0x182E	0x2800    CMP	R0, #0
0x1830	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x1832	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1834	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x1836	0x4611    MOV	R1, R2
0x1838	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x183A	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x183E	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x1840	0x4816    LDR	R0, [PC, #88]
0x1842	0x6800    LDR	R0, [R0, #0]
0x1844	0xF0407180  ORR	R1, R0, #16777216
0x1848	0x4814    LDR	R0, [PC, #80]
0x184A	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x184C	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x184E	0x4813    LDR	R0, [PC, #76]
0x1850	0x6800    LDR	R0, [R0, #0]
0x1852	0xF0007000  AND	R0, R0, #33554432
0x1856	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x1858	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x185A	0x460A    MOV	R2, R1
0x185C	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x185E	0x480C    LDR	R0, [PC, #48]
0x1860	0x6800    LDR	R0, [R0, #0]
0x1862	0xF000010C  AND	R1, R0, #12
0x1866	0x0090    LSLS	R0, R2, #2
0x1868	0xF000000C  AND	R0, R0, #12
0x186C	0x4281    CMP	R1, R0
0x186E	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1870	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x1872	0xF8DDE000  LDR	LR, [SP, #0]
0x1876	0xB001    ADD	SP, SP, #4
0x1878	0x4770    BX	LR
0x187A	0xBF00    NOP
0x187C	0x00810501  	#83951745
0x1880	0x8402001D  	#1934338
0x1884	0x06440001  	#67140
0x1888	0x19400001  	#72000
0x188C	0x20004002  	FLASH_ACR+0
0x1890	0x10044002  	RCC_CFGR+0
0x1894	0x102C4002  	RCC_CFGR2+0
0x1898	0xFFFF000F  	#1048575
0x189C	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x14A0	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x14A2	0x4815    LDR	R0, [PC, #84]
0x14A4	0x6800    LDR	R0, [R0, #0]
0x14A6	0xF0400101  ORR	R1, R0, #1
0x14AA	0x4813    LDR	R0, [PC, #76]
0x14AC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x14AE	0x4913    LDR	R1, [PC, #76]
0x14B0	0x4813    LDR	R0, [PC, #76]
0x14B2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x14B4	0x4810    LDR	R0, [PC, #64]
0x14B6	0x6801    LDR	R1, [R0, #0]
0x14B8	0x4812    LDR	R0, [PC, #72]
0x14BA	0x4001    ANDS	R1, R0
0x14BC	0x480E    LDR	R0, [PC, #56]
0x14BE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x14C0	0x480D    LDR	R0, [PC, #52]
0x14C2	0x6801    LDR	R1, [R0, #0]
0x14C4	0xF46F2080  MVN	R0, #262144
0x14C8	0x4001    ANDS	R1, R0
0x14CA	0x480B    LDR	R0, [PC, #44]
0x14CC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x14CE	0x480C    LDR	R0, [PC, #48]
0x14D0	0x6801    LDR	R1, [R0, #0]
0x14D2	0xF46F00FE  MVN	R0, #8323072
0x14D6	0x4001    ANDS	R1, R0
0x14D8	0x4809    LDR	R0, [PC, #36]
0x14DA	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x14DC	0x4806    LDR	R0, [PC, #24]
0x14DE	0x6801    LDR	R1, [R0, #0]
0x14E0	0xF06F50A0  MVN	R0, #335544320
0x14E4	0x4001    ANDS	R1, R0
0x14E6	0x4804    LDR	R0, [PC, #16]
0x14E8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x14EA	0xF04F0100  MOV	R1, #0
0x14EE	0x4806    LDR	R0, [PC, #24]
0x14F0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x14F2	0xB001    ADD	SP, SP, #4
0x14F4	0x4770    BX	LR
0x14F6	0xBF00    NOP
0x14F8	0x10004002  	RCC_CR+0
0x14FC	0x0000F0FF  	#-251723776
0x1500	0x10044002  	RCC_CFGR+0
0x1504	0xFFFFFEF6  	#-17367041
0x1508	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x1720	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x1722	0x4902    LDR	R1, [PC, #8]
0x1724	0x4802    LDR	R0, [PC, #8]
0x1726	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x1728	0xB001    ADD	SP, SP, #4
0x172A	0x4770    BX	LR
0x172C	0x19400001  	#72000
0x1730	0x050C2000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x1734	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x1736	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x1738	0xB001    ADD	SP, SP, #4
0x173A	0x4770    BX	LR
; end of ___GenExcept
0x2680	0xB500    PUSH	(R14)
0x2682	0xF8DFB014  LDR	R11, [PC, #20]
0x2686	0xF8DFA014  LDR	R10, [PC, #20]
0x268A	0xF8DFC014  LDR	R12, [PC, #20]
0x268E	0xF7FEFF3D  BL	5388
0x2692	0xBD00    POP	(R15)
0x2694	0x4770    BX	LR
0x2696	0xBF00    NOP
0x2698	0x00002000  	#536870912
0x269C	0x05032000  	#536872195
0x26A0	0x20A00000  	#8352
0x2700	0xB500    PUSH	(R14)
0x2702	0xF8DFB010  LDR	R11, [PC, #16]
0x2706	0xF8DFA010  LDR	R10, [PC, #16]
0x270A	0xF7FEFEAB  BL	5220
0x270E	0xBD00    POP	(R15)
0x2710	0x4770    BX	LR
0x2712	0xBF00    NOP
0x2714	0x00002000  	#536870912
0x2718	0x053C2000  	#536872252
;Click_Matrix_RGB_STM.c,3 :: Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp [2048]
0x18A0	0xF36EFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+0
0x18A4	0xF229E9E8 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+4
0x18A8	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+8
0x18AC	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+12
0x18B0	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+16
0x18B4	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+20
0x18B8	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+24
0x18BC	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+28
0x18C0	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+32
0x18C4	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+36
0x18C8	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+40
0x18CC	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+44
0x18D0	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+48
0x18D4	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+52
0x18D8	0xE9E8F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+56
0x18DC	0xFFFFF32D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+60
0x18E0	0xFD76F30C ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+64
0x18E4	0xFF5DFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+68
0x18E8	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+72
0x18EC	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+76
0x18F0	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+80
0x18F4	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+84
0x18F8	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+88
0x18FC	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+92
0x1900	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+96
0x1904	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+100
0x1908	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+104
0x190C	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+108
0x1910	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+112
0x1914	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+116
0x1918	0xFFDFFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+120
0x191C	0xF28AFE18 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+124
0x1920	0xFF7DE9C7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+128
0x1924	0xE801E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+132
0x1928	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+136
0x192C	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+140
0x1930	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+144
0x1934	0xE821E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+148
0x1938	0xE821E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+152
0x193C	0xE800E801 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+156
0x1940	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+160
0x1944	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+164
0x1948	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+168
0x194C	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+172
0x1950	0xE821E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+176
0x1954	0xE821E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+180
0x1958	0xE800E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+184
0x195C	0xEA08FEDB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+188
0x1960	0xFE79F209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+192
0x1964	0xE925E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+196
0x1968	0xFFDFFEDB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+200
0x196C	0xFF9EFFBE ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+204
0x1970	0xFE18FF7D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+208
0x1974	0xE8C4E8A3 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+212
0x1978	0xE821E8C4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+216
0x197C	0xF4F4E987 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+220
0x1980	0xFFFFFF3C ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+224
0x1984	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+228
0x1988	0xFF7DFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+232
0x198C	0xF26AFD96 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+236
0x1990	0xE8A3E801 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+240
0x1994	0xE8E4E8E4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+244
0x1998	0xE842E8E4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+248
0x199C	0xF26AFDD7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+252
0x19A0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+256
0x19A4	0xFEFBE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+260
0x19A8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+264
0x19AC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+268
0x19B0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+272
0x19B4	0xE821FD76 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+276
0x19B8	0xFE39E862 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+280
0x19BC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+284
0x19C0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+288
0x19C4	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+292
0x19C8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+296
0x19CC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+300
0x19D0	0xE966FF7D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+304
0x19D4	0xE8E4E862 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+308
0x19D8	0xE842E8E4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+312
0x19DC	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+316
0x19E0	0xFE7AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+320
0x19E4	0xFFFFE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+324
0x19E8	0xF26AF4B3 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+328
0x19EC	0xF28BF28B ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+332
0x19F0	0xFE18F24A ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+336
0x19F4	0xE800FF3C ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+340
0x19F8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+344
0x19FC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+348
0x1A00	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+352
0x1A04	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+356
0x1A08	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+360
0x1A0C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+364
0x1A10	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+368
0x1A14	0xE883F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+372
0x1A18	0xE842E8E4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+376
0x1A1C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+380
0x1A20	0xFE7AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+384
0x1A24	0xFFFFE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+388
0x1A28	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+392
0x1A2C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+396
0x1A30	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+400
0x1A34	0xFE18E9E8 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+404
0x1A38	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+408
0x1A3C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+412
0x1A40	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+416
0x1A44	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+420
0x1A48	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+424
0x1A4C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+428
0x1A50	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+432
0x1A54	0xE8C4FFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+436
0x1A58	0xE842E8C4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+440
0x1A5C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+444
0x1A60	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+448
0x1A64	0xF2ECE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+452
0x1A68	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+456
0x1A6C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+460
0x1A70	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+464
0x1A74	0xFFFFE883 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+468
0x1A78	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+472
0x1A7C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+476
0x1A80	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+480
0x1A84	0xF3AFFE39 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+484
0x1A88	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+488
0x1A8C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+492
0x1A90	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+496
0x1A94	0xFD55FFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+500
0x1A98	0xE842E842 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+504
0x1A9C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+508
0x1AA0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+512
0x1AA4	0xF30DE801 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+516
0x1AA8	0xF30CF30C ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+520
0x1AAC	0xE987E987 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+524
0x1AB0	0xE801E946 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+528
0x1AB4	0xFFFFF431 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+532
0x1AB8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+536
0x1ABC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+540
0x1AC0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+544
0x1AC4	0xE800E946 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+548
0x1AC8	0xFFFFFD75 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+552
0x1ACC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+556
0x1AD0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+560
0x1AD4	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+564
0x1AD8	0xE842E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+568
0x1ADC	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+572
0x1AE0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+576
0x1AE4	0xFD35E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+580
0x1AE8	0xFEDBFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+584
0x1AEC	0xE842E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+588
0x1AF0	0xE821E862 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+592
0x1AF4	0xFFFFFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+596
0x1AF8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+600
0x1AFC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+604
0x1B00	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+608
0x1B04	0xE842E905 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+612
0x1B08	0xFFFFF4B3 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+616
0x1B0C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+620
0x1B10	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+624
0x1B14	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+628
0x1B18	0xE821E966 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+632
0x1B1C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+636
0x1B20	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+640
0x1B24	0xFF5DE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+644
0x1B28	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+648
0x1B2C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+652
0x1B30	0xF28BFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+656
0x1B34	0xFFFFFEBA ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+660
0x1B38	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+664
0x1B3C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+668
0x1B40	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+672
0x1B44	0xE842E8E4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+676
0x1B48	0xFFFFF492 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+680
0x1B4C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+684
0x1B50	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+688
0x1B54	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+692
0x1B58	0xE801F2AB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+696
0x1B5C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+700
0x1B60	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+704
0x1B64	0xFFBEE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+708
0x1B68	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+712
0x1B6C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+716
0x1B70	0xE9C8FFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+720
0x1B74	0xFFFFFF3C ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+724
0x1B78	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+728
0x1B7C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+732
0x1B80	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+736
0x1B84	0xE800E862 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+740
0x1B88	0xFFFFF451 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+744
0x1B8C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+748
0x1B90	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+752
0x1B94	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+756
0x1B98	0xE801F36E ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+760
0x1B9C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+764
0x1BA0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+768
0x1BA4	0xF492E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+772
0x1BA8	0xE8A3F208 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+776
0x1BAC	0xE946E8A3 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+780
0x1BB0	0xE925F451 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+784
0x1BB4	0xFFFFFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+788
0x1BB8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+792
0x1BBC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+796
0x1BC0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+800
0x1BC4	0xFDF7FE18 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+804
0x1BC8	0xFFFFFF1C ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+808
0x1BCC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+812
0x1BD0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+816
0x1BD4	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+820
0x1BD8	0xE800F3CF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+824
0x1BDC	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+828
0x1BE0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+832
0x1BE4	0xFFFFE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+836
0x1BE8	0xFF1CFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+840
0x1BEC	0xFFFFFEDB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+844
0x1BF0	0xE9E8FFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+848
0x1BF4	0xFFFFFF3D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+852
0x1BF8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+856
0x1BFC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+860
0x1C00	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+864
0x1C04	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+868
0x1C08	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+872
0x1C0C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+876
0x1C10	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+880
0x1C14	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+884
0x1C18	0xE800F3D0 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+888
0x1C1C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+892
0x1C20	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+896
0x1C24	0xF30CE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+900
0x1C28	0xFFFFFE59 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+904
0x1C2C	0xFFDFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+908
0x1C30	0xE8C4FE18 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+912
0x1C34	0xFFFFFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+916
0x1C38	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+920
0x1C3C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+924
0x1C40	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+928
0x1C44	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+932
0x1C48	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+936
0x1C4C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+940
0x1C50	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+944
0x1C54	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+948
0x1C58	0xE800F3D0 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+952
0x1C5C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+956
0x1C60	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+960
0x1C64	0xFF7DE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+964
0x1C68	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+968
0x1C6C	0xFFDFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+972
0x1C70	0xE9C7FFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+976
0x1C74	0xFFFFFF3D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+980
0x1C78	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+984
0x1C7C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+988
0x1C80	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+992
0x1C84	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+996
0x1C88	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1000
0x1C8C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1004
0x1C90	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1008
0x1C94	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1012
0x1C98	0xE800F410 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1016
0x1C9C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1020
0x1CA0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1024
0x1CA4	0xFFBEE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1028
0x1CA8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1032
0x1CAC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1036
0x1CB0	0xE9C8FFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1040
0x1CB4	0xFFFFFF3D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1044
0x1CB8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1048
0x1CBC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1052
0x1CC0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1056
0x1CC4	0xF3CFF3F0 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1060
0x1CC8	0xF3CFF3D0 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1064
0x1CCC	0xF3CFF3CF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1068
0x1CD0	0xF3CFF3CF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1072
0x1CD4	0xF410F3CF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1076
0x1CD8	0xE821F209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1080
0x1CDC	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1084
0x1CE0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1088
0x1CE4	0xF38FE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1092
0x1CE8	0xF3CFF2CB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1096
0x1CEC	0xF3AFF3AF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1100
0x1CF0	0xE8A3F410 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1104
0x1CF4	0xFFFFFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1108
0x1CF8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1112
0x1CFC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1116
0x1D00	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1120
0x1D04	0xE862E8A3 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1124
0x1D08	0xE800E842 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1128
0x1D0C	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1132
0x1D10	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1136
0x1D14	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1140
0x1D18	0xE842E862 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1144
0x1D1C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1148
0x1D20	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1152
0x1D24	0xFFFFE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1156
0x1D28	0xFFFFF492 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1160
0x1D2C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1164
0x1D30	0xE9C8FFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1168
0x1D34	0xFFFFFF3D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1172
0x1D38	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1176
0x1D3C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1180
0x1D40	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1184
0x1D44	0xE8A3E905 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1188
0x1D48	0xFFFFE987 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1192
0x1D4C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1196
0x1D50	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1200
0x1D54	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1204
0x1D58	0xE801F3F0 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1208
0x1D5C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1212
0x1D60	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1216
0x1D64	0xFFFFE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1220
0x1D68	0xFFFFF451 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1224
0x1D6C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1228
0x1D70	0xE9C8FFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1232
0x1D74	0xFFFFFF3D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1236
0x1D78	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1240
0x1D7C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1244
0x1D80	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1248
0x1D84	0xE883E905 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1252
0x1D88	0xFFFFE987 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1256
0x1D8C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1260
0x1D90	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1264
0x1D94	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1268
0x1D98	0xE800F3F0 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1272
0x1D9C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1276
0x1DA0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1280
0x1DA4	0xE863E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1284
0x1DA8	0xF30CF30D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1288
0x1DAC	0xF2ECF2EC ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1292
0x1DB0	0xE883F34D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1296
0x1DB4	0xFFFFFF3C ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1300
0x1DB8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1304
0x1DBC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1308
0x1DC0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1312
0x1DC4	0xE883E905 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1316
0x1DC8	0xFFFFE987 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1320
0x1DCC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1324
0x1DD0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1328
0x1DD4	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1332
0x1DD8	0xE800F3CF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1336
0x1DDC	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1340
0x1DE0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1344
0x1DE4	0xFF7EE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1348
0x1DE8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1352
0x1DEC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1356
0x1DF0	0xF28AFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1360
0x1DF4	0xFFFFFE9A ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1364
0x1DF8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1368
0x1DFC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1372
0x1E00	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1376
0x1E04	0xE883E8E4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1380
0x1E08	0xFFFFE966 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1384
0x1E0C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1388
0x1E10	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1392
0x1E14	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1396
0x1E18	0xE801F38E ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1400
0x1E1C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1404
0x1E20	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1408
0x1E24	0xFFFFE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1412
0x1E28	0xFF5DFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1416
0x1E2C	0xFF7DFF7D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1420
0x1E30	0xF30CFFDF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1424
0x1E34	0xFFFFFDB6 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1428
0x1E38	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1432
0x1E3C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1436
0x1E40	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1440
0x1E44	0xE883E905 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1444
0x1E48	0xFFFFE9A7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1448
0x1E4C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1452
0x1E50	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1456
0x1E54	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1460
0x1E58	0xE801F2AB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1464
0x1E5C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1468
0x1E60	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1472
0x1E64	0xF3AFE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1476
0x1E68	0xF26AFD55 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1480
0x1E6C	0xF2ABF2AB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1484
0x1E70	0xE9C8F2CB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1488
0x1E74	0xFFFFF411 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1492
0x1E78	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1496
0x1E7C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1500
0x1E80	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1504
0x1E84	0xE800E986 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1508
0x1E88	0xFFFFF2CB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1512
0x1E8C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1516
0x1E90	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1520
0x1E94	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1524
0x1E98	0xE822E925 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1528
0x1E9C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1532
0x1EA0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1536
0x1EA4	0xFF5DE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1540
0x1EA8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1544
0x1EAC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1548
0x1EB0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1552
0x1EB4	0xFFFFE862 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1556
0x1EB8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1560
0x1EBC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1564
0x1EC0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1568
0x1EC4	0xF38EFE9A ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1572
0x1EC8	0xFFFFFFBE ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1576
0x1ECC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1580
0x1ED0	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1584
0x1ED4	0xFEFCFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1588
0x1ED8	0xE842E801 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1592
0x1EDC	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1596
0x1EE0	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1600
0x1EE4	0xFFFFE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1604
0x1EE8	0xFF5DFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1608
0x1EEC	0xFF7DFF7D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1612
0x1EF0	0xFFFFFF7D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1616
0x1EF4	0xFD55F209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1620
0x1EF8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1624
0x1EFC	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1628
0x1F00	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1632
0x1F04	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1636
0x1F08	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1640
0x1F0C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1644
0x1F10	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1648
0x1F14	0xE987FFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1652
0x1F18	0xE842E8A3 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1656
0x1F1C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1660
0x1F20	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1664
0x1F24	0xFD96E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1668
0x1F28	0xF26AF514 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1672
0x1F2C	0xF2ABF2AB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1676
0x1F30	0xF2ABF2AB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1680
0x1F34	0xE821F36E ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1684
0x1F38	0xFFFFFF3C ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1688
0x1F3C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1692
0x1F40	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1696
0x1F44	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1700
0x1F48	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1704
0x1F4C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1708
0x1F50	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1712
0x1F54	0xE842F3AF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1716
0x1F58	0xE842E8E4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1720
0x1F5C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1724
0x1F60	0xFE9AF209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1728
0x1F64	0xFF9EE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1732
0x1F68	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1736
0x1F6C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1740
0x1F70	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1744
0x1F74	0xFF9EFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1748
0x1F78	0xF4F4E801 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1752
0x1F7C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1756
0x1F80	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1760
0x1F84	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1764
0x1F88	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1768
0x1F8C	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1772
0x1F90	0xF30DFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1776
0x1F94	0xE8C4E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1780
0x1F98	0xE842E8E4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1784
0x1F9C	0xF26AFDF7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1788
0x1FA0	0xFE79F209 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1792
0x1FA4	0xFF1CE800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1796
0x1FA8	0xFFBFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1800
0x1FAC	0xFFBFFFBF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1804
0x1FB0	0xFFBFFFBF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1808
0x1FB4	0xFFFFFFBF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1812
0x1FB8	0xF28AFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1816
0x1FBC	0xF431E8A3 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1820
0x1FC0	0xFFFFFE9A ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1824
0x1FC4	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1828
0x1FC8	0xFFFFFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1832
0x1FCC	0xF410FE9A ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1836
0x1FD0	0xE862E883 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1840
0x1FD4	0xE8E4E8C4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1844
0x1FD8	0xE842E8E4 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1848
0x1FDC	0xF26AFDD7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1852
0x1FE0	0xFF7DE9C7 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1856
0x1FE4	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1860
0x1FE8	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1864
0x1FEC	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1868
0x1FF0	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1872
0x1FF4	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1876
0x1FF8	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1880
0x1FFC	0xE800E801 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1884
0x2000	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1888
0x2004	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1892
0x2008	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1896
0x200C	0xE800E800 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1900
0x2010	0xE821E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1904
0x2014	0xE821E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1908
0x2018	0xE800E821 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1912
0x201C	0xEA08FEDB ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1916
0x2020	0xFD75F30C ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1920
0x2024	0xFF5DFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1924
0x2028	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1928
0x202C	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1932
0x2030	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1936
0x2034	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1940
0x2038	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1944
0x203C	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1948
0x2040	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1952
0x2044	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1956
0x2048	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1960
0x204C	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1964
0x2050	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1968
0x2054	0xFF5DFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1972
0x2058	0xFFDFFF5D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1976
0x205C	0xF28AFE18 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1980
0x2060	0xF36EFFFF ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1984
0x2064	0xF229E9E8 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1988
0x2068	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1992
0x206C	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+1996
0x2070	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2000
0x2074	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2004
0x2078	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2008
0x207C	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2012
0x2080	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2016
0x2084	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2020
0x2088	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2024
0x208C	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2028
0x2090	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2032
0x2094	0xF229F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2036
0x2098	0xE9E8F229 ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2040
0x209C	0xFFFFF32D ;Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp+2044
; end of Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp
;Click_Matrix_RGB_STM.c,0 :: ?ICSClick_Matrix_RGB_STM_Arial9x9 [1274]
0x20A0	0x00200000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+0
0x20A4	0x0009007F ;?ICSClick_Matrix_RGB_STM_Arial9x9+4
0x20A8	0x00018801 ;?ICSClick_Matrix_RGB_STM_Arial9x9+8
0x20AC	0x00019102 ;?ICSClick_Matrix_RGB_STM_Arial9x9+12
0x20B0	0x00019A03 ;?ICSClick_Matrix_RGB_STM_Arial9x9+16
0x20B4	0x0001A304 ;?ICSClick_Matrix_RGB_STM_Arial9x9+20
0x20B8	0x0001AC05 ;?ICSClick_Matrix_RGB_STM_Arial9x9+24
0x20BC	0x0001B507 ;?ICSClick_Matrix_RGB_STM_Arial9x9+28
0x20C0	0x0001BE06 ;?ICSClick_Matrix_RGB_STM_Arial9x9+32
0x20C4	0x0001C701 ;?ICSClick_Matrix_RGB_STM_Arial9x9+36
0x20C8	0x0001D003 ;?ICSClick_Matrix_RGB_STM_Arial9x9+40
0x20CC	0x0001D903 ;?ICSClick_Matrix_RGB_STM_Arial9x9+44
0x20D0	0x0001E203 ;?ICSClick_Matrix_RGB_STM_Arial9x9+48
0x20D4	0x0001EB05 ;?ICSClick_Matrix_RGB_STM_Arial9x9+52
0x20D8	0x0001F402 ;?ICSClick_Matrix_RGB_STM_Arial9x9+56
0x20DC	0x0001FD02 ;?ICSClick_Matrix_RGB_STM_Arial9x9+60
0x20E0	0x00020602 ;?ICSClick_Matrix_RGB_STM_Arial9x9+64
0x20E4	0x00020F03 ;?ICSClick_Matrix_RGB_STM_Arial9x9+68
0x20E8	0x00021804 ;?ICSClick_Matrix_RGB_STM_Arial9x9+72
0x20EC	0x00022103 ;?ICSClick_Matrix_RGB_STM_Arial9x9+76
0x20F0	0x00022A04 ;?ICSClick_Matrix_RGB_STM_Arial9x9+80
0x20F4	0x00023304 ;?ICSClick_Matrix_RGB_STM_Arial9x9+84
0x20F8	0x00023C05 ;?ICSClick_Matrix_RGB_STM_Arial9x9+88
0x20FC	0x00024504 ;?ICSClick_Matrix_RGB_STM_Arial9x9+92
0x2100	0x00024E04 ;?ICSClick_Matrix_RGB_STM_Arial9x9+96
0x2104	0x00025704 ;?ICSClick_Matrix_RGB_STM_Arial9x9+100
0x2108	0x00026004 ;?ICSClick_Matrix_RGB_STM_Arial9x9+104
0x210C	0x00026904 ;?ICSClick_Matrix_RGB_STM_Arial9x9+108
0x2110	0x00027202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+112
0x2114	0x00027B02 ;?ICSClick_Matrix_RGB_STM_Arial9x9+116
0x2118	0x00028404 ;?ICSClick_Matrix_RGB_STM_Arial9x9+120
0x211C	0x00028D04 ;?ICSClick_Matrix_RGB_STM_Arial9x9+124
0x2120	0x00029604 ;?ICSClick_Matrix_RGB_STM_Arial9x9+128
0x2124	0x00029F05 ;?ICSClick_Matrix_RGB_STM_Arial9x9+132
0x2128	0x0002A809 ;?ICSClick_Matrix_RGB_STM_Arial9x9+136
0x212C	0x0002BA07 ;?ICSClick_Matrix_RGB_STM_Arial9x9+140
0x2130	0x0002C305 ;?ICSClick_Matrix_RGB_STM_Arial9x9+144
0x2134	0x0002CC06 ;?ICSClick_Matrix_RGB_STM_Arial9x9+148
0x2138	0x0002D506 ;?ICSClick_Matrix_RGB_STM_Arial9x9+152
0x213C	0x0002DE06 ;?ICSClick_Matrix_RGB_STM_Arial9x9+156
0x2140	0x0002E705 ;?ICSClick_Matrix_RGB_STM_Arial9x9+160
0x2144	0x0002F006 ;?ICSClick_Matrix_RGB_STM_Arial9x9+164
0x2148	0x0002F906 ;?ICSClick_Matrix_RGB_STM_Arial9x9+168
0x214C	0x00030202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+172
0x2150	0x00030B04 ;?ICSClick_Matrix_RGB_STM_Arial9x9+176
0x2154	0x00031406 ;?ICSClick_Matrix_RGB_STM_Arial9x9+180
0x2158	0x00031D05 ;?ICSClick_Matrix_RGB_STM_Arial9x9+184
0x215C	0x00032607 ;?ICSClick_Matrix_RGB_STM_Arial9x9+188
0x2160	0x00032F06 ;?ICSClick_Matrix_RGB_STM_Arial9x9+192
0x2164	0x00033806 ;?ICSClick_Matrix_RGB_STM_Arial9x9+196
0x2168	0x00034105 ;?ICSClick_Matrix_RGB_STM_Arial9x9+200
0x216C	0x00034A06 ;?ICSClick_Matrix_RGB_STM_Arial9x9+204
0x2170	0x00035306 ;?ICSClick_Matrix_RGB_STM_Arial9x9+208
0x2174	0x00035C05 ;?ICSClick_Matrix_RGB_STM_Arial9x9+212
0x2178	0x00036505 ;?ICSClick_Matrix_RGB_STM_Arial9x9+216
0x217C	0x00036E06 ;?ICSClick_Matrix_RGB_STM_Arial9x9+220
0x2180	0x00037707 ;?ICSClick_Matrix_RGB_STM_Arial9x9+224
0x2184	0x00038009 ;?ICSClick_Matrix_RGB_STM_Arial9x9+228
0x2188	0x00039205 ;?ICSClick_Matrix_RGB_STM_Arial9x9+232
0x218C	0x00039B06 ;?ICSClick_Matrix_RGB_STM_Arial9x9+236
0x2190	0x0003A406 ;?ICSClick_Matrix_RGB_STM_Arial9x9+240
0x2194	0x0003AD03 ;?ICSClick_Matrix_RGB_STM_Arial9x9+244
0x2198	0x0003B603 ;?ICSClick_Matrix_RGB_STM_Arial9x9+248
0x219C	0x0003BF02 ;?ICSClick_Matrix_RGB_STM_Arial9x9+252
0x21A0	0x0003C803 ;?ICSClick_Matrix_RGB_STM_Arial9x9+256
0x21A4	0x0003D105 ;?ICSClick_Matrix_RGB_STM_Arial9x9+260
0x21A8	0x0003DA02 ;?ICSClick_Matrix_RGB_STM_Arial9x9+264
0x21AC	0x0003E304 ;?ICSClick_Matrix_RGB_STM_Arial9x9+268
0x21B0	0x0003EC04 ;?ICSClick_Matrix_RGB_STM_Arial9x9+272
0x21B4	0x0003F504 ;?ICSClick_Matrix_RGB_STM_Arial9x9+276
0x21B8	0x0003FE04 ;?ICSClick_Matrix_RGB_STM_Arial9x9+280
0x21BC	0x00040704 ;?ICSClick_Matrix_RGB_STM_Arial9x9+284
0x21C0	0x00041003 ;?ICSClick_Matrix_RGB_STM_Arial9x9+288
0x21C4	0x00041904 ;?ICSClick_Matrix_RGB_STM_Arial9x9+292
0x21C8	0x00042204 ;?ICSClick_Matrix_RGB_STM_Arial9x9+296
0x21CC	0x00042B01 ;?ICSClick_Matrix_RGB_STM_Arial9x9+300
0x21D0	0x00043401 ;?ICSClick_Matrix_RGB_STM_Arial9x9+304
0x21D4	0x00043D04 ;?ICSClick_Matrix_RGB_STM_Arial9x9+308
0x21D8	0x00044601 ;?ICSClick_Matrix_RGB_STM_Arial9x9+312
0x21DC	0x00044F07 ;?ICSClick_Matrix_RGB_STM_Arial9x9+316
0x21E0	0x00045804 ;?ICSClick_Matrix_RGB_STM_Arial9x9+320
0x21E4	0x00046104 ;?ICSClick_Matrix_RGB_STM_Arial9x9+324
0x21E8	0x00046A04 ;?ICSClick_Matrix_RGB_STM_Arial9x9+328
0x21EC	0x00047304 ;?ICSClick_Matrix_RGB_STM_Arial9x9+332
0x21F0	0x00047C03 ;?ICSClick_Matrix_RGB_STM_Arial9x9+336
0x21F4	0x00048504 ;?ICSClick_Matrix_RGB_STM_Arial9x9+340
0x21F8	0x00048E02 ;?ICSClick_Matrix_RGB_STM_Arial9x9+344
0x21FC	0x00049704 ;?ICSClick_Matrix_RGB_STM_Arial9x9+348
0x2200	0x0004A005 ;?ICSClick_Matrix_RGB_STM_Arial9x9+352
0x2204	0x0004A905 ;?ICSClick_Matrix_RGB_STM_Arial9x9+356
0x2208	0x0004B204 ;?ICSClick_Matrix_RGB_STM_Arial9x9+360
0x220C	0x0004BB05 ;?ICSClick_Matrix_RGB_STM_Arial9x9+364
0x2210	0x0004C403 ;?ICSClick_Matrix_RGB_STM_Arial9x9+368
0x2214	0x0004CD03 ;?ICSClick_Matrix_RGB_STM_Arial9x9+372
0x2218	0x0004D602 ;?ICSClick_Matrix_RGB_STM_Arial9x9+376
0x221C	0x0004DF03 ;?ICSClick_Matrix_RGB_STM_Arial9x9+380
0x2220	0x0004E804 ;?ICSClick_Matrix_RGB_STM_Arial9x9+384
0x2224	0x0004F102 ;?ICSClick_Matrix_RGB_STM_Arial9x9+388
0x2228	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+392
0x222C	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+396
0x2230	0x02020200 ;?ICSClick_Matrix_RGB_STM_Arial9x9+400
0x2234	0x02000202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+404
0x2238	0x05050000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+408
0x223C	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+412
0x2240	0x0A000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+416
0x2244	0x0F0A0F0A ;?ICSClick_Matrix_RGB_STM_Arial9x9+420
0x2248	0x00000505 ;?ICSClick_Matrix_RGB_STM_Arial9x9+424
0x224C	0x0E05150E ;?ICSClick_Matrix_RGB_STM_Arial9x9+428
0x2250	0x040E1514 ;?ICSClick_Matrix_RGB_STM_Arial9x9+432
0x2254	0x141A2400 ;?ICSClick_Matrix_RGB_STM_Arial9x9+436
0x2258	0x28582810 ;?ICSClick_Matrix_RGB_STM_Arial9x9+440
0x225C	0x121C0000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+444
0x2260	0x11290E12 ;?ICSClick_Matrix_RGB_STM_Arial9x9+448
0x2264	0x0100002E ;?ICSClick_Matrix_RGB_STM_Arial9x9+452
0x2268	0x00000001 ;?ICSClick_Matrix_RGB_STM_Arial9x9+456
0x226C	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+460
0x2270	0x01010204 ;?ICSClick_Matrix_RGB_STM_Arial9x9+464
0x2274	0x02010101 ;?ICSClick_Matrix_RGB_STM_Arial9x9+468
0x2278	0x04020104 ;?ICSClick_Matrix_RGB_STM_Arial9x9+472
0x227C	0x04040404 ;?ICSClick_Matrix_RGB_STM_Arial9x9+476
0x2280	0x02070102 ;?ICSClick_Matrix_RGB_STM_Arial9x9+480
0x2284	0x00000005 ;?ICSClick_Matrix_RGB_STM_Arial9x9+484
0x2288	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+488
0x228C	0x1F040400 ;?ICSClick_Matrix_RGB_STM_Arial9x9+492
0x2290	0x00000404 ;?ICSClick_Matrix_RGB_STM_Arial9x9+496
0x2294	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+500
0x2298	0x02020000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+504
0x229C	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+508
0x22A0	0x00000300 ;?ICSClick_Matrix_RGB_STM_Arial9x9+512
0x22A4	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+516
0x22A8	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+520
0x22AC	0x04000002 ;?ICSClick_Matrix_RGB_STM_Arial9x9+524
0x22B0	0x02020204 ;?ICSClick_Matrix_RGB_STM_Arial9x9+528
0x22B4	0x00000101 ;?ICSClick_Matrix_RGB_STM_Arial9x9+532
0x22B8	0x09090906 ;?ICSClick_Matrix_RGB_STM_Arial9x9+536
0x22BC	0x00070909 ;?ICSClick_Matrix_RGB_STM_Arial9x9+540
0x22C0	0x04060400 ;?ICSClick_Matrix_RGB_STM_Arial9x9+544
0x22C4	0x04040404 ;?ICSClick_Matrix_RGB_STM_Arial9x9+548
0x22C8	0x09060000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+552
0x22CC	0x02040408 ;?ICSClick_Matrix_RGB_STM_Arial9x9+556
0x22D0	0x0600000F ;?ICSClick_Matrix_RGB_STM_Arial9x9+560
0x22D4	0x08040809 ;?ICSClick_Matrix_RGB_STM_Arial9x9+564
0x22D8	0x00000609 ;?ICSClick_Matrix_RGB_STM_Arial9x9+568
0x22DC	0x090A0C08 ;?ICSClick_Matrix_RGB_STM_Arial9x9+572
0x22E0	0x0008081F ;?ICSClick_Matrix_RGB_STM_Arial9x9+576
0x22E4	0x07020E00 ;?ICSClick_Matrix_RGB_STM_Arial9x9+580
0x22E8	0x06090809 ;?ICSClick_Matrix_RGB_STM_Arial9x9+584
0x22EC	0x09060000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+588
0x22F0	0x09090907 ;?ICSClick_Matrix_RGB_STM_Arial9x9+592
0x22F4	0x0F000006 ;?ICSClick_Matrix_RGB_STM_Arial9x9+596
0x22F8	0x02040408 ;?ICSClick_Matrix_RGB_STM_Arial9x9+600
0x22FC	0x00000202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+604
0x2300	0x06090906 ;?ICSClick_Matrix_RGB_STM_Arial9x9+608
0x2304	0x00060909 ;?ICSClick_Matrix_RGB_STM_Arial9x9+612
0x2308	0x09090600 ;?ICSClick_Matrix_RGB_STM_Arial9x9+616
0x230C	0x06090E09 ;?ICSClick_Matrix_RGB_STM_Arial9x9+620
0x2310	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+624
0x2314	0x00000002 ;?ICSClick_Matrix_RGB_STM_Arial9x9+628
0x2318	0x00000002 ;?ICSClick_Matrix_RGB_STM_Arial9x9+632
0x231C	0x00000200 ;?ICSClick_Matrix_RGB_STM_Arial9x9+636
0x2320	0x00020200 ;?ICSClick_Matrix_RGB_STM_Arial9x9+640
0x2324	0x02040800 ;?ICSClick_Matrix_RGB_STM_Arial9x9+644
0x2328	0x00000804 ;?ICSClick_Matrix_RGB_STM_Arial9x9+648
0x232C	0x0F000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+652
0x2330	0x00000F00 ;?ICSClick_Matrix_RGB_STM_Arial9x9+656
0x2334	0x02000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+660
0x2338	0x02040804 ;?ICSClick_Matrix_RGB_STM_Arial9x9+664
0x233C	0x0E000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+668
0x2340	0x040C1011 ;?ICSClick_Matrix_RGB_STM_Arial9x9+672
0x2344	0x00000400 ;?ICSClick_Matrix_RGB_STM_Arial9x9+676
0x2348	0x00840078 ;?ICSClick_Matrix_RGB_STM_Arial9x9+680
0x234C	0x016A0152 ;?ICSClick_Matrix_RGB_STM_Arial9x9+684
0x2350	0x00AA012A ;?ICSClick_Matrix_RGB_STM_Arial9x9+688
0x2354	0x0184007A ;?ICSClick_Matrix_RGB_STM_Arial9x9+692
0x2358	0x14080078 ;?ICSClick_Matrix_RGB_STM_Arial9x9+696
0x235C	0x223E2214 ;?ICSClick_Matrix_RGB_STM_Arial9x9+700
0x2360	0x0E000041 ;?ICSClick_Matrix_RGB_STM_Arial9x9+704
0x2364	0x121E1212 ;?ICSClick_Matrix_RGB_STM_Arial9x9+708
0x2368	0x00000E12 ;?ICSClick_Matrix_RGB_STM_Arial9x9+712
0x236C	0x0202221C ;?ICSClick_Matrix_RGB_STM_Arial9x9+716
0x2370	0x001C2202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+720
0x2374	0x22221E00 ;?ICSClick_Matrix_RGB_STM_Arial9x9+724
0x2378	0x1E222222 ;?ICSClick_Matrix_RGB_STM_Arial9x9+728
0x237C	0x023E0000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+732
0x2380	0x02023E02 ;?ICSClick_Matrix_RGB_STM_Arial9x9+736
0x2384	0x1E00003E ;?ICSClick_Matrix_RGB_STM_Arial9x9+740
0x2388	0x020E0202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+744
0x238C	0x00000202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+748
0x2390	0x3202221C ;?ICSClick_Matrix_RGB_STM_Arial9x9+752
0x2394	0x001C2222 ;?ICSClick_Matrix_RGB_STM_Arial9x9+756
0x2398	0x22222200 ;?ICSClick_Matrix_RGB_STM_Arial9x9+760
0x239C	0x2222223E ;?ICSClick_Matrix_RGB_STM_Arial9x9+764
0x23A0	0x02020000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+768
0x23A4	0x02020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+772
0x23A8	0x08000002 ;?ICSClick_Matrix_RGB_STM_Arial9x9+776
0x23AC	0x08080808 ;?ICSClick_Matrix_RGB_STM_Arial9x9+780
0x23B0	0x00000709 ;?ICSClick_Matrix_RGB_STM_Arial9x9+784
0x23B4	0x060A1222 ;?ICSClick_Matrix_RGB_STM_Arial9x9+788
0x23B8	0x0022120A ;?ICSClick_Matrix_RGB_STM_Arial9x9+792
0x23BC	0x02020200 ;?ICSClick_Matrix_RGB_STM_Arial9x9+796
0x23C0	0x1E020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+800
0x23C4	0x63410000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+804
0x23C8	0x55555563 ;?ICSClick_Matrix_RGB_STM_Arial9x9+808
0x23CC	0x22000049 ;?ICSClick_Matrix_RGB_STM_Arial9x9+812
0x23D0	0x322A2626 ;?ICSClick_Matrix_RGB_STM_Arial9x9+816
0x23D4	0x00002232 ;?ICSClick_Matrix_RGB_STM_Arial9x9+820
0x23D8	0x2222221C ;?ICSClick_Matrix_RGB_STM_Arial9x9+824
0x23DC	0x001C2222 ;?ICSClick_Matrix_RGB_STM_Arial9x9+828
0x23E0	0x12121E00 ;?ICSClick_Matrix_RGB_STM_Arial9x9+832
0x23E4	0x0202021E ;?ICSClick_Matrix_RGB_STM_Arial9x9+836
0x23E8	0x221C0000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+840
0x23EC	0x12222222 ;?ICSClick_Matrix_RGB_STM_Arial9x9+844
0x23F0	0x1E00003C ;?ICSClick_Matrix_RGB_STM_Arial9x9+848
0x23F4	0x121E2222 ;?ICSClick_Matrix_RGB_STM_Arial9x9+852
0x23F8	0x00002222 ;?ICSClick_Matrix_RGB_STM_Arial9x9+856
0x23FC	0x0C02120C ;?ICSClick_Matrix_RGB_STM_Arial9x9+860
0x2400	0x000C1210 ;?ICSClick_Matrix_RGB_STM_Arial9x9+864
0x2404	0x04041F00 ;?ICSClick_Matrix_RGB_STM_Arial9x9+868
0x2408	0x04040404 ;?ICSClick_Matrix_RGB_STM_Arial9x9+872
0x240C	0x22220000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+876
0x2410	0x22222222 ;?ICSClick_Matrix_RGB_STM_Arial9x9+880
0x2414	0x4100001C ;?ICSClick_Matrix_RGB_STM_Arial9x9+884
0x2418	0x14222241 ;?ICSClick_Matrix_RGB_STM_Arial9x9+888
0x241C	0x00000814 ;?ICSClick_Matrix_RGB_STM_Arial9x9+892
0x2420	0x01290111 ;?ICSClick_Matrix_RGB_STM_Arial9x9+896
0x2424	0x00AA00AA ;?ICSClick_Matrix_RGB_STM_Arial9x9+900
0x2428	0x00AA00AA ;?ICSClick_Matrix_RGB_STM_Arial9x9+904
0x242C	0x00000044 ;?ICSClick_Matrix_RGB_STM_Arial9x9+908
0x2430	0x0A110000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+912
0x2434	0x0A0A040A ;?ICSClick_Matrix_RGB_STM_Arial9x9+916
0x2438	0x22000011 ;?ICSClick_Matrix_RGB_STM_Arial9x9+920
0x243C	0x08081414 ;?ICSClick_Matrix_RGB_STM_Arial9x9+924
0x2440	0x00000808 ;?ICSClick_Matrix_RGB_STM_Arial9x9+928
0x2444	0x0408103F ;?ICSClick_Matrix_RGB_STM_Arial9x9+932
0x2448	0x003F0102 ;?ICSClick_Matrix_RGB_STM_Arial9x9+936
0x244C	0x02020600 ;?ICSClick_Matrix_RGB_STM_Arial9x9+940
0x2450	0x02020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+944
0x2454	0x01010602 ;?ICSClick_Matrix_RGB_STM_Arial9x9+948
0x2458	0x04020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+952
0x245C	0x03000004 ;?ICSClick_Matrix_RGB_STM_Arial9x9+956
0x2460	0x02020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+960
0x2464	0x03020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+964
0x2468	0x00050502 ;?ICSClick_Matrix_RGB_STM_Arial9x9+968
0x246C	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+972
0x2470	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+976
0x2474	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+980
0x2478	0x02011F00 ;?ICSClick_Matrix_RGB_STM_Arial9x9+984
0x247C	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+988
0x2480	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+992
0x2484	0x0E080F00 ;?ICSClick_Matrix_RGB_STM_Arial9x9+996
0x2488	0x00000F09 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1000
0x248C	0x09070101 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1004
0x2490	0x00070909 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1008
0x2494	0x06000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1012
0x2498	0x06090109 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1016
0x249C	0x08080000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1020
0x24A0	0x0909090E ;?ICSClick_Matrix_RGB_STM_Arial9x9+1024
0x24A4	0x0000000E ;?ICSClick_Matrix_RGB_STM_Arial9x9+1028
0x24A8	0x0F090600 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1032
0x24AC	0x00000E01 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1036
0x24B0	0x02070204 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1040
0x24B4	0x00020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1044
0x24B8	0x0E000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1048
0x24BC	0x0E090909 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1052
0x24C0	0x01010609 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1056
0x24C4	0x09090907 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1060
0x24C8	0x01000009 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1064
0x24CC	0x01010100 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1068
0x24D0	0x00000101 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1072
0x24D4	0x01010001 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1076
0x24D8	0x01010101 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1080
0x24DC	0x09010100 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1084
0x24E0	0x09050705 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1088
0x24E4	0x01010000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1092
0x24E8	0x01010101 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1096
0x24EC	0x00000001 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1100
0x24F0	0x49493F00 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1104
0x24F4	0x00004949 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1108
0x24F8	0x09070000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1112
0x24FC	0x00090909 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1116
0x2500	0x06000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1120
0x2504	0x06090909 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1124
0x2508	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1128
0x250C	0x09090907 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1132
0x2510	0x00010107 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1136
0x2514	0x09090E00 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1140
0x2518	0x08080E09 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1144
0x251C	0x01070000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1148
0x2520	0x00010101 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1152
0x2524	0x0E000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1156
0x2528	0x07080601 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1160
0x252C	0x01000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1164
0x2530	0x01010103 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1168
0x2534	0x00000003 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1172
0x2538	0x09090900 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1176
0x253C	0x00000E09 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1180
0x2540	0x0A110000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1184
0x2544	0x00040A0A ;?ICSClick_Matrix_RGB_STM_Arial9x9+1188
0x2548	0x15000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1192
0x254C	0x0A151515 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1196
0x2550	0x00000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1200
0x2554	0x06060609 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1204
0x2558	0x00000009 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1208
0x255C	0x0A0A1100 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1212
0x2560	0x0204040A ;?ICSClick_Matrix_RGB_STM_Arial9x9+1216
0x2564	0x04070000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1220
0x2568	0x00070102 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1224
0x256C	0x02020600 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1228
0x2570	0x02020102 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1232
0x2574	0x02020602 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1236
0x2578	0x02020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1240
0x257C	0x03000202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1244
0x2580	0x04020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1248
0x2584	0x03020202 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1252
0x2588	0x0B000000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1256
0x258C	0x0000000D ;?ICSClick_Matrix_RGB_STM_Arial9x9+1260
0x2590	0x03030000 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1264
0x2594	0x03030303 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1268
0x2598	0x0003 ;?ICSClick_Matrix_RGB_STM_Arial9x9+1272
; end of ?ICSClick_Matrix_RGB_STM_Arial9x9
;Click_Matrix_RGB_STM.c,0 :: ?ICS?lstr1_Click_Matrix_RGB_STM [4]
0x259A	0x00424752 ;?ICS?lstr1_Click_Matrix_RGB_STM+0
; end of ?ICS?lstr1_Click_Matrix_RGB_STM
;Click_Matrix_RGB_STM.c,0 :: ?ICS?lstr2_Click_Matrix_RGB_STM [5]
0x259E	0x6F6D6544 ;?ICS?lstr2_Click_Matrix_RGB_STM+0
0x25A2	0x00 ;?ICS?lstr2_Click_Matrix_RGB_STM+4
; end of ?ICS?lstr2_Click_Matrix_RGB_STM
;__Lib_GPIO_32F10x_Defs.c,675 :: __GPIO_MODULE_SPI3_PC10_11_12 [108]
0x25A4	0x0000002A ;__GPIO_MODULE_SPI3_PC10_11_12+0
0x25A8	0x0000002B ;__GPIO_MODULE_SPI3_PC10_11_12+4
0x25AC	0x0000002C ;__GPIO_MODULE_SPI3_PC10_11_12+8
0x25B0	0xFFFFFFFF ;__GPIO_MODULE_SPI3_PC10_11_12+12
0x25B4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+16
0x25B8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+20
0x25BC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+24
0x25C0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+28
0x25C4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+32
0x25C8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+36
0x25CC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+40
0x25D0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+44
0x25D4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+48
0x25D8	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+52
0x25DC	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+56
0x25E0	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+60
0x25E4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+64
0x25E8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+68
0x25EC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+72
0x25F0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+76
0x25F4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+80
0x25F8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+84
0x25FC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+88
0x2600	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+92
0x2604	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+96
0x2608	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+100
0x260C	0x08201100 ;__GPIO_MODULE_SPI3_PC10_11_12+104
; end of __GPIO_MODULE_SPI3_PC10_11_12
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x2610	0x00000F01 ;__MIKROBUS1_GPIO+0
0x2614	0x00000EF5 ;__MIKROBUS1_GPIO+4
0x2618	0x0000091D ;__MIKROBUS1_GPIO+8
0x261C	0x00000911 ;__MIKROBUS1_GPIO+12
0x2620	0x00000905 ;__MIKROBUS1_GPIO+16
0x2624	0x00000929 ;__MIKROBUS1_GPIO+20
0x2628	0x0000094D ;__MIKROBUS1_GPIO+24
0x262C	0x00000941 ;__MIKROBUS1_GPIO+28
0x2630	0x00000935 ;__MIKROBUS1_GPIO+32
0x2634	0x00000F31 ;__MIKROBUS1_GPIO+36
0x2638	0x00000FA9 ;__MIKROBUS1_GPIO+40
0x263C	0x00000F9D ;__MIKROBUS1_GPIO+44
0x2640	0x000006B9 ;__MIKROBUS1_GPIO+48
0x2644	0x00000689 ;__MIKROBUS1_GPIO+52
0x2648	0x00000695 ;__MIKROBUS1_GPIO+56
0x264C	0x000006DD ;__MIKROBUS1_GPIO+60
0x2650	0x000006E9 ;__MIKROBUS1_GPIO+64
0x2654	0x000006C5 ;__MIKROBUS1_GPIO+68
0x2658	0x000006D1 ;__MIKROBUS1_GPIO+72
0x265C	0x00000635 ;__MIKROBUS1_GPIO+76
0x2660	0x0000064D ;__MIKROBUS1_GPIO+80
0x2664	0x00000671 ;__MIKROBUS1_GPIO+84
0x2668	0x0000067D ;__MIKROBUS1_GPIO+88
0x266C	0x00000665 ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;Click_Matrix_RGB_STM.c,3 :: __MATRIXRGB_SPI_CFG [8]
0x2670	0x00000006 ;__MATRIXRGB_SPI_CFG+0
0x2674	0x00000304 ;__MATRIXRGB_SPI_CFG+4
; end of __MATRIXRGB_SPI_CFG
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_SPI [8]
0x2678	0x00000619 ;__MIKROBUS1_SPI+0
0x267C	0xFFFFFFFF ;__MIKROBUS1_SPI+4
; end of __MIKROBUS1_SPI
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [140]    _GPIO_Clk_Enable
0x01DC      [34]    __Lib_SPI_123_SPIx_Read
0x0200     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x0298     [500]    _GPIO_Config
0x048C     [272]    _GPIO_Alternate_Function_Enable
0x059C      [66]    __Lib_SPI_123_SPIx_Init_Advanced
0x05E0      [28]    _SPI1_Write
0x05FC      [28]    _SPI2_Write
0x0618      [28]    _SPI3_Write
0x0634      [12]    easymx_v7_STM32F107VC__getINT_1
0x0640      [12]    easymx_v7_STM32F107VC__getRST_2
0x064C      [12]    easymx_v7_STM32F107VC__getRX_1
0x0658      [12]    easymx_v7_STM32F107VC__getAN_2
0x0664      [12]    easymx_v7_STM32F107VC__getSDA_1
0x0670      [12]    easymx_v7_STM32F107VC__getTX_1
0x067C      [12]    easymx_v7_STM32F107VC__getSCL_1
0x0688      [12]    easymx_v7_STM32F107VC__getRST_1
0x0694      [12]    easymx_v7_STM32F107VC__getCS_1
0x06A0      [24]    _Delay_1ms
0x06B8      [12]    easymx_v7_STM32F107VC__getAN_1
0x06C4      [12]    easymx_v7_STM32F107VC__getMOSI_1
0x06D0      [12]    easymx_v7_STM32F107VC__getPWM_1
0x06DC      [12]    easymx_v7_STM32F107VC__getSCK_1
0x06E8      [12]    easymx_v7_STM32F107VC__getMISO_1
0x06F4      [12]    easymx_v7_STM32F107VC__getSDA_2
0x0700      [12]    easymx_v7_STM32F107VC__getSCL_2
0x070C      [12]    easymx_v7_STM32F107VC__getTX_2
0x0718      [28]    _GPIO_Digital_Output
0x0738      [24]    _Delay_80us
0x0750      [60]    __matrixrgb_driver_hal_spiWrite
0x078C      [24]    _GPIO_Digital_Input
0x07A4      [84]    _SPI3_Init_Advanced
0x07F8      [12]    easymx_v7_STM32F107VC__getMISO_2
0x0804      [12]    easymx_v7_STM32F107VC__getSCK_2
0x0810      [12]    easymx_v7_STM32F107VC__getCS_2
0x081C      [12]    easymx_v7_STM32F107VC__getMOSI_2
0x0828      [12]    easymx_v7_STM32F107VC__getRX_2
0x0834      [12]    easymx_v7_STM32F107VC__getINT_2
0x0840      [12]    easymx_v7_STM32F107VC__getPWM_2
0x084C      [44]    __matrixrgb_driver_hal_gpioMap
0x0878      [24]    __matrixrgb_driver_hal_spiMap
0x0890      [76]    __matrixrgb_driver__spi_cmd
0x08E0      [24]    _Delay_100ms
0x08F8      [12]    easymx_v7_STM32F107VC__setSDA_2
0x0904      [12]    easymx_v7_STM32F107VC__setMISO_1
0x0910      [12]    easymx_v7_STM32F107VC__setSCK_1
0x091C      [12]    easymx_v7_STM32F107VC__setCS_1
0x0928      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x0934      [12]    easymx_v7_STM32F107VC__setRX_1
0x0940      [12]    easymx_v7_STM32F107VC__setINT_1
0x094C      [12]    easymx_v7_STM32F107VC__setPWM_1
0x0958     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x0B10     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x0CC8     [520]    __matrixrgb_driver__char_wr
0x0ED0      [36]    easymx_v7_STM32F107VC__spiInit_1
0x0EF4      [12]    easymx_v7_STM32F107VC__setRST_1
0x0F00      [12]    easymx_v7_STM32F107VC__setAN_1
0x0F0C      [36]    easymx_v7_STM32F107VC__spiInit_2
0x0F30      [12]    easymx_v7_STM32F107VC__setTX_1
0x0F3C      [12]    easymx_v7_STM32F107VC__setSCL_2
0x0F48      [12]    easymx_v7_STM32F107VC__setPWM_2
0x0F54      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x0F60      [12]    easymx_v7_STM32F107VC__setTX_2
0x0F6C      [12]    easymx_v7_STM32F107VC__setRX_2
0x0F78      [12]    easymx_v7_STM32F107VC__setINT_2
0x0F84      [12]    easymx_v7_STM32F107VC__setMISO_2
0x0F90      [12]    easymx_v7_STM32F107VC__setAN_2
0x0F9C      [12]    easymx_v7_STM32F107VC__setSDA_1
0x0FA8      [12]    easymx_v7_STM32F107VC__setSCL_1
0x0FB4      [12]    easymx_v7_STM32F107VC__setRST_2
0x0FC0      [12]    easymx_v7_STM32F107VC__setCS_2
0x0FCC      [12]    easymx_v7_STM32F107VC__setSCK_2
0x0FD8     [148]    _matrixrgb_writePixel
0x106C     [148]    _matrixrgb_drawImage
0x1100     [100]    _matrixrgb_writeText
0x1164     [128]    _matrixrgb_fillScreen
0x11E4      [84]    _matrixrgb_setFont
0x1238      [22]    _matrixrgb_setPower
0x1250      [22]    _matrixrgb_setBrightness
0x1268      [66]    _mikrobus_gpioInit
0x12AC      [48]    _mikrobus_spiInit
0x12DC      [40]    _matrixrgb_spiDriverInit
0x1304     [296]    _matrixrgb_deviceInit
0x142C      [56]    _matrixrgb_deviceReset
0x1464      [58]    ___FillZeros
0x14A0     [108]    __Lib_System_105_107_SystemClockSetDefault
0x150C      [20]    ___CC2DW
0x1520     [116]    _applicationInit
0x1598     [312]    _applicationTask
0x16D0      [80]    _systemInit
0x1720      [20]    __Lib_System_105_107_InitialSetUpFosc
0x1734       [8]    ___GenExcept
0x173C      [32]    _main
0x175C     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000    [1274]    Click_Matrix_RGB_STM_Arial9x9
0x200004FA       [4]    ?lstr1_Click_Matrix_RGB_STM
0x200004FE       [5]    ?lstr2_Click_Matrix_RGB_STM
0x20000503       [1]    __matrixrgb_driver__font_orientation
0x20000504       [4]    _SPI_Rd_Ptr
0x20000508       [4]    _SPI_Wr_Ptr
0x2000050C       [4]    ___System_CLOCK_IN_KHZ
0x20000510       [2]    __matrixrgb_driver__pix_w
0x20000512       [2]    __matrixrgb_driver__pix_h
0x20000514       [4]    __matrixrgb_driver_hal_gpio_intGet
0x20000518       [4]    __matrixrgb_driver_hal_gpio_csSet
0x2000051C       [2]    __matrixrgb_driver__ram_s
0x2000051E       [2]    __matrixrgb_driver__font_first_char
0x20000520       [2]    __matrixrgb_driver__font_last_char
0x20000522       [2]    __matrixrgb_driver__font_y_cord
0x20000524       [4]    __matrixrgb_driver__font
0x20000528       [2]    __matrixrgb_driver__font_height
0x2000052A       [2]    __matrixrgb_driver__font_x_cord
0x2000052C       [2]    __matrixrgb_driver__font_color
0x20000530       [4]    __matrixrgb_driver_hal_gpio_rstSet
0x20000534       [4]    __matrixrgb_driver_fp_spiWrite
0x20000538       [4]    __matrixrgb_driver_fp_spiRead
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x18A0    [2048]    Click_Matrix_RGB_STM_mikroe_logo_32x32_bmp
0x20A0    [1274]    ?ICSClick_Matrix_RGB_STM_Arial9x9
0x259A       [4]    ?ICS?lstr1_Click_Matrix_RGB_STM
0x259E       [5]    ?ICS?lstr2_Click_Matrix_RGB_STM
0x25A4     [108]    __GPIO_MODULE_SPI3_PC10_11_12
0x2610      [96]    __MIKROBUS1_GPIO
0x2670       [8]    __MATRIXRGB_SPI_CFG
0x2678       [8]    __MIKROBUS1_SPI
