;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/30/2016 9:52:13 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x02C2940C  	JMP        _main
0x0004	0x0000940C  	JMP        0
0x0008	0x0000940C  	JMP        0
0x000C	0x0000940C  	JMP        0
0x0010	0x0000940C  	JMP        0
0x0014	0x0000940C  	JMP        0
0x0018	0x0000940C  	JMP        0
0x001C	0x0000940C  	JMP        0
0x0020	0x0000940C  	JMP        0
0x0024	0x0000940C  	JMP        0
0x0028	0x0000940C  	JMP        0
0x002C	0x0000940C  	JMP        0
0x0030	0x0000940C  	JMP        0
0x0034	0x0000940C  	JMP        0
0x0038	0x0000940C  	JMP        0
0x003C	0x0000940C  	JMP        0
0x0040	0x0000940C  	JMP        0
0x0044	0x0000940C  	JMP        0
0x0048	0x0000940C  	JMP        0
0x004C	0x0000940C  	JMP        0
0x0050	0x0000940C  	JMP        0
0x0054	0x0000940C  	JMP        0
0x0058	0x0000940C  	JMP        0
0x005C	0x0000940C  	JMP        0
0x0060	0x0000940C  	JMP        0
0x0064	0x0000940C  	JMP        0
0x0068	0x0000940C  	JMP        0
0x006C	0x0000940C  	JMP        0
0x0070	0x0000940C  	JMP        0
0x0074	0x0000940C  	JMP        0
0x0078	0x0000940C  	JMP        0
0x007C	0x0000940C  	JMP        0
0x0080	0x0000940C  	JMP        0
0x0084	0x0000940C  	JMP        0
0x0088	0x0000940C  	JMP        0
0x008C	0x0000940C  	JMP        0
0x0090	0x0000940C  	JMP        0
0x0094	0x0000940C  	JMP        0
0x0098	0x0000940C  	JMP        0
0x009C	0x0000940C  	JMP        0
0x00A0	0x0000940C  	JMP        0
0x00A4	0x0000940C  	JMP        0
0x00A8	0x0000940C  	JMP        0
0x00AC	0x0000940C  	JMP        0
0x00B0	0x0000940C  	JMP        0
0x00B4	0x0000940C  	JMP        0
0x00B8	0x0000940C  	JMP        0
0x00BC	0x0000940C  	JMP        0
0x00C0	0x0000940C  	JMP        0
0x00C4	0x0000940C  	JMP        0
0x00C8	0x0000940C  	JMP        0
0x00CC	0x0000940C  	JMP        0
0x00D0	0x0000940C  	JMP        0
0x00D4	0x0000940C  	JMP        0
0x00D8	0x0000940C  	JMP        0
0x00DC	0x0000940C  	JMP        0
0x00E0	0x0000940C  	JMP        0
0x00E4	0x0000940C  	JMP        0
0x00E8	0x0000940C  	JMP        0
0x00EC	0x0000940C  	JMP        0
0x00F0	0x0000940C  	JMP        0
0x00F4	0x0000940C  	JMP        0
0x00F8	0x0000940C  	JMP        0
0x00FC	0x0000940C  	JMP        0
0x0100	0x0000940C  	JMP        0
0x0104	0x0000940C  	JMP        0
0x0108	0x0000940C  	JMP        0
0x010C	0x0000940C  	JMP        0
0x0110	0x0000940C  	JMP        0
0x0114	0x0000940C  	JMP        0
0x0118	0x0000940C  	JMP        0
0x011C	0x0000940C  	JMP        0
0x0120	0x0000940C  	JMP        0
0x0124	0x0000940C  	JMP        0
0x0128	0x0000940C  	JMP        0
0x012C	0x0000940C  	JMP        0
0x0130	0x0000940C  	JMP        0
0x0134	0x0000940C  	JMP        0
0x0138	0x0000940C  	JMP        0
0x013C	0x0000940C  	JMP        0
0x0140	0x0000940C  	JMP        0
0x0144	0x0000940C  	JMP        0
0x0148	0x0000940C  	JMP        0
0x014C	0x0000940C  	JMP        0
0x0150	0x0000940C  	JMP        0
0x0154	0x0000940C  	JMP        0
0x0158	0x0000940C  	JMP        0
0x015C	0x0000940C  	JMP        0
0x0160	0x0000940C  	JMP        0
0x0164	0x0000940C  	JMP        0
0x0168	0x0000940C  	JMP        0
0x016C	0x0000940C  	JMP        0
0x0170	0x0000940C  	JMP        0
0x0174	0x0000940C  	JMP        0
0x0178	0x0000940C  	JMP        0
0x017C	0x0000940C  	JMP        0
0x0180	0x0000940C  	JMP        0
0x0184	0x0000940C  	JMP        0
0x0188	0x0000940C  	JMP        0
0x018C	0x0000940C  	JMP        0
0x0190	0x0000940C  	JMP        0
0x0194	0x0000940C  	JMP        0
0x0198	0x0000    	NOP
0x019A	0x0000    	NOP
0x019C	0x0000    	NOP
0x019E	0x0000    	NOP
0x01A0	0x0000940C  	JMP        0
0x01A4	0x0000940C  	JMP        0
0x01A8	0x0000940C  	JMP        0
0x01AC	0x0000940C  	JMP        0
0x01B0	0x0000940C  	JMP        0
0x01B4	0x0000940C  	JMP        0
0x01B8	0x0000940C  	JMP        0
0x01BC	0x0000940C  	JMP        0
0x01C0	0x0000940C  	JMP        0
0x01C4	0x0000940C  	JMP        0
0x01C8	0x0000940C  	JMP        0
0x01CC	0x0000940C  	JMP        0
0x01D0	0x0000940C  	JMP        0
0x01D4	0x0000940C  	JMP        0
0x01D8	0x0000940C  	JMP        0
0x01DC	0x0000940C  	JMP        0
0x01E0	0x0000940C  	JMP        0
0x01E4	0x0000940C  	JMP        0
0x01E8	0x0000940C  	JMP        0
0x01EC	0x0000940C  	JMP        0
0x01F0	0x0000940C  	JMP        0
_main:
0x0584	0xEFBF    	LDI        R27, 255
0x0586	0xBFBD    	OUT        SPL+0, R27
0x0588	0xE2BF    	LDI        R27, 47
0x058A	0xBFBE    	OUT        SPL+1, R27
0x058C	0x0319940E  	CALL       793
0x0590	0xB7CD    	IN         R28, SPL+0
0x0592	0xB7DE    	IN         R29, SPL+1
0x0594	0x9723    	SBIW       R28, 3
0x0596	0xBFCD    	OUT        SPL+0, R28
0x0598	0xBFDE    	OUT        SPL+1, R29
0x059A	0x9621    	ADIW       R28, 1
;MatrixRGB_AVR.c,15 :: 		void main()
;MatrixRGB_AVR.c,17 :: 		uint8_t count = 3;
0x059C	0x922F    	PUSH       R2
0x059E	0x923F    	PUSH       R3
0x05A0	0x924F    	PUSH       R4
0x05A2	0x925F    	PUSH       R5
0x05A4	0x926F    	PUSH       R6
;MatrixRGB_AVR.c,18 :: 		uint8_t i     = 0;
;MatrixRGB_AVR.c,20 :: 		char brightness  = 100;
; brightness start address is: 16 (R16)
0x05A6	0xE604    	LDI        R16, 100
;MatrixRGB_AVR.c,21 :: 		uint8_t width    = 2;
; width start address is: 17 (R17)
0x05A8	0xE012    	LDI        R17, 2
;MatrixRGB_AVR.c,22 :: 		uint8_t height   = 1;
; height start address is: 18 (R18)
0x05AA	0xE021    	LDI        R18, 1
;MatrixRGB_AVR.c,24 :: 		system_setup( brightness, width, height );
0x05AC	0x2E42    	MOV        R4, R18
; height end address is: 18 (R18)
0x05AE	0x2E31    	MOV        R3, R17
; width end address is: 17 (R17)
0x05B0	0x2E20    	MOV        R2, R16
; brightness end address is: 16 (R16)
0x05B2	0xDFA7    	RCALL      _system_setup+0
;MatrixRGB_AVR.c,26 :: 		matrixrgb_set_color( &my_color, 1, 1, 1 );
0x05B4	0x018E    	MOVW       R16, R28
0x05B6	0xE0B1    	LDI        R27, 1
0x05B8	0x2E6B    	MOV        R6, R27
0x05BA	0xE0B1    	LDI        R27, 1
0x05BC	0x2E5B    	MOV        R5, R27
0x05BE	0xE0B1    	LDI        R27, 1
0x05C0	0x2E4B    	MOV        R4, R27
0x05C2	0x0118    	MOVW       R2, R16
0x05C4	0xDF95    	RCALL      _matrixrgb_set_color+0
;MatrixRGB_AVR.c,27 :: 		matrixrgb_scroll_text_left( "Matrix", my_color, 17, 10 );
0x05C6	0xE0BA    	LDI        R27, 10
0x05C8	0x2E5B    	MOV        R5, R27
0x05CA	0xE1B1    	LDI        R27, 17
0x05CC	0x2E4B    	MOV        R4, R27
0x05CE	0xE0B7    	LDI        R27, lo_addr(?lstr1_MatrixRGB_AVR+0)
0x05D0	0x2E2B    	MOV        R2, R27
0x05D2	0xE2B0    	LDI        R27, hi_addr(?lstr1_MatrixRGB_AVR+0)
0x05D4	0x2E3B    	MOV        R3, R27
0x05D6	0x81BA    	LDD        R27, Y+2
0x05D8	0x93BF    	PUSH       R27
0x05DA	0x81B9    	LDD        R27, Y+1
0x05DC	0x93BF    	PUSH       R27
0x05DE	0x81B8    	LDD        R27, Y+0
0x05E0	0x93BF    	PUSH       R27
0x05E2	0xDF0A    	RCALL      _matrixrgb_scroll_text_left+0
0x05E4	0xB7AD    	IN         R26, SPL+0
0x05E6	0xB7BE    	IN         R27, SPL+1
0x05E8	0x9613    	ADIW       R26, 3
0x05EA	0xBFAD    	OUT        SPL+0, R26
0x05EC	0xBFBE    	OUT        SPL+1, R27
;MatrixRGB_AVR.c,31 :: 		while(1)
L_main0:
;MatrixRGB_AVR.c,33 :: 		matrixrgb_set_color( &my_color, 1, 0, 0 );
0x05EE	0x018E    	MOVW       R16, R28
0x05F0	0x2466    	CLR        R6
0x05F2	0x2455    	CLR        R5
0x05F4	0xE0B1    	LDI        R27, 1
0x05F6	0x2E4B    	MOV        R4, R27
0x05F8	0x0118    	MOVW       R2, R16
0x05FA	0xDF7A    	RCALL      _matrixrgb_set_color+0
;MatrixRGB_AVR.c,34 :: 		matrixrgb_scroll_text_left( "Matrix", my_color, 17, 10 );
0x05FC	0xE0BA    	LDI        R27, 10
0x05FE	0x2E5B    	MOV        R5, R27
0x0600	0xE1B1    	LDI        R27, 17
0x0602	0x2E4B    	MOV        R4, R27
0x0604	0xE0B0    	LDI        R27, lo_addr(?lstr2_MatrixRGB_AVR+0)
0x0606	0x2E2B    	MOV        R2, R27
0x0608	0xE2B0    	LDI        R27, hi_addr(?lstr2_MatrixRGB_AVR+0)
0x060A	0x2E3B    	MOV        R3, R27
0x060C	0x81BA    	LDD        R27, Y+2
0x060E	0x93BF    	PUSH       R27
0x0610	0x81B9    	LDD        R27, Y+1
0x0612	0x93BF    	PUSH       R27
0x0614	0x81B8    	LDD        R27, Y+0
0x0616	0x93BF    	PUSH       R27
0x0618	0xDEEF    	RCALL      _matrixrgb_scroll_text_left+0
0x061A	0xB7AD    	IN         R26, SPL+0
0x061C	0xB7BE    	IN         R27, SPL+1
0x061E	0x9613    	ADIW       R26, 3
0x0620	0xBFAD    	OUT        SPL+0, R26
0x0622	0xBFBE    	OUT        SPL+1, R27
;MatrixRGB_AVR.c,35 :: 		}
0x0624	0xCFE4    	RJMP       L_main0
;MatrixRGB_AVR.c,36 :: 		}
L_end_main:
0x0626	0x906F    	POP        R6
0x0628	0x905F    	POP        R5
0x062A	0x904F    	POP        R4
0x062C	0x903F    	POP        R3
0x062E	0x902F    	POP        R2
L__main_end_loop:
0x0630	0xCFFF    	RJMP       L__main_end_loop
; end of _main
_system_setup:
;MatrixRGB_AVR.c,38 :: 		void system_setup( char brightness, uint8_t width, uint8_t height )
;MatrixRGB_AVR.c,40 :: 		CS_DIR    = 1;
0x0502	0x066091B0  	LDS        R27, PORTD_DIR+0
0x0506	0x60B1    	SBR        R27, 1
0x0508	0x066093B0  	STS        PORTD_DIR+0, R27
;MatrixRGB_AVR.c,41 :: 		RST_DIR   = 1;
0x050C	0x060091B0  	LDS        R27, PORTA_DIR+0
0x0510	0x60B1    	SBR        R27, 1
0x0512	0x060093B0  	STS        PORTA_DIR+0, R27
;MatrixRGB_AVR.c,42 :: 		READY_DIR = 0;
0x0516	0x066091B0  	LDS        R27, PORTD_DIR+0
0x051A	0x7FBE    	CBR        R27, 1
0x051C	0x066093B0  	STS        PORTD_DIR+0, R27
;MatrixRGB_AVR.c,44 :: 		SPIC_Init();
0x0520	0xDF28    	RCALL      _SPIC_Init+0
;MatrixRGB_AVR.c,46 :: 		Delay_ms(300);
0x0522	0xE02D    	LDI        R18, 13
0x0524	0xE21D    	LDI        R17, 45
0x0526	0xED08    	LDI        R16, 216
L_system_setup2:
0x0528	0x950A    	DEC        R16
0x052A	0xF7F1    	BRNE       L_system_setup2
0x052C	0x951A    	DEC        R17
0x052E	0xF7E1    	BRNE       L_system_setup2
0x0530	0x952A    	DEC        R18
0x0532	0xF7D1    	BRNE       L_system_setup2
0x0534	0x0000    	NOP
0x0536	0x0000    	NOP
;MatrixRGB_AVR.c,48 :: 		MATRIXRGB_RST = 0;        //Reset slave ( toggle )
0x0538	0x061691B0  	LDS        R27, PORTA_PIN6CTRL+0
0x053C	0x7FBE    	CBR        R27, 1
0x053E	0x061693B0  	STS        PORTA_PIN6CTRL+0, R27
;MatrixRGB_AVR.c,49 :: 		Delay_ms(20);
0x0542	0xED10    	LDI        R17, 208
0x0544	0xEC0A    	LDI        R16, 202
L_system_setup4:
0x0546	0x950A    	DEC        R16
0x0548	0xF7F1    	BRNE       L_system_setup4
0x054A	0x951A    	DEC        R17
0x054C	0xF7E1    	BRNE       L_system_setup4
0x054E	0x0000    	NOP
;MatrixRGB_AVR.c,50 :: 		MATRIXRGB_RST = 1;
0x0550	0x061691B0  	LDS        R27, PORTA_PIN6CTRL+0
0x0554	0x60B1    	SBR        R27, 1
0x0556	0x061693B0  	STS        PORTA_PIN6CTRL+0, R27
;MatrixRGB_AVR.c,51 :: 		Delay_ms(1000);
0x055A	0xE229    	LDI        R18, 41
0x055C	0xE916    	LDI        R17, 150
0x055E	0xE800    	LDI        R16, 128
L_system_setup6:
0x0560	0x950A    	DEC        R16
0x0562	0xF7F1    	BRNE       L_system_setup6
0x0564	0x951A    	DEC        R17
0x0566	0xF7E1    	BRNE       L_system_setup6
0x0568	0x952A    	DEC        R18
0x056A	0xF7D1    	BRNE       L_system_setup6
;MatrixRGB_AVR.c,54 :: 		matrixrgb_init( brightness, width, height );
0x056C	0xDF0F    	RCALL      _matrixrgb_init+0
;MatrixRGB_AVR.c,55 :: 		Delay_ms(200);
0x056E	0xE029    	LDI        R18, 9
0x0570	0xE11E    	LDI        R17, 30
0x0572	0xEE05    	LDI        R16, 229
L_system_setup8:
0x0574	0x950A    	DEC        R16
0x0576	0xF7F1    	BRNE       L_system_setup8
0x0578	0x951A    	DEC        R17
0x057A	0xF7E1    	BRNE       L_system_setup8
0x057C	0x952A    	DEC        R18
0x057E	0xF7D1    	BRNE       L_system_setup8
0x0580	0x0000    	NOP
;MatrixRGB_AVR.c,57 :: 		}
L_end_system_setup:
0x0582	0x9508    	RET
; end of _system_setup
_SPIC_Init:
;__Lib_SPI_c567_d567_e567_f567.c,49 :: 		
;__Lib_SPI_c567_d567_e567_f567.c,50 :: 		
0x0372	0x922F    	PUSH       R2
0x0374	0x923F    	PUSH       R3
0x0376	0x924F    	PUSH       R4
0x0378	0x2444    	CLR        R4
0x037A	0xE0B4    	LDI        R27, 4
0x037C	0x2E3B    	MOV        R3, R27
0x037E	0xE1B0    	LDI        R27, 16
0x0380	0x2E2B    	MOV        R2, R27
0x0382	0xDFC2    	RCALL      _SPIC_Init_Advanced+0
;__Lib_SPI_c567_d567_e567_f567.c,51 :: 		
L_end_SPIC_Init:
0x0384	0x904F    	POP        R4
0x0386	0x903F    	POP        R3
0x0388	0x902F    	POP        R2
0x038A	0x9508    	RET
; end of _SPIC_Init
_SPIC_Init_Advanced:
;__Lib_SPI_c567_d567_e567_f567.c,34 :: 		
;__Lib_SPI_c567_d567_e567_f567.c,35 :: 		
0x0308	0xEFBF    	LDI        R27, lo_addr(_SPIC_Read+0)
0x030A	0x207693B0  	STS        _SPI_Rd_Ptr+0, R27
0x030E	0xEFBF    	LDI        R27, hi_addr(_SPIC_Read+0)
0x0310	0x207793B0  	STS        _SPI_Rd_Ptr+1, R27
;__Lib_SPI_c567_d567_e567_f567.c,36 :: 		
0x0314	0xE3B3    	LDI        R27, lo_addr(_SPIC_Write+0)
0x0316	0x207493B0  	STS        _SPI_Wr_Ptr+0, R27
0x031A	0xE0B1    	LDI        R27, hi_addr(_SPIC_Write+0)
0x031C	0x207593B0  	STS        _SPI_Wr_Ptr+1, R27
;__Lib_SPI_c567_d567_e567_f567.c,38 :: 		
0x0320	0xEBB0    	LDI        R27, 176
0x0322	0x064193B0  	STS        PORTC_DIRSET+0, R27
;__Lib_SPI_c567_d567_e567_f567.c,41 :: 		
0x0326	0xE4B0    	LDI        R27, 64
0x0328	0x064293B0  	STS        PORTC_DIRCLR+0, R27
;__Lib_SPI_c567_d567_e567_f567.c,43 :: 		
0x032C	0xE0B0    	LDI        R27, 0
0x032E	0x08C193B0  	STS        SPIC_INTCTRL+0, R27
;__Lib_SPI_c567_d567_e567_f567.c,45 :: 		
0x0332	0x2D03    	MOV        R16, R3
0x0334	0x7003    	ANDI       R16, 3
0x0336	0x2904    	OR         R16, R4
0x0338	0x2902    	OR         R16, R2
0x033A	0x6400    	ORI        R16, 64
0x033C	0x08C09300  	STS        SPIC_CTRL+0, R16
;__Lib_SPI_c567_d567_e567_f567.c,46 :: 		
0x0340	0xFA32    	BST        R3, 2
0x0342	0x08C091B0  	LDS        R27, SPIC_CTRL+0
0x0346	0xF9B7    	BLD        R27, 7
0x0348	0x08C093B0  	STS        SPIC_CTRL+0, R27
;__Lib_SPI_c567_d567_e567_f567.c,47 :: 		
L_end_SPIC_Init_Advanced:
0x034C	0x9508    	RET
; end of _SPIC_Init_Advanced
_matrixrgb_init:
;matrixrgb_hw.c,74 :: 		void matrixrgb_init( char level, uint8_t width, uint8_t height )
;matrixrgb_hw.c,76 :: 		matrixrgb_hal_init();
0x038C	0x922F    	PUSH       R2
0x038E	0x923F    	PUSH       R3
0x0390	0x924F    	PUSH       R4
0x0392	0x925F    	PUSH       R5
0x0394	0x924F    	PUSH       R4
0x0396	0x923F    	PUSH       R3
0x0398	0x922F    	PUSH       R2
0x039A	0xDFD9    	RCALL      _matrixrgb_hal_init+0
;matrixrgb_hw.c,77 :: 		Delay_ms(300);
0x039C	0xE02D    	LDI        R18, 13
0x039E	0xE21D    	LDI        R17, 45
0x03A0	0xED08    	LDI        R16, 216
L_matrixrgb_init0:
0x03A2	0x950A    	DEC        R16
0x03A4	0xF7F1    	BRNE       L_matrixrgb_init0
0x03A6	0x951A    	DEC        R17
0x03A8	0xF7E1    	BRNE       L_matrixrgb_init0
0x03AA	0x952A    	DEC        R18
0x03AC	0xF7D1    	BRNE       L_matrixrgb_init0
0x03AE	0x0000    	NOP
0x03B0	0x0000    	NOP
;matrixrgb_hw.c,79 :: 		spi_buffer[0] = SETUP_CMD;
0x03B2	0xE0B1    	LDI        R27, 1
0x03B4	0x200E93B0  	STS        matrixrgb_hw_spi_buffer+0, R27
;matrixrgb_hw.c,80 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x03B8	0xE0B1    	LDI        R27, 1
0x03BA	0x2E4B    	MOV        R4, R27
0x03BC	0xE0B0    	LDI        R27, 0
0x03BE	0x2E5B    	MOV        R5, R27
0x03C0	0xE0BE    	LDI        R27, lo_addr(matrixrgb_hw_spi_buffer+0)
0x03C2	0x2E2B    	MOV        R2, R27
0x03C4	0xE2B0    	LDI        R27, hi_addr(matrixrgb_hw_spi_buffer+0)
0x03C6	0x2E3B    	MOV        R3, R27
0x03C8	0xDF7A    	RCALL      _matrixrgb_hal_write+0
0x03CA	0x902F    	POP        R2
0x03CC	0x903F    	POP        R3
0x03CE	0x904F    	POP        R4
;matrixrgb_hw.c,81 :: 		spi_buffer[0] = level;
0x03D0	0x200E9220  	STS        matrixrgb_hw_spi_buffer+0, R2
;matrixrgb_hw.c,82 :: 		spi_buffer[1] = width;
0x03D4	0x200F9230  	STS        matrixrgb_hw_spi_buffer+1, R3
;matrixrgb_hw.c,83 :: 		spi_buffer[2] = height;
0x03D8	0x20109240  	STS        matrixrgb_hw_spi_buffer+2, R4
;matrixrgb_hw.c,84 :: 		matrixrgb_hal_write( &spi_buffer, 3 );
0x03DC	0xE0B3    	LDI        R27, 3
0x03DE	0x2E4B    	MOV        R4, R27
0x03E0	0xE0B0    	LDI        R27, 0
0x03E2	0x2E5B    	MOV        R5, R27
0x03E4	0xE0BE    	LDI        R27, lo_addr(matrixrgb_hw_spi_buffer+0)
0x03E6	0x2E2B    	MOV        R2, R27
0x03E8	0xE2B0    	LDI        R27, hi_addr(matrixrgb_hw_spi_buffer+0)
0x03EA	0x2E3B    	MOV        R3, R27
0x03EC	0xDF68    	RCALL      _matrixrgb_hal_write+0
;matrixrgb_hw.c,86 :: 		}
L_end_matrixrgb_init:
0x03EE	0x905F    	POP        R5
0x03F0	0x904F    	POP        R4
0x03F2	0x903F    	POP        R3
0x03F4	0x902F    	POP        R2
0x03F6	0x9508    	RET
; end of _matrixrgb_init
_matrixrgb_hal_init:
;matrixrgb_hal.c,90 :: 		void matrixrgb_hal_init()
;matrixrgb_hal.c,97 :: 		write_spi_p             = SPI_Wr_Ptr;
0x034E	0x20749100  	LDS        R16, _SPI_Wr_Ptr+0
0x0352	0x20759110  	LDS        R17, _SPI_Wr_Ptr+1
0x0356	0x20729300  	STS        matrixrgb_hal_write_spi_p+0, R16
0x035A	0x20739310  	STS        matrixrgb_hal_write_spi_p+1, R17
;matrixrgb_hal.c,98 :: 		read_spi_p              = SPI_Rd_Ptr;
0x035E	0x20769100  	LDS        R16, _SPI_Rd_Ptr+0
0x0362	0x20779110  	LDS        R17, _SPI_Rd_Ptr+1
0x0366	0x20789300  	STS        matrixrgb_hal_read_spi_p+0, R16
0x036A	0x20799310  	STS        matrixrgb_hal_read_spi_p+1, R17
;matrixrgb_hal.c,111 :: 		matrixrgb_hal_cs_high();
0x036E	0xDF89    	RCALL      _matrixrgb_hal_cs_high+0
;matrixrgb_hal.c,113 :: 		}
L_end_matrixrgb_hal_init:
0x0370	0x9508    	RET
; end of _matrixrgb_hal_init
_matrixrgb_hal_cs_high:
;matrixrgb_hal.c,80 :: 		void matrixrgb_hal_cs_high()
;matrixrgb_hal.c,82 :: 		MATRIXRGB_CS = 1;
0x0282	0x061591B0  	LDS        R27, MATRIXRGB_CS+0
0x0286	0x60B1    	SBR        R27, 1
0x0288	0x061593B0  	STS        MATRIXRGB_CS+0, R27
;matrixrgb_hal.c,83 :: 		}
L_end_matrixrgb_hal_cs_high:
0x028C	0x9508    	RET
; end of _matrixrgb_hal_cs_high
_matrixrgb_hal_write:
;matrixrgb_hal.c,116 :: 		uint16_t count )
;matrixrgb_hal.c,119 :: 		while( MATRIXRGB_READY != 1 )
L_matrixrgb_hal_write0:
0x02BE	0x067291B0  	LDS        R27, MATRIXRGB_READY+0
0x02C2	0xFDB0    	SBRC       R27, 0
0x02C4	0xC001    	RJMP       L_matrixrgb_hal_write1
;matrixrgb_hal.c,122 :: 		}  //Wait till slave is ready
0x02C6	0xCFFB    	RJMP       L_matrixrgb_hal_write0
L_matrixrgb_hal_write1:
;matrixrgb_hal.c,124 :: 		while( count-- )
L_matrixrgb_hal_write2:
0x02C8	0x0192    	MOVW       R18, R4
0x02CA	0x0182    	MOVW       R16, R4
0x02CC	0x5001    	SUBI       R16, 1
0x02CE	0x4010    	SBCI       R17, 0
0x02D0	0x0128    	MOVW       R4, R16
0x02D2	0x2FB2    	MOV        R27, R18
0x02D4	0x2BB3    	OR         R27, R19
0x02D6	0xF0B9    	BREQ       L_matrixrgb_hal_write3
L__matrixrgb_hal_write10:
;matrixrgb_hal.c,126 :: 		matrixrgb_hal_cs_low();
0x02D8	0xDFCE    	RCALL      _matrixrgb_hal_cs_low+0
;matrixrgb_hal.c,127 :: 		write_spi_p( *( buffer++ ) );
0x02DA	0x01F1    	MOVW       R30, R2
0x02DC	0x8100    	LD         R16, Z
0x02DE	0x925F    	PUSH       R5
0x02E0	0x924F    	PUSH       R4
0x02E2	0x923F    	PUSH       R3
0x02E4	0x922F    	PUSH       R2
0x02E6	0x2E20    	MOV        R2, R16
0x02E8	0x207291E0  	LDS        R30, matrixrgb_hal_write_spi_p+0
0x02EC	0x207391F0  	LDS        R31, matrixrgb_hal_write_spi_p+1
0x02F0	0x9509    	ICALL
0x02F2	0x902F    	POP        R2
0x02F4	0x903F    	POP        R3
0x02F6	0x904F    	POP        R4
0x02F8	0x905F    	POP        R5
0x02FA	0x0181    	MOVW       R16, R2
0x02FC	0x5F0F    	SUBI       R16, 255
0x02FE	0x4F1F    	SBCI       R17, 255
0x0300	0x0118    	MOVW       R2, R16
;matrixrgb_hal.c,128 :: 		matrixrgb_hal_cs_high();
0x0302	0xDFBF    	RCALL      _matrixrgb_hal_cs_high+0
;matrixrgb_hal.c,129 :: 		}
0x0304	0xCFE1    	RJMP       L_matrixrgb_hal_write2
L_matrixrgb_hal_write3:
;matrixrgb_hal.c,131 :: 		}
L_end_matrixrgb_hal_write:
0x0306	0x9508    	RET
; end of _matrixrgb_hal_write
_matrixrgb_hal_cs_low:
;matrixrgb_hal.c,85 :: 		void matrixrgb_hal_cs_low()
;matrixrgb_hal.c,87 :: 		MATRIXRGB_CS = 0;
0x0276	0x061591B0  	LDS        R27, MATRIXRGB_CS+0
0x027A	0x7FBE    	CBR        R27, 1
0x027C	0x061593B0  	STS        MATRIXRGB_CS+0, R27
;matrixrgb_hal.c,88 :: 		}
L_end_matrixrgb_hal_cs_low:
0x0280	0x9508    	RET
; end of _matrixrgb_hal_cs_low
_SPIC_Write:
;__Lib_SPI_c567_d567_e567_f567.c,53 :: 		
;__Lib_SPI_c567_d567_e567_f567.c,54 :: 		
0x0266	0x08C39220  	STS        SPIC_DATA+0, R2
;__Lib_SPI_c567_d567_e567_f567.c,55 :: 		
L_SPIC_Write0:
0x026A	0x08C291B0  	LDS        R27, SPIC_STATUS+0
0x026E	0xFDB7    	SBRC       R27, 7
0x0270	0xC001    	RJMP       L_SPIC_Write1
;__Lib_SPI_c567_d567_e567_f567.c,56 :: 		
0x0272	0xCFFB    	RJMP       L_SPIC_Write0
L_SPIC_Write1:
;__Lib_SPI_c567_d567_e567_f567.c,57 :: 		
L_end_SPIC_Write:
0x0274	0x9508    	RET
; end of _SPIC_Write
_SPID_Write:
;__Lib_SPI_c567_d567_e567_f567.c,86 :: 		
;__Lib_SPI_c567_d567_e567_f567.c,87 :: 		
0x02AE	0x09C39220  	STS        SPID_DATA+0, R2
;__Lib_SPI_c567_d567_e567_f567.c,88 :: 		
L_SPID_Write4:
0x02B2	0x09C291B0  	LDS        R27, SPID_STATUS+0
0x02B6	0xFDB7    	SBRC       R27, 7
0x02B8	0xC001    	RJMP       L_SPID_Write5
;__Lib_SPI_c567_d567_e567_f567.c,89 :: 		
0x02BA	0xCFFB    	RJMP       L_SPID_Write4
L_SPID_Write5:
;__Lib_SPI_c567_d567_e567_f567.c,90 :: 		
L_end_SPID_Write:
0x02BC	0x9508    	RET
; end of _SPID_Write
_SPIE_Write:
;__Lib_SPI_c567_d567_e567_f567.c,119 :: 		
;__Lib_SPI_c567_d567_e567_f567.c,120 :: 		
0x029E	0x0AC39220  	STS        SPIE_DATA+0, R2
;__Lib_SPI_c567_d567_e567_f567.c,121 :: 		
L_SPIE_Write8:
0x02A2	0x0AC291B0  	LDS        R27, SPIE_STATUS+0
0x02A6	0xFDB7    	SBRC       R27, 7
0x02A8	0xC001    	RJMP       L_SPIE_Write9
;__Lib_SPI_c567_d567_e567_f567.c,122 :: 		
0x02AA	0xCFFB    	RJMP       L_SPIE_Write8
L_SPIE_Write9:
;__Lib_SPI_c567_d567_e567_f567.c,123 :: 		
L_end_SPIE_Write:
0x02AC	0x9508    	RET
; end of _SPIE_Write
_SPIF_Write:
;__Lib_SPI_c567_d567_e567_f567.c,152 :: 		
;__Lib_SPI_c567_d567_e567_f567.c,153 :: 		
0x028E	0x0BC39220  	STS        SPIF_DATA+0, R2
;__Lib_SPI_c567_d567_e567_f567.c,154 :: 		
L_SPIF_Write12:
0x0292	0x0BC291B0  	LDS        R27, SPIF_STATUS+0
0x0296	0xFDB7    	SBRC       R27, 7
0x0298	0xC001    	RJMP       L_SPIF_Write13
;__Lib_SPI_c567_d567_e567_f567.c,155 :: 		
0x029A	0xCFFB    	RJMP       L_SPIF_Write12
L_SPIF_Write13:
;__Lib_SPI_c567_d567_e567_f567.c,156 :: 		
L_end_SPIF_Write:
0x029C	0x9508    	RET
; end of _SPIF_Write
_matrixrgb_set_color:
;matrixrgb_hw.c,309 :: 		void matrixrgb_set_color( color_t *color, uint8_t red_color, uint8_t green_color, uint8_t blue_color )
;matrixrgb_hw.c,312 :: 		color->red   = red_color;
0x04F0	0x01F1    	MOVW       R30, R2
0x04F2	0x8240    	ST         Z, R4
;matrixrgb_hw.c,313 :: 		color->green = green_color;
0x04F4	0x01F1    	MOVW       R30, R2
0x04F6	0x9631    	ADIW       R30, 1
0x04F8	0x8250    	ST         Z, R5
;matrixrgb_hw.c,314 :: 		color->blue  = blue_color;
0x04FA	0x01F1    	MOVW       R30, R2
0x04FC	0x9632    	ADIW       R30, 2
0x04FE	0x8260    	ST         Z, R6
;matrixrgb_hw.c,316 :: 		}
L_end_matrixrgb_set_color:
0x0500	0x9508    	RET
; end of _matrixrgb_set_color
_matrixrgb_scroll_text_left:
0x03F8	0x93CF    	PUSH       R28
0x03FA	0x93DF    	PUSH       R29
0x03FC	0xB7CD    	IN         R28, SPL+0
0x03FE	0xB7DE    	IN         R29, SPL+1
0x0400	0x9723    	SBIW       R28, 3
0x0402	0xBFCD    	OUT        SPL+0, R28
0x0404	0xBFDE    	OUT        SPL+1, R29
0x0406	0x9621    	ADIW       R28, 1
;matrixrgb_hw.c,175 :: 		void matrixrgb_scroll_text_left( char *text, color_t color, uint8_t speed , uint8_t text_size )
;matrixrgb_hw.c,177 :: 		uint8_t i = 0;
0x0408	0x922F    	PUSH       R2
0x040A	0x923F    	PUSH       R3
0x040C	0x924F    	PUSH       R4
;matrixrgb_hw.c,178 :: 		uint8_t *ptr = text;
0x040E	0x8228    	STD        Y+0, R2
0x0410	0x8239    	STD        Y+1, R3
;matrixrgb_hw.c,180 :: 		spi_buffer[0] = SCROLL_TEXT_LEFT_CMD;
0x0412	0xE0B8    	LDI        R27, 8
0x0414	0x200E93B0  	STS        matrixrgb_hw_spi_buffer+0, R27
;matrixrgb_hw.c,181 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0418	0x925F    	PUSH       R5
0x041A	0x924F    	PUSH       R4
0x041C	0xE0B1    	LDI        R27, 1
0x041E	0x2E4B    	MOV        R4, R27
0x0420	0xE0B0    	LDI        R27, 0
0x0422	0x2E5B    	MOV        R5, R27
0x0424	0xE0BE    	LDI        R27, lo_addr(matrixrgb_hw_spi_buffer+0)
0x0426	0x2E2B    	MOV        R2, R27
0x0428	0xE2B0    	LDI        R27, hi_addr(matrixrgb_hw_spi_buffer+0)
0x042A	0x2E3B    	MOV        R3, R27
0x042C	0xDF48    	RCALL      _matrixrgb_hal_write+0
0x042E	0x904F    	POP        R4
0x0430	0x905F    	POP        R5
;matrixrgb_hw.c,182 :: 		spi_buffer[0] = text_size;
0x0432	0x200E9250  	STS        matrixrgb_hw_spi_buffer+0, R5
;matrixrgb_hw.c,183 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0436	0x925F    	PUSH       R5
0x0438	0x924F    	PUSH       R4
0x043A	0xE0B1    	LDI        R27, 1
0x043C	0x2E4B    	MOV        R4, R27
0x043E	0xE0B0    	LDI        R27, 0
0x0440	0x2E5B    	MOV        R5, R27
0x0442	0xE0BE    	LDI        R27, lo_addr(matrixrgb_hw_spi_buffer+0)
0x0444	0x2E2B    	MOV        R2, R27
0x0446	0xE2B0    	LDI        R27, hi_addr(matrixrgb_hw_spi_buffer+0)
0x0448	0x2E3B    	MOV        R3, R27
0x044A	0xDF39    	RCALL      _matrixrgb_hal_write+0
;matrixrgb_hw.c,184 :: 		spi_buffer[0] = color.red;
0x044C	0x810F    	LDD        R16, Y+7
0x044E	0x200E9300  	STS        matrixrgb_hw_spi_buffer+0, R16
;matrixrgb_hw.c,185 :: 		spi_buffer[1] = color.green;
0x0452	0x8508    	LDD        R16, Y+8
0x0454	0x200F9300  	STS        matrixrgb_hw_spi_buffer+1, R16
;matrixrgb_hw.c,186 :: 		spi_buffer[2] = color.blue;
0x0458	0x8509    	LDD        R16, Y+9
0x045A	0x20109300  	STS        matrixrgb_hw_spi_buffer+2, R16
;matrixrgb_hw.c,187 :: 		matrixrgb_hal_write( &spi_buffer, 3 );
0x045E	0xE0B3    	LDI        R27, 3
0x0460	0x2E4B    	MOV        R4, R27
0x0462	0xE0B0    	LDI        R27, 0
0x0464	0x2E5B    	MOV        R5, R27
0x0466	0xE0BE    	LDI        R27, lo_addr(matrixrgb_hw_spi_buffer+0)
0x0468	0x2E2B    	MOV        R2, R27
0x046A	0xE2B0    	LDI        R27, hi_addr(matrixrgb_hw_spi_buffer+0)
0x046C	0x2E3B    	MOV        R3, R27
0x046E	0xDF27    	RCALL      _matrixrgb_hal_write+0
0x0470	0x904F    	POP        R4
;matrixrgb_hw.c,188 :: 		spi_buffer[0] = speed;
0x0472	0x200E9240  	STS        matrixrgb_hw_spi_buffer+0, R4
;matrixrgb_hw.c,189 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0476	0xE0B1    	LDI        R27, 1
0x0478	0x2E4B    	MOV        R4, R27
0x047A	0xE0B0    	LDI        R27, 0
0x047C	0x2E5B    	MOV        R5, R27
0x047E	0xE0BE    	LDI        R27, lo_addr(matrixrgb_hw_spi_buffer+0)
0x0480	0x2E2B    	MOV        R2, R27
0x0482	0xE2B0    	LDI        R27, hi_addr(matrixrgb_hw_spi_buffer+0)
0x0484	0x2E3B    	MOV        R3, R27
0x0486	0xDF1B    	RCALL      _matrixrgb_hal_write+0
0x0488	0x905F    	POP        R5
;matrixrgb_hw.c,191 :: 		for( i = 0; i < text_size; i++ )
0x048A	0xE0B0    	LDI        R27, 0
0x048C	0x83BA    	STD        Y+2, R27
L_matrixrgb_scroll_text_left23:
0x048E	0x810A    	LDD        R16, Y+2
0x0490	0x1505    	CP         R16, R5
0x0492	0xF500    	BRSH       L_matrixrgb_scroll_text_left24
L__matrixrgb_scroll_text_left39:
;matrixrgb_hw.c,193 :: 		spi_buffer[0] = *ptr++;
0x0494	0x81E8    	LDD        R30, Y+0
0x0496	0x81F9    	LDD        R31, Y+1
0x0498	0x8100    	LD         R16, Z
0x049A	0x200E9300  	STS        matrixrgb_hw_spi_buffer+0, R16
0x049E	0x8108    	LDD        R16, Y+0
0x04A0	0x8119    	LDD        R17, Y+1
0x04A2	0x5F0F    	SUBI       R16, 255
0x04A4	0x4F1F    	SBCI       R17, 255
0x04A6	0x8308    	STD        Y+0, R16
0x04A8	0x8319    	STD        Y+1, R17
;matrixrgb_hw.c,194 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x04AA	0x925F    	PUSH       R5
0x04AC	0x924F    	PUSH       R4
0x04AE	0x923F    	PUSH       R3
0x04B0	0x922F    	PUSH       R2
0x04B2	0xE0B1    	LDI        R27, 1
0x04B4	0x2E4B    	MOV        R4, R27
0x04B6	0xE0B0    	LDI        R27, 0
0x04B8	0x2E5B    	MOV        R5, R27
0x04BA	0xE0BE    	LDI        R27, lo_addr(matrixrgb_hw_spi_buffer+0)
0x04BC	0x2E2B    	MOV        R2, R27
0x04BE	0xE2B0    	LDI        R27, hi_addr(matrixrgb_hw_spi_buffer+0)
0x04C0	0x2E3B    	MOV        R3, R27
0x04C2	0xDEFD    	RCALL      _matrixrgb_hal_write+0
0x04C4	0x902F    	POP        R2
0x04C6	0x903F    	POP        R3
0x04C8	0x904F    	POP        R4
0x04CA	0x905F    	POP        R5
;matrixrgb_hw.c,191 :: 		for( i = 0; i < text_size; i++ )
0x04CC	0x810A    	LDD        R16, Y+2
0x04CE	0x5F0F    	SUBI       R16, 255
0x04D0	0x830A    	STD        Y+2, R16
;matrixrgb_hw.c,195 :: 		}
0x04D2	0xCFDD    	RJMP       L_matrixrgb_scroll_text_left23
L_matrixrgb_scroll_text_left24:
;matrixrgb_hw.c,197 :: 		}
L_end_matrixrgb_scroll_text_left:
0x04D4	0x904F    	POP        R4
0x04D6	0x903F    	POP        R3
0x04D8	0x902F    	POP        R2
0x04DA	0x9622    	ADIW       R28, 2
0x04DC	0xBFCD    	OUT        SPL+0, R28
0x04DE	0xBFDE    	OUT        SPL+1, R29
0x04E0	0x91DF    	POP        R29
0x04E2	0x91CF    	POP        R28
0x04E4	0x9508    	RET
; end of _matrixrgb_scroll_text_left
___CC2DW:
;__Lib_System.c,25 :: 		
;__Lib_System.c,27 :: 		
L_loopDW:
;__Lib_System.c,28 :: 		
0x04E6	0x9005    	LPM        R0, Z+
;__Lib_System.c,29 :: 		
0x04E8	0x920D    	ST         X+, R0
;__Lib_System.c,30 :: 		
0x04EA	0x9701    	SBIW       R24, 1
;__Lib_System.c,31 :: 		
0x04EC	0xF7E1    	BRNE       L_loopDW
;__Lib_System.c,33 :: 		
L_end___CC2DW:
0x04EE	0x9508    	RET
; end of ___CC2DW
0x0632	0xE0A0    	LDI        R26, 0
0x0634	0xE2B0    	LDI        R27, 32
0x0636	0xEFE4    	LDI        R30, 244
0x0638	0xE0F1    	LDI        R31, 1
0x063A	0xE782    	LDI        R24, 114
0x063C	0xE090    	LDI        R25, 0
0x063E	0x0273940E  	CALL       ___CC2DW
0x0642	0x9508    	RET
;MatrixRGB_AVR.c,0 :: ?ICS?lstr2_MatrixRGB_AVR
0x01F4	0x614D ;?ICS?lstr2_MatrixRGB_AVR+0
0x01F6	0x7274 ;?ICS?lstr2_MatrixRGB_AVR+2
0x01F8	0x7869 ;?ICS?lstr2_MatrixRGB_AVR+4
0x01FA	0x00 ;?ICS?lstr2_MatrixRGB_AVR+6
; end of ?ICS?lstr2_MatrixRGB_AVR
;MatrixRGB_AVR.c,0 :: ?ICS?lstr1_MatrixRGB_AVR
0x01FB	0x614D ;?ICS?lstr1_MatrixRGB_AVR+0
0x01FD	0x7274 ;?ICS?lstr1_MatrixRGB_AVR+2
0x01FF	0x7869 ;?ICS?lstr1_MatrixRGB_AVR+4
0x0201	0x00 ;?ICS?lstr1_MatrixRGB_AVR+6
; end of ?ICS?lstr1_MatrixRGB_AVR
;matrixrgb_hw.c,0 :: ?ICSmatrixrgb_hw_spi_buffer
0x0202	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+0
0x0204	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+2
0x0206	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+4
0x0208	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+6
0x020A	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+8
0x020C	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+10
0x020E	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+12
0x0210	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+14
0x0212	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+16
0x0214	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+18
0x0216	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+20
0x0218	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+22
0x021A	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+24
0x021C	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+26
0x021E	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+28
0x0220	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+30
0x0222	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+32
0x0224	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+34
0x0226	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+36
0x0228	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+38
0x022A	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+40
0x022C	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+42
0x022E	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+44
0x0230	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+46
0x0232	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+48
0x0234	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+50
0x0236	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+52
0x0238	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+54
0x023A	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+56
0x023C	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+58
0x023E	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+60
0x0240	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+62
0x0242	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+64
0x0244	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+66
0x0246	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+68
0x0248	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+70
0x024A	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+72
0x024C	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+74
0x024E	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+76
0x0250	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+78
0x0252	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+80
0x0254	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+82
0x0256	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+84
0x0258	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+86
0x025A	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+88
0x025C	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+90
0x025E	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+92
0x0260	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+94
0x0262	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+96
0x0264	0x0000 ;?ICSmatrixrgb_hw_spi_buffer+98
; end of ?ICSmatrixrgb_hw_spi_buffer
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0133       [8]    _SPIC_Write
0x013B       [6]    _matrixrgb_hal_cs_low
0x0141       [6]    _matrixrgb_hal_cs_high
0x0147       [8]    _SPIF_Write
0x014F       [8]    _SPIE_Write
0x0157       [8]    _SPID_Write
0x015F      [37]    _matrixrgb_hal_write
0x0184      [35]    _SPIC_Init_Advanced
0x01A7      [18]    _matrixrgb_hal_init
0x01B9      [13]    _SPIC_Init
0x01C6      [54]    _matrixrgb_init
0x01FC     [119]    _matrixrgb_scroll_text_left
0x0273       [5]    ___CC2DW
0x0278       [9]    _matrixrgb_set_color
0x0281      [65]    _system_setup
0x02C2      [87]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    Delay_Cyc_loc_L0
0x0000       [1]    GPIO_GPIOR0
0x0000       [1]    R0
0x0001       [1]    GPIO_GPIOR1
0x0001       [1]    R1
0x0002       [2]    FARG_matrixrgb_scroll_img_right_bmp
0x0002       [1]    FARG_matrixrgb_init_level
0x0002       [1]    FARG_matrixrgb_scroll_off_scrn_up_speed
0x0002       [2]    FARG_matrixrgb_image_load_bmp
0x0002       [1]    GPIO_GPIOR2
0x0002       [2]    FARG_matrixrgb_scroll_text_left_text
0x0002       [2]    FARG_matrixrgb_hal_read_buffer
0x0002       [1]    R2
0x0002       [2]    FARG_matrixrgb_hal_write_buffer
0x0002       [2]    FARG_matrixrgb_scroll_text_right_text
0x0002       [2]    FARG_matrixrgb_write_pixel_img_row
0x0002       [2]    FARG_matrixrgb_erase_pixel_row
0x0002       [2]    FARG_matrixrgb_write_pixel_row
0x0002       [2]    FARG_matrixrgb_scroll_img_left_bmp
0x0002       [1]    FARG_system_setup_brightness
0x0002       [1]    FARG_SPIC_Read_data_out
0x0002       [1]    FARG_SPID_Init_Advanced_mode
0x0002       [1]    FARG_SPI_Write_data_out
0x0002       [1]    FARG_SPIC_Write_data_out
0x0002       [1]    FARG_SPID_Write_data_out
0x0002       [1]    FARG_SPIE_Write_data_out
0x0002       [1]    FARG_SPIE_Read_data_out
0x0002       [1]    FARG_SPID_Read_data_out
0x0002       [1]    FARG_SPIE_Init_Advanced_mode
0x0002       [1]    FARG_Delay_Cyc_cycles_div_by_10
0x0002       [2]    FARG_VDelay_ms_Time_ms
0x0002       [1]    FARG_SPIF_Read_data_out
0x0002       [2]    FARG_SPI_Set_Active_read_ptr
0x0002       [1]    FARG_SPIF_Write_data_out
0x0002       [1]    FARG_SPI_Read_buffer
0x0002       [1]    FARG_SPIC_Init_Advanced_mode
0x0002       [2]    FARG_VDelay_Advanced_ms_Time_ms
0x0002       [2]    FARG_Button_port
0x0002       [2]    FARG_matrixrgb_set_color_color
0x0002       [1]    FARG_SPIF_Init_Advanced_mode
0x0002       [1]    FARG_matrixrgb_scroll_off_scrn_right_speed
0x0002       [1]    FARG_matrixrgb_scroll_off_scrn_down_speed
0x0002       [1]    FARG_matrixrgb_scroll_off_scrn_left_speed
0x0003       [1]    FARG_SPID_Init_Advanced_fcy_div
0x0003       [1]    FARG_SPIC_Init_Advanced_fcy_div
0x0003       [1]    FARG_matrixrgb_init_width
0x0003       [1]    FARG_SPIF_Init_Advanced_fcy_div
0x0003       [1]    R3
0x0003       [1]    FARG_system_setup_width
0x0003       [1]    GPIO_GPIOR3
0x0003       [1]    FARG_SPIE_Init_Advanced_fcy_div
0x0004       [1]    FARG_matrixrgb_image_load_width
0x0004       [1]    FARG_matrixrgb_scroll_img_left_width
0x0004       [2]    FARG_matrixrgb_write_pixel_column
0x0004       [2]    FARG_matrixrgb_erase_pixel_column
0x0004       [1]    FARG_Button_pin
0x0004       [1]    FARG_SPIF_Init_Advanced_clock_and_edge
0x0004       [2]    FARG_SPI_Set_Active_write_ptr
0x0004       [2]    FARG_matrixrgb_hal_read_count
0x0004       [1]    GPIO_GPIOR4
0x0004       [1]    R4
0x0004       [1]    FARG_matrixrgb_init_height
0x0004       [2]    FARG_VDelay_Advanced_ms_Current_Fosc_kHz
0x0004       [2]    FARG_matrixrgb_hal_write_count
0x0004       [1]    FARG_matrixrgb_set_color_red_color
0x0004       [1]    FARG_system_setup_height
0x0004       [1]    FARG_SPID_Init_Advanced_clock_and_edge
0x0004       [2]    FARG_matrixrgb_write_pixel_img_column
0x0004       [1]    FARG_SPIE_Init_Advanced_clock_and_edge
0x0004       [1]    FARG_matrixrgb_scroll_text_left_speed
0x0004       [1]    FARG_matrixrgb_scroll_text_right_speed
0x0004       [1]    FARG_matrixrgb_scroll_img_right_width
0x0004       [1]    FARG_SPIC_Init_Advanced_clock_and_edge
0x0005       [1]    FARG_Button_time_ms
0x0005       [1]    FARG_matrixrgb_scroll_text_left_text_size
0x0005       [1]    FARG_matrixrgb_set_color_green_color
0x0005       [1]    FARG_matrixrgb_scroll_img_left_height
0x0005       [1]    R5
0x0005       [1]    FARG_matrixrgb_scroll_img_right_height
0x0005       [1]    FARG_matrixrgb_image_load_height
0x0005       [1]    FARG_matrixrgb_scroll_text_right_text_size
0x0005       [1]    GPIO_GPIOR5
0x0006       [1]    FARG_matrixrgb_write_pixel_red
0x0006       [1]    FARG_matrixrgb_set_color_blue_color
0x0006       [1]    GPIO_GPIOR6
0x0006       [1]    FARG_Button_active_state
0x0006       [1]    FARG_matrixrgb_write_pixel_img_red
0x0006       [1]    FARG_matrixrgb_scroll_img_right_speed
0x0006       [1]    R6
0x0006       [1]    FARG_matrixrgb_scroll_img_left_speed
0x0007       [1]    R7
0x0007       [1]    GPIO_GPIOR7
0x0007       [1]    FARG_matrixrgb_write_pixel_img_green
0x0007       [1]    FARG_matrixrgb_write_pixel_green
0x0008       [1]    FARG_matrixrgb_write_pixel_img_blue
0x0008       [1]    R8
0x0008       [1]    FARG_matrixrgb_write_pixel_blue
0x0008       [1]    GPIO_GPIOR8
0x0009       [1]    R9
0x0009       [1]    GPIO_GPIOR9
0x000A       [1]    R10
0x000A       [1]    GPIO_GPIOR10
0x000B       [1]    GPIO_GPIOR11
0x000B       [1]    R11
0x000C       [1]    GPIO_GPIOR12
0x000C       [1]    R12
0x000D       [1]    GPIO_GPIOR13
0x000D       [1]    R13
0x000E       [1]    GPIO_GPIOR14
0x000E       [1]    R14
0x000F       [1]    GPIO_GPIOR15
0x000F       [1]    R15
0x0010       [1]    R16
0x0010       [1]    VPORT0_DIR
0x0011       [1]    VPORT0_OUT
0x0011       [1]    R17
0x0012       [1]    R18
0x0012       [1]    VPORT0_IN
0x0013       [0]    INT1IF_bit
0x0013       [0]    INT0IF_bit
0x0013       [1]    VPORT0_INTFLAGS
0x0013       [1]    R19
0x0014       [1]    R20
0x0014       [1]    VPORT1_DIR
0x0015       [1]    VPORT1_OUT
0x0015       [1]    R21
0x0016       [1]    R22
0x0016       [1]    VPORT1_IN
0x0017       [0]    INT0IF_VPORT1_INTFLAGS_bit
0x0017       [1]    R23
0x0017       [0]    INT1IF_VPORT1_INTFLAGS_bit
0x0017       [1]    VPORT1_INTFLAGS
0x0018       [1]    R24
0x0018       [1]    VPORT2_DIR
0x0019       [1]    VPORT2_OUT
0x0019       [1]    R25
0x001A       [1]    VPORT2_IN
0x001A       [1]    XL
0x001A       [2]    X
0x001A       [1]    R26
0x001B       [1]    R27
0x001B       [1]    XH
0x001B       [0]    INT1IF_VPORT2_INTFLAGS_bit
0x001B       [0]    INT0IF_VPORT2_INTFLAGS_bit
0x001B       [1]    VPORT2_INTFLAGS
0x001C       [1]    R28
0x001C       [1]    VPORT3_DIR
0x001C       [1]    YL
0x001C       [2]    Y
0x001D       [1]    R29
0x001D       [1]    YH
0x001D       [1]    VPORT3_OUT
0x001E       [1]    ZL
0x001E       [2]    Z
0x001E       [1]    VPORT3_IN
0x001E       [1]    R30
0x001F       [1]    VPORT3_INTFLAGS
0x001F       [1]    ZH
0x001F       [0]    INT0IF_VPORT3_INTFLAGS_bit
0x001F       [0]    INT1IF_VPORT3_INTFLAGS_bit
0x001F       [1]    R31
0x002E       [1]    OCD_OCDR0
0x002F       [0]    OCDRD_bit
0x002F       [1]    OCD_OCDR1
0x0034       [0]    CCP0_bit
0x0034       [0]    CCP4_bit
0x0034       [0]    CCP3_bit
0x0034       [0]    CCP2_bit
0x0034       [0]    CCP1_bit
0x0034       [0]    CCP6_bit
0x0034       [1]    CPU_CCP
0x0034       [0]    CCP7_bit
0x0034       [0]    CCP5_bit
0x0038       [1]    CPU_RAMPD
0x0039       [1]    CPU_RAMPX
0x003A       [1]    CPU_RAMPY
0x003B       [1]    CPU_RAMPZ
0x003C       [1]    CPU_EIND
0x003D       [1]    CPU_SPL
0x003D       [1]    SPL
0x003E       [1]    SPH
0x003E       [1]    CPU_SPH
0x003F       [1]    SREG
0x003F       [1]    CPU_SREG
0x003F       [0]    S_bit
0x003F       [0]    V_bit
0x003F       [0]    H_bit
0x003F       [0]    I_bit
0x003F       [0]    T_bit
0x003F       [0]    N_bit
0x003F       [0]    C_bit
0x003F       [0]    Z_bit
0x0600       [0]    RST_DIR
0x0600       [1]    PORTA_DIR
0x0615       [0]    MATRIXRGB_CS
0x0615       [1]    PORTA_PIN5CTRL
0x0616       [1]    PORTA_PIN6CTRL
0x0616       [0]    MATRIXRGB_RST
0x0641       [1]    PORTC_DIRSET
0x0642       [1]    PORTC_DIRCLR
0x0660       [1]    PORTD_DIR
0x0660       [0]    CS_DIR
0x0660       [0]    READY_DIR
0x0672       [1]    PORTD_PIN2CTRL
0x0672       [0]    MATRIXRGB_READY
0x08C0       [1]    SPIC_CTRL
0x08C1       [1]    SPIC_INTCTRL
0x08C2       [1]    SPIC_STATUS
0x08C3       [1]    SPIC_DATA
0x09C2       [1]    SPID_STATUS
0x09C3       [1]    SPID_DATA
0x0AC2       [1]    SPIE_STATUS
0x0AC3       [1]    SPIE_DATA
0x0BC2       [1]    SPIF_STATUS
0x0BC3       [1]    SPIF_DATA
0x2000       [7]    ?lstr2_MatrixRGB_AVR
0x2007       [7]    ?lstr1_MatrixRGB_AVR
0x200E     [100]    matrixrgb_hw_spi_buffer
0x2072       [2]    matrixrgb_hal_write_spi_p
0x2074       [2]    _SPI_Wr_Ptr
0x2076       [2]    _SPI_Rd_Ptr
0x2078       [2]    matrixrgb_hal_read_spi_p
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x01F4       [7]    ?ICS?lstr2_MatrixRGB_AVR
0x01FB       [7]    ?ICS?lstr1_MatrixRGB_AVR
0x0202     [100]    ?ICSmatrixrgb_hw_spi_buffer
