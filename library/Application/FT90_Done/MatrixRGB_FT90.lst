;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/4/2016 12:33:55 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x00300337  JMP	_main
0x0004	0x00300331  JMP	___GenExcept
0x0008	0x00300331  JMP	___GenExcept
0x000C	0x00300331  JMP	___GenExcept
0x0010	0x00300331  JMP	___GenExcept
0x0014	0x00300331  JMP	___GenExcept
0x0018	0x00300331  JMP	___GenExcept
0x001C	0x00300331  JMP	___GenExcept
0x0020	0x00300331  JMP	___GenExcept
0x0024	0x00300331  JMP	___GenExcept
0x0028	0x00300331  JMP	___GenExcept
0x002C	0x00300331  JMP	___GenExcept
0x0030	0x00300331  JMP	___GenExcept
0x0034	0x00300331  JMP	___GenExcept
0x0038	0x00300331  JMP	___GenExcept
0x003C	0x00300331  JMP	___GenExcept
0x0040	0x00300331  JMP	___GenExcept
0x0044	0x00300331  JMP	___GenExcept
0x0048	0x00300331  JMP	___GenExcept
0x004C	0x00300331  JMP	___GenExcept
0x0050	0x00300331  JMP	___GenExcept
0x0054	0x00300331  JMP	___GenExcept
0x0058	0x00300331  JMP	___GenExcept
0x005C	0x00300331  JMP	___GenExcept
0x0060	0x00300331  JMP	___GenExcept
0x0064	0x00300331  JMP	___GenExcept
0x0068	0x00300331  JMP	___GenExcept
0x006C	0x00300331  JMP	___GenExcept
0x0070	0x00300331  JMP	___GenExcept
0x0074	0x00300331  JMP	___GenExcept
0x0078	0x00300331  JMP	___GenExcept
0x007C	0x00300331  JMP	___GenExcept
0x0080	0x00300331  JMP	___GenExcept
0x0084	0x00300331  JMP	___GenExcept
0x0088	0x00300331  JMP	___GenExcept
0x008C	0x00300331  JMP	___GenExcept
; end of ____SysVT
_main:
;MatrixRGB_FT90.c, 10 :: 		void main()
0x0CDC	0x65F0FFFC  LDK.L	SP, #65532
0x0CE0	0x95D00004  LINK	LR, #4
0x0CE4	0x00340611  CALL	_ZeroStaticLink
0x0CE8	0x00340333  CALL	__Lib_System_InitialSetUpCLKPMC
0x0CEC	0x0034060C  CALL	_InitStaticLink
;MatrixRGB_FT90.c, 12 :: 		uint8_t count = 3;
;MatrixRGB_FT90.c, 13 :: 		uint8_t i     = 0;
;MatrixRGB_FT90.c, 16 :: 		system_setup( 2, 1 );
0x0CF0	0x64100001  LDK.L	R1, #1
0x0CF4	0x64000002  LDK.L	R0, #2
0x0CF8	0x003402BC  CALL	_system_setup+0
;MatrixRGB_FT90.c, 18 :: 		matrixrgb_scroll_img_right( MikroeBITMAP_bmp, 64, 16, 40 );
0x0CFC	0x64300028  LDK.L	R3, #40
0x0D00	0x64200010  LDK.L	R2, #16
0x0D04	0x64100040  LDK.L	R1, #64
0x0D08	0x64000004  LDK.L	R0, #_MikroeBITMAP_bmp+0
0x0D0C	0x003402F1  CALL	_matrixrgb_scroll_img_right+0
;MatrixRGB_FT90.c, 19 :: 		matrixrgb_scroll_off_scrn_down( 30 );
0x0D10	0x6400001E  LDK.L	R0, #30
0x0D14	0x003402E3  CALL	_matrixrgb_scroll_off_scrn_down+0
;MatrixRGB_FT90.c, 20 :: 		matrixrgb_set_color( &my_color, 1, 1, 1 );
0x0D18	0x440FC000  ADD.L	R0, SP, #0
0x0D1C	0x64300001  LDK.L	R3, #1
0x0D20	0x64200001  LDK.L	R2, #1
0x0D24	0x64100001  LDK.L	R1, #1
0x0D28	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 21 :: 		matrixrgb_scroll_text_left( "Matrix ", my_color, 17, 10 );
0x0D2C	0x64000804  LDK.L	R0, #?lstr1_MatrixRGB_FT90+0
0x0D30	0x6420000A  LDK.L	R2, #10
0x0D34	0x64100011  LDK.L	R1, #17
0x0D38	0x45FFC042  SUB.L	SP, SP, #4
0x0D3C	0x45EFC040  ADD.L	R30, SP, #4
0x0D40	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0D44	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0D48	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 22 :: 		matrixrgb_set_color( &my_color, 1, 0, 0 );
0x0D4C	0x440FC000  ADD.L	R0, SP, #0
0x0D50	0x64300000  LDK.L	R3, #0
0x0D54	0x64200000  LDK.L	R2, #0
0x0D58	0x64100001  LDK.L	R1, #1
0x0D5C	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 23 :: 		matrixrgb_scroll_text_left( "R", my_color, 17, 1 );
0x0D60	0x6400080C  LDK.L	R0, #?lstr2_MatrixRGB_FT90+0
0x0D64	0x64200001  LDK.L	R2, #1
0x0D68	0x64100011  LDK.L	R1, #17
0x0D6C	0x45FFC042  SUB.L	SP, SP, #4
0x0D70	0x45EFC040  ADD.L	R30, SP, #4
0x0D74	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0D78	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0D7C	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 24 :: 		matrixrgb_set_color( &my_color, 0, 1, 0 );
0x0D80	0x440FC000  ADD.L	R0, SP, #0
0x0D84	0x64300000  LDK.L	R3, #0
0x0D88	0x64200001  LDK.L	R2, #1
0x0D8C	0x64100000  LDK.L	R1, #0
0x0D90	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 25 :: 		matrixrgb_scroll_text_left( "G", my_color, 17, 1 );
0x0D94	0x6400080E  LDK.L	R0, #?lstr3_MatrixRGB_FT90+0
0x0D98	0x64200001  LDK.L	R2, #1
0x0D9C	0x64100011  LDK.L	R1, #17
0x0DA0	0x45FFC042  SUB.L	SP, SP, #4
0x0DA4	0x45EFC040  ADD.L	R30, SP, #4
0x0DA8	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0DAC	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0DB0	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 26 :: 		matrixrgb_set_color( &my_color, 0, 0, 1 );
0x0DB4	0x440FC000  ADD.L	R0, SP, #0
0x0DB8	0x64300001  LDK.L	R3, #1
0x0DBC	0x64200000  LDK.L	R2, #0
0x0DC0	0x64100000  LDK.L	R1, #0
0x0DC4	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 27 :: 		matrixrgb_scroll_text_left( "B ", my_color, 17, 1 );
0x0DC8	0x64000810  LDK.L	R0, #?lstr4_MatrixRGB_FT90+0
0x0DCC	0x64200001  LDK.L	R2, #1
0x0DD0	0x64100011  LDK.L	R1, #17
0x0DD4	0x45FFC042  SUB.L	SP, SP, #4
0x0DD8	0x45EFC040  ADD.L	R30, SP, #4
0x0DDC	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0DE0	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0DE4	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 28 :: 		matrixrgb_set_color( &my_color, 1, 1, 1 );
0x0DE8	0x440FC000  ADD.L	R0, SP, #0
0x0DEC	0x64300001  LDK.L	R3, #1
0x0DF0	0x64200001  LDK.L	R2, #1
0x0DF4	0x64100001  LDK.L	R1, #1
0x0DF8	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 29 :: 		matrixrgb_scroll_off_scrn_up( 30 );
0x0DFC	0x6400001E  LDK.L	R0, #30
0x0E00	0x00340254  CALL	_matrixrgb_scroll_off_scrn_up+0
;MatrixRGB_FT90.c, 30 :: 		matrixrgb_set_color( &my_color, 1, 0, 0 );
0x0E04	0x440FC000  ADD.L	R0, SP, #0
0x0E08	0x64300000  LDK.L	R3, #0
0x0E0C	0x64200000  LDK.L	R2, #0
0x0E10	0x64100001  LDK.L	R1, #1
0x0E14	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 31 :: 		matrixrgb_scroll_text_left( "By: ", my_color, 17, 4 );
0x0E18	0x64000813  LDK.L	R0, #?lstr5_MatrixRGB_FT90+0
0x0E1C	0x64200004  LDK.L	R2, #4
0x0E20	0x64100011  LDK.L	R1, #17
0x0E24	0x45FFC042  SUB.L	SP, SP, #4
0x0E28	0x45EFC040  ADD.L	R30, SP, #4
0x0E2C	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0E30	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0E34	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 32 :: 		matrixrgb_set_color( &my_color, 1, 1, 1 );
0x0E38	0x440FC000  ADD.L	R0, SP, #0
0x0E3C	0x64300001  LDK.L	R3, #1
0x0E40	0x64200001  LDK.L	R2, #1
0x0E44	0x64100001  LDK.L	R1, #1
0x0E48	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 33 :: 		matrixrgb_scroll_text_left( "Corey ", my_color, 17, 6 );
0x0E4C	0x64000818  LDK.L	R0, #?lstr6_MatrixRGB_FT90+0
0x0E50	0x64200006  LDK.L	R2, #6
0x0E54	0x64100011  LDK.L	R1, #17
0x0E58	0x45FFC042  SUB.L	SP, SP, #4
0x0E5C	0x45EFC040  ADD.L	R30, SP, #4
0x0E60	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0E64	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0E68	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 34 :: 		matrixrgb_set_color( &my_color, 0, 0, 1 );
0x0E6C	0x440FC000  ADD.L	R0, SP, #0
0x0E70	0x64300001  LDK.L	R3, #1
0x0E74	0x64200000  LDK.L	R2, #0
0x0E78	0x64100000  LDK.L	R1, #0
0x0E7C	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 35 :: 		matrixrgb_scroll_text_left( "Lakey ", my_color, 17, 6 );
0x0E80	0x6400081F  LDK.L	R0, #?lstr7_MatrixRGB_FT90+0
0x0E84	0x64200006  LDK.L	R2, #6
0x0E88	0x64100011  LDK.L	R1, #17
0x0E8C	0x45FFC042  SUB.L	SP, SP, #4
0x0E90	0x45EFC040  ADD.L	R30, SP, #4
0x0E94	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0E98	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0E9C	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 36 :: 		matrixrgb_scroll_off_scrn_left( 17 );
0x0EA0	0x64000011  LDK.L	R0, #17
0x0EA4	0x003402A1  CALL	_matrixrgb_scroll_off_scrn_left+0
;MatrixRGB_FT90.c, 37 :: 		matrixrgb_scroll_img_right( MikroeBITMAP_bmp, 64, 16, 25 );
0x0EA8	0x64300019  LDK.L	R3, #25
0x0EAC	0x64200010  LDK.L	R2, #16
0x0EB0	0x64100040  LDK.L	R1, #64
0x0EB4	0x64000004  LDK.L	R0, #_MikroeBITMAP_bmp+0
0x0EB8	0x003402F1  CALL	_matrixrgb_scroll_img_right+0
;MatrixRGB_FT90.c, 38 :: 		matrixrgb_scroll_off_scrn_right( 10 );
0x0EBC	0x6400000A  LDK.L	R0, #10
0x0EC0	0x00340293  CALL	_matrixrgb_scroll_off_scrn_right+0
;MatrixRGB_FT90.c, 40 :: 		while(1)
L_main0:
;MatrixRGB_FT90.c, 42 :: 		matrixrgb_set_color( &my_color, 1, 1, 1 );
0x0EC4	0x440FC000  ADD.L	R0, SP, #0
0x0EC8	0x64300001  LDK.L	R3, #1
0x0ECC	0x64200001  LDK.L	R2, #1
0x0ED0	0x64100001  LDK.L	R1, #1
0x0ED4	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 43 :: 		matrixrgb_scroll_text_left( "Matrix", my_color, 20, 10 );
0x0ED8	0x64000826  LDK.L	R0, #?lstr8_MatrixRGB_FT90+0
0x0EDC	0x6420000A  LDK.L	R2, #10
0x0EE0	0x64100014  LDK.L	R1, #20
0x0EE4	0x45FFC042  SUB.L	SP, SP, #4
0x0EE8	0x45EFC040  ADD.L	R30, SP, #4
0x0EEC	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0EF0	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0EF4	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 44 :: 		matrixrgb_set_color( &my_color, 1, 0, 0 );
0x0EF8	0x440FC000  ADD.L	R0, SP, #0
0x0EFC	0x64300000  LDK.L	R3, #0
0x0F00	0x64200000  LDK.L	R2, #0
0x0F04	0x64100001  LDK.L	R1, #1
0x0F08	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 45 :: 		matrixrgb_scroll_text_left( "R", my_color, 20, 1 );
0x0F0C	0x6400082D  LDK.L	R0, #?lstr9_MatrixRGB_FT90+0
0x0F10	0x64200001  LDK.L	R2, #1
0x0F14	0x64100014  LDK.L	R1, #20
0x0F18	0x45FFC042  SUB.L	SP, SP, #4
0x0F1C	0x45EFC040  ADD.L	R30, SP, #4
0x0F20	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0F24	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0F28	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 46 :: 		matrixrgb_set_color( &my_color, 0, 1, 0 );
0x0F2C	0x440FC000  ADD.L	R0, SP, #0
0x0F30	0x64300000  LDK.L	R3, #0
0x0F34	0x64200001  LDK.L	R2, #1
0x0F38	0x64100000  LDK.L	R1, #0
0x0F3C	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 47 :: 		matrixrgb_scroll_text_left( "G", my_color, 20, 1 );
0x0F40	0x6400082F  LDK.L	R0, #?lstr10_MatrixRGB_FT90+0
0x0F44	0x64200001  LDK.L	R2, #1
0x0F48	0x64100014  LDK.L	R1, #20
0x0F4C	0x45FFC042  SUB.L	SP, SP, #4
0x0F50	0x45EFC040  ADD.L	R30, SP, #4
0x0F54	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0F58	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0F5C	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 48 :: 		matrixrgb_set_color( &my_color, 0, 0, 1 );
0x0F60	0x440FC000  ADD.L	R0, SP, #0
0x0F64	0x64300001  LDK.L	R3, #1
0x0F68	0x64200000  LDK.L	R2, #0
0x0F6C	0x64100000  LDK.L	R1, #0
0x0F70	0x003402AF  CALL	_matrixrgb_set_color+0
;MatrixRGB_FT90.c, 49 :: 		matrixrgb_scroll_text_left( "B", my_color, 20, 1 );
0x0F74	0x64000831  LDK.L	R0, #?lstr11_MatrixRGB_FT90+0
0x0F78	0x64200001  LDK.L	R2, #1
0x0F7C	0x64100014  LDK.L	R1, #20
0x0F80	0x45FFC042  SUB.L	SP, SP, #4
0x0F84	0x45EFC040  ADD.L	R30, SP, #4
0x0F88	0xF1FF4045  MEMCPY.B	SP, R30, #4
0x0F8C	0x00340262  CALL	_matrixrgb_scroll_text_left+0
0x0F90	0x45FFC040  ADD.L	SP, SP, #4
;MatrixRGB_FT90.c, 50 :: 		}
0x0F94	0x003003B1  JMP	L_main0
;MatrixRGB_FT90.c, 51 :: 		}
L_end_main:
L__main_end_loop:
0x0F98	0x003003E6  JMP	L__main_end_loop
; end of _main
_system_setup:
;MatrixRGB_FT90.c, 53 :: 		void system_setup( uint8_t width, uint8_t height )
; height start address is: 4 (R1)
; width start address is: 0 (R0)
0x0AF0	0x44C0500D  BEXTU.L	R12, R0, #256
0x0AF4	0x44D0D00D  BEXTU.L	R13, R1, #256
; height end address is: 4 (R1)
; width end address is: 0 (R0)
; width start address is: 48 (R12)
; height start address is: 52 (R13)
;MatrixRGB_FT90.c, 56 :: 		GPIO_Digital_Input(&GPIO_PORT_00_07, _GPIO_PINMASK_3 );
0x0AF8	0x64100008  LDK.L	R1, #8
0x0AFC	0x64010084  LDK.L	R0, #GPIO_PORT_00_07+0
0x0B00	0x0034024F  CALL	_GPIO_Digital_Input+0
;MatrixRGB_FT90.c, 57 :: 		GPIO_Digital_Output(&GPIO_PORT_00_07, _GPIO_PINMASK_1 );
0x0B04	0x64100002  LDK.L	R1, #2
0x0B08	0x64010084  LDK.L	R0, #GPIO_PORT_00_07+0
0x0B0C	0x003401E6  CALL	_GPIO_Digital_Output+0
;MatrixRGB_FT90.c, 58 :: 		GPIO_Digital_Output(&GPIO_PORT_24_31, _GPIO_PINMASK_4 );
0x0B10	0x64100010  LDK.L	R1, #16
0x0B14	0x64010087  LDK.L	R0, #GPIO_PORT_24_31+0
0x0B18	0x003401E6  CALL	_GPIO_Digital_Output+0
;MatrixRGB_FT90.c, 63 :: 		_SPI_CFG_FIFO_DISABLE, _SPI_SS_LINE_NONE );
0x0B1C	0x64200000  LDK.L	R2, #0
0x0B20	0x64100066  LDK.L	R1, #102
;MatrixRGB_FT90.c, 61 :: 		SPIM1_Init_Advanced( _SPI_MASTER_CLK_RATIO_2, _SPI_CFG_PHASE_CAPTURE_FALLING |
0x0B24	0x64000010  LDK.L	R0, #16
;MatrixRGB_FT90.c, 63 :: 		_SPI_CFG_FIFO_DISABLE, _SPI_SS_LINE_NONE );
0x0B28	0x00340205  CALL	_SPIM1_Init_Advanced+0
;MatrixRGB_FT90.c, 65 :: 		MATRIXRGB_RST = 0;        //Reset slave ( toggle )
0x0B2C	0xC4210084  LDA.L	R2, GPIO_PIN1_bit+0
0x0B30	0x4421421B  BINS.L	R2, R2, #BitPos(GPIO_PIN1_bit+0)=0
0x0B34	0xBC210084  STA.L	GPIO_PIN1_bit+0, R2
;MatrixRGB_FT90.c, 66 :: 		MATRIXRGB_RST = 1;
0x0B38	0xC4210084  LDA.L	R2, GPIO_PIN1_bit+0
0x0B3C	0x4421621B  BINS.L	R2, R2, #BitPos(GPIO_PIN1_bit+0)=1
0x0B40	0xBC210084  STA.L	GPIO_PIN1_bit+0, R2
;MatrixRGB_FT90.c, 67 :: 		Delay_ms(200);
0x0B44	0x6DC002D7  LPM.L	R28, $+24
0x0B48	0x44004000  NOP	
L_system_setup2:
0x0B4C	0x45CE4012  SUB.L	R28, R28, #1
0x0B50	0x5DEE4002  CMP.L	R28, #0
0x0B54	0x002002D3  JMPC	R30, Z, #0, L_system_setup2
0x0B58	0x003002D8  JMP	$+8
0x0B5C	0x0065B9A9  	#6666665
;MatrixRGB_FT90.c, 69 :: 		matrixrgb_init( width, height );
0x0B60	0x4416D00D  BEXTU.L	R1, R13, #256
; height end address is: 52 (R13)
0x0B64	0x4406500D  BEXTU.L	R0, R12, #256
; width end address is: 48 (R12)
0x0B68	0x003401EB  CALL	_matrixrgb_init+0
;MatrixRGB_FT90.c, 70 :: 		Delay_ms(200);
0x0B6C	0x6DC002E1  LPM.L	R28, $+24
0x0B70	0x44004000  NOP	
L_system_setup4:
0x0B74	0x45CE4012  SUB.L	R28, R28, #1
0x0B78	0x5DEE4002  CMP.L	R28, #0
0x0B7C	0x002002DD  JMPC	R30, Z, #0, L_system_setup4
0x0B80	0x003002E2  JMP	$+8
0x0B84	0x0065B9A9  	#6666665
;MatrixRGB_FT90.c, 72 :: 		}
L_end_system_setup:
0x0B88	0xA0000000  RETURN	
; end of _system_setup
_GPIO_Digital_Input:
;__Lib_GPIO.c, 481 :: 		
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pinMask start address is: 4 (R1)
;__Lib_GPIO.c, 483 :: 		
0x093C	0x6C300253  LPM.L	R3, $+16
0x0940	0x64200000  LDK.L	R2, #0
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0944	0x003400E4  CALL	_GPIO_Config+0
;__Lib_GPIO.c, 484 :: 		
L_end_GPIO_Digital_Input:
0x0948	0xA0000000  RETURN	
0x094C	0x00100215  	#1049109
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO.c, 378 :: 		
; config start address is: 12 (R3)
; dir start address is: 8 (R2)
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0390	0x95D00004  LINK	LR, #4
; config end address is: 12 (R3)
; dir end address is: 8 (R2)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pinMask start address is: 4 (R1)
; dir start address is: 8 (R2)
; config start address is: 12 (R3)
;__Lib_GPIO.c, 389 :: 		
; configLow start address is: 20 (R5)
0x0394	0x4451C00D  BEXTU.L	R5, R3, #0
;__Lib_GPIO.c, 390 :: 		
0x0398	0x4441C109  LSHR.L	R4, R3, #16
; config end address is: 12 (R3)
; configHigh start address is: 24 (R6)
0x039C	0x4462400D  BEXTU.L	R6, R4, #0
;__Lib_GPIO.c, 392 :: 		
0x03A0	0x6441008C  LDK.L	R4, #GPIO_PORT_64_66+0
0x03A4	0x5DE00042  CMP.L	R0, R4
0x03A8	0x002000ED  JMPC	R30, Z, #0, L_GPIO_Config22
;__Lib_GPIO.c, 394 :: 		
; portNumOfPins start address is: 12 (R3)
0x03AC	0x64300003  LDK.L	R3, #3
;__Lib_GPIO.c, 395 :: 		
; portNumOfPins end address is: 12 (R3)
0x03B0	0x003000EE  JMP	L_GPIO_Config23
L_GPIO_Config22:
;__Lib_GPIO.c, 398 :: 		
; portNumOfPins start address is: 12 (R3)
0x03B4	0x64300008  LDK.L	R3, #8
; portNumOfPins end address is: 12 (R3)
;__Lib_GPIO.c, 399 :: 		
L_GPIO_Config23:
;__Lib_GPIO.c, 402 :: 		
; portNumOfPins start address is: 12 (R3)
; clearMask start address is: 32 (R8)
0x03B8	0x64800000  LDK.L	R8, #0
;__Lib_GPIO.c, 403 :: 		
; setMask start address is: 28 (R7)
0x03BC	0x64700000  LDK.L	R7, #0
;__Lib_GPIO.c, 405 :: 		
0x03C0	0x64410003  LDK.L	R4, #65539
0x03C4	0x44428044  AND.L	R4, R5, R4
0x03C8	0x5DE24002  CMP.L	R4, #0
0x03CC	0x002800F9  JMPC	R30, Z, #1, L__GPIO_Config53
;__Lib_GPIO.c, 407 :: 		
0x03D0	0x44844015  OR.L	R8, R8, #1
;__Lib_GPIO.c, 408 :: 		
0x03D4	0x44434014  AND.L	R4, R6, #1
0x03D8	0x4442400D  BEXTU.L	R4, R4, #0
0x03DC	0x44738045  OR.L	R7, R7, R4
; setMask end address is: 28 (R7)
; clearMask end address is: 32 (R8)
;__Lib_GPIO.c, 409 :: 		
0x03E0	0x003000F9  JMP	L_GPIO_Config24
L__GPIO_Config53:
;__Lib_GPIO.c, 405 :: 		
;__Lib_GPIO.c, 409 :: 		
L_GPIO_Config24:
;__Lib_GPIO.c, 411 :: 		
; setMask start address is: 28 (R7)
; clearMask start address is: 32 (R8)
0x03E4	0x6442000C  LDK.L	R4, #131084
0x03E8	0x44428044  AND.L	R4, R5, R4
0x03EC	0x5DE24002  CMP.L	R4, #0
0x03F0	0x00280102  JMPC	R30, Z, #1, L__GPIO_Config54
;__Lib_GPIO.c, 413 :: 		
0x03F4	0x44844025  OR.L	R8, R8, #2
;__Lib_GPIO.c, 414 :: 		
0x03F8	0x44434024  AND.L	R4, R6, #2
0x03FC	0x4442400D  BEXTU.L	R4, R4, #0
0x0400	0x44738045  OR.L	R7, R7, R4
; setMask end address is: 28 (R7)
; clearMask end address is: 32 (R8)
;__Lib_GPIO.c, 415 :: 		
0x0404	0x00300102  JMP	L_GPIO_Config25
L__GPIO_Config54:
;__Lib_GPIO.c, 411 :: 		
;__Lib_GPIO.c, 415 :: 		
L_GPIO_Config25:
;__Lib_GPIO.c, 417 :: 		
; setMask start address is: 28 (R7)
; clearMask start address is: 32 (R8)
0x0408	0x6C40015E  LPM.L	R4, $+368
0x040C	0x44428044  AND.L	R4, R5, R4
0x0410	0x5DE24002  CMP.L	R4, #0
0x0414	0x0028010E  JMPC	R30, Z, #1, L__GPIO_Config55
;__Lib_GPIO.c, 419 :: 		
0x0418	0x448440C5  OR.L	R8, R8, #12
;__Lib_GPIO.c, 420 :: 		
0x041C	0x444340C4  AND.L	R4, R6, #12
0x0420	0x4442400D  BEXTU.L	R4, R4, #0
0x0424	0x44738045  OR.L	R7, R7, R4
; setMask end address is: 28 (R7)
; clearMask end address is: 32 (R8)
0x0428	0xB5F38000  STI.L	SP, #0, R7
0x042C	0x44744000  MOVE.L	R7, R8
0x0430	0xAC8F8000  LDI.L	R8, SP, #0
;__Lib_GPIO.c, 421 :: 		
0x0434	0x00300111  JMP	L_GPIO_Config26
L__GPIO_Config55:
;__Lib_GPIO.c, 417 :: 		
0x0438	0xB5F40000  STI.L	SP, #0, R8
0x043C	0x4483C000  MOVE.L	R8, R7
0x0440	0xAC7F8000  LDI.L	R7, SP, #0
;__Lib_GPIO.c, 421 :: 		
L_GPIO_Config26:
;__Lib_GPIO.c, 423 :: 		
; setMask start address is: 32 (R8)
; clearMask start address is: 28 (R7)
0x0444	0x6C40015F  LPM.L	R4, $+312
0x0448	0x44428044  AND.L	R4, R5, R4
; configLow end address is: 20 (R5)
0x044C	0x5DE24002  CMP.L	R4, #0
0x0450	0x0028011A  JMPC	R30, Z, #1, L__GPIO_Config56
;__Lib_GPIO.c, 425 :: 		
0x0454	0x4473C305  OR.L	R7, R7, #48
;__Lib_GPIO.c, 426 :: 		
0x0458	0x44434304  AND.L	R4, R6, #48
0x045C	0x4442400D  BEXTU.L	R4, R4, #0
; configHigh end address is: 24 (R6)
0x0460	0x44840045  OR.L	R8, R8, R4
; clearMask end address is: 28 (R7)
; setMask end address is: 32 (R8)
;__Lib_GPIO.c, 427 :: 		
0x0464	0x0030011A  JMP	L_GPIO_Config27
L__GPIO_Config56:
;__Lib_GPIO.c, 423 :: 		
;__Lib_GPIO.c, 427 :: 		
L_GPIO_Config27:
;__Lib_GPIO.c, 429 :: 		
; setMask start address is: 32 (R8)
; clearMask start address is: 28 (R7)
0x0468	0x64410084  LDK.L	R4, #GPIO_VAL_00_31+0
0x046C	0x44400042  SUB.L	R4, R0, R4
0x0470	0x44524038  ASHL.L	R5, R4, #3
0x0474	0x6441001C  LDK.L	R4, #PIN_00_03+0
0x0478	0x44420050  ADD.L	R4, R4, R5
; regByteAddr start address is: 16 (R4)
;__Lib_GPIO.c, 431 :: 		
; tmpPinMask start address is: 44 (R11)
0x047C	0x44B0D00D  BEXTU.L	R11, R1, #256
;__Lib_GPIO.c, 432 :: 		
; cnt start address is: 40 (R10)
0x0480	0x64A00000  LDK.L	R10, #0
; portNumOfPins end address is: 12 (R3)
; regByteAddr end address is: 16 (R4)
; dir end address is: 8 (R2)
; pinMask end address is: 4 (R1)
; tmpPinMask end address is: 44 (R11)
; cnt end address is: 40 (R10)
; port end address is: 0 (R0)
0x0484	0x4491D00D  BEXTU.L	R9, R3, #256
0x0488	0x44324000  MOVE.L	R3, R4
L_GPIO_Config28:
; cnt start address is: 40 (R10)
; regByteAddr start address is: 12 (R3)
; tmpPinMask start address is: 44 (R11)
; regByteAddr start address is: 12 (R3)
; regByteAddr end address is: 12 (R3)
; clearMask start address is: 28 (R7)
; clearMask end address is: 28 (R7)
; setMask start address is: 32 (R8)
; setMask end address is: 32 (R8)
; portNumOfPins start address is: 36 (R9)
; dir start address is: 8 (R2)
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x048C	0x5DE50092  CMP.L	R10, R9
0x0490	0x00600138  JMPC	R30, C, #0, L_GPIO_Config29
; regByteAddr end address is: 12 (R3)
; clearMask end address is: 28 (R7)
; setMask end address is: 32 (R8)
;__Lib_GPIO.c, 434 :: 		
; setMask start address is: 32 (R8)
; clearMask start address is: 28 (R7)
; regByteAddr start address is: 12 (R3)
0x0494	0x4445C014  AND.L	R4, R11, #1
0x0498	0x5DE24002  CMP.L	R4, #0
0x049C	0x00280135  JMPC	R30, Z, #1, L_GPIO_Config31
;__Lib_GPIO.c, 436 :: 		
0x04A0	0x445180A0  ADD.L	R5, R3, R10
0x04A4	0xA8428000  LDI.B	R4, R5, #0
0x04A8	0x444243F4  AND.L	R4, R4, #63
0x04AC	0xB0520000  STI.B	R5, #0, R4
;__Lib_GPIO.c, 437 :: 		
0x04B0	0x446180A0  ADD.L	R6, R3, R10
0x04B4	0x4453FFF6  XOR.L	R5, R7, #-1
0x04B8	0xA8430000  LDI.B	R4, R6, #0
0x04BC	0x44420054  AND.L	R4, R4, R5
0x04C0	0xB0620000  STI.B	R6, #0, R4
;__Lib_GPIO.c, 438 :: 		
0x04C4	0x445180A0  ADD.L	R5, R3, R10
0x04C8	0xA8428000  LDI.B	R4, R5, #0
0x04CC	0x44420085  OR.L	R4, R4, R8
0x04D0	0xB0520000  STI.B	R5, #0, R4
;__Lib_GPIO.c, 439 :: 		
L_GPIO_Config31:
;__Lib_GPIO.c, 440 :: 		
0x04D4	0x44B5C019  LSHR.L	R11, R11, #1
;__Lib_GPIO.c, 432 :: 		
0x04D8	0x44A54010  ADD.L	R10, R10, #1
;__Lib_GPIO.c, 441 :: 		
; regByteAddr end address is: 12 (R3)
; clearMask end address is: 28 (R7)
; setMask end address is: 32 (R8)
; portNumOfPins end address is: 36 (R9)
; tmpPinMask end address is: 44 (R11)
; cnt end address is: 40 (R10)
0x04DC	0x00300123  JMP	L_GPIO_Config28
L_GPIO_Config29:
;__Lib_GPIO.c, 447 :: 		
; clearMask start address is: 32 (R8)
0x04E0	0x64800000  LDK.L	R8, #0
;__Lib_GPIO.c, 448 :: 		
; setMask start address is: 28 (R7)
0x04E4	0x64700000  LDK.L	R7, #0
;__Lib_GPIO.c, 450 :: 		
; tmpPinMask start address is: 12 (R3)
0x04E8	0x4430D00D  BEXTU.L	R3, R1, #256
; pinMask end address is: 4 (R1)
;__Lib_GPIO.c, 451 :: 		
; cnt start address is: 4 (R1)
0x04EC	0x64100000  LDK.L	R1, #0
; dir end address is: 8 (R2)
; cnt end address is: 4 (R1)
; port end address is: 0 (R0)
; setMask end address is: 28 (R7)
; clearMask end address is: 32 (R8)
; tmpPinMask end address is: 12 (R3)
0x04F0	0xB5F08000  STI.L	SP, #0, R1
0x04F4	0x4411500D  BEXTU.L	R1, R2, #256
0x04F8	0xAC2F8000  LDI.L	R2, SP, #0
L_GPIO_Config32:
; cnt start address is: 8 (R2)
; dir start address is: 4 (R1)
; tmpPinMask start address is: 12 (R3)
; setMask start address is: 28 (R7)
; clearMask start address is: 32 (R8)
; port start address is: 0 (R0)
; dir start address is: 4 (R1)
; dir end address is: 4 (R1)
0x04FC	0x5DE14202  CMP.L	R2, #32
0x0500	0x0060014E  JMPC	R30, C, #0, L_GPIO_Config33
; dir end address is: 4 (R1)
;__Lib_GPIO.c, 453 :: 		
; dir start address is: 4 (R1)
0x0504	0x4441C014  AND.L	R4, R3, #1
0x0508	0x5DE24002  CMP.L	R4, #0
0x050C	0x0028014B  JMPC	R30, Z, #1, L__GPIO_Config57
;__Lib_GPIO.c, 455 :: 		
0x0510	0x6440000C  LDK.L	R4, #12
0x0514	0x44420028  ASHL.L	R4, R4, R2
0x0518	0x44840045  OR.L	R8, R8, R4
;__Lib_GPIO.c, 456 :: 		
0x051C	0x4440D00D  BEXTU.L	R4, R1, #256
0x0520	0x44420028  ASHL.L	R4, R4, R2
0x0524	0x44738045  OR.L	R7, R7, R4
; setMask end address is: 28 (R7)
; clearMask end address is: 32 (R8)
;__Lib_GPIO.c, 457 :: 		
0x0528	0x0030014B  JMP	L_GPIO_Config35
L__GPIO_Config57:
;__Lib_GPIO.c, 453 :: 		
;__Lib_GPIO.c, 457 :: 		
L_GPIO_Config35:
;__Lib_GPIO.c, 458 :: 		
; setMask start address is: 28 (R7)
; clearMask start address is: 32 (R8)
0x052C	0x4431C019  LSHR.L	R3, R3, #1
;__Lib_GPIO.c, 451 :: 		
0x0530	0x44214040  ADD.L	R2, R2, #4
;__Lib_GPIO.c, 459 :: 		
; dir end address is: 4 (R1)
; tmpPinMask end address is: 12 (R3)
; cnt end address is: 8 (R2)
0x0534	0x0030013F  JMP	L_GPIO_Config32
L_GPIO_Config33:
;__Lib_GPIO.c, 461 :: 		
0x0538	0x64410084  LDK.L	R4, #GPIO_VAL_00_31+0
0x053C	0x44400042  SUB.L	R4, R0, R4
; port end address is: 0 (R0)
0x0540	0x44524028  ASHL.L	R5, R4, #2
0x0544	0x64410060  LDK.L	R4, #GPIO_CFG_00_07+0
0x0548	0x44620050  ADD.L	R6, R4, R5
; regLongAddr start address is: 0 (R0)
0x054C	0x44034000  MOVE.L	R0, R6
;__Lib_GPIO.c, 462 :: 		
0x0550	0x44547FF6  XOR.L	R5, R8, #-1
; clearMask end address is: 32 (R8)
0x0554	0xAC430000  LDI.L	R4, R6, #0
0x0558	0x44420054  AND.L	R4, R4, R5
0x055C	0xB4620000  STI.L	R6, #0, R4
;__Lib_GPIO.c, 463 :: 		
0x0560	0xAC400000  LDI.L	R4, R0, #0
0x0564	0x44420075  OR.L	R4, R4, R7
; setMask end address is: 28 (R7)
0x0568	0xB4020000  STI.L	R0, #0, R4
; regLongAddr end address is: 0 (R0)
;__Lib_GPIO.c, 465 :: 		
0x056C	0x640000FF  LDK.L	R0, #255
;__Lib_GPIO.c, 466 :: 		
L_end_GPIO_Config:
0x0570	0x99D00000  UNLINK	LR
0x0574	0xA0000000  RETURN	
0x0578	0x000C00F0  	#786672
0x057C	0x00300F00  	#3149568
; end of _GPIO_Config
_GPIO_Digital_Output:
;__Lib_GPIO.c, 472 :: 		
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pinMask start address is: 4 (R1)
;__Lib_GPIO.c, 474 :: 		
0x0798	0x6C3001EA  LPM.L	R3, $+16
0x079C	0x64200004  LDK.L	R2, #4
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
0x07A0	0x003400E4  CALL	_GPIO_Config+0
;__Lib_GPIO.c, 475 :: 		
L_end_GPIO_Digital_Output:
0x07A4	0xA0000000  RETURN	
0x07A8	0x00100215  	#1049109
; end of _GPIO_Digital_Output
_SPIM1_Init_Advanced:
;__Lib_SPI.c, 342 :: 		
; ssLine start address is: 8 (R2)
; config start address is: 4 (R1)
; masterClkRatio start address is: 0 (R0)
; ssLine end address is: 8 (R2)
; config end address is: 4 (R1)
; masterClkRatio end address is: 0 (R0)
; masterClkRatio start address is: 0 (R0)
; config start address is: 4 (R1)
; ssLine start address is: 8 (R2)
;__Lib_SPI.c, 345 :: 		
0x0814	0x643FFFFF  LDK.L	R3, #_SPIM1_Write_Bytes+0
0x0818	0xBC3008AC  STA.L	_SPIM_WrBytes_Ptr+0, R3
;__Lib_SPI.c, 346 :: 		
0x081C	0x64300144  LDK.L	R3, #_SPIM1_Write+0
0x0820	0xBC30089C  STA.L	_SPIM_Wr_Ptr+0, R3
;__Lib_SPI.c, 347 :: 		
0x0824	0x643FFFFF  LDK.L	R3, #_SPIM1_Read_Bytes+0
0x0828	0xBC3008B4  STA.L	_SPIM_RdBytes_Ptr+0, R3
;__Lib_SPI.c, 348 :: 		
0x082C	0x643FFFFF  LDK.L	R3, #_SPIM1_Read+0
0x0830	0xBC3008A4  STA.L	_SPIM_Rd_Ptr+0, R3
;__Lib_SPI.c, 349 :: 		
0x0834	0x64300170  LDK.L	R3, #_SPIM1_Enable_SS+0
0x0838	0xBC3008B8  STA.L	_SPIM_EnSS_Ptr+0, R3
;__Lib_SPI.c, 350 :: 		
0x083C	0x64300160  LDK.L	R3, #_SPIM1_Disable_SS+0
0x0840	0xBC3008BC  STA.L	_SPIM_DisSS_Ptr+0, R3
;__Lib_SPI.c, 352 :: 		
0x0844	0x643102A0  LDK.L	R3, #SPIM_CNTL+0
0x0848	0xBC3008C0  STA.L	__Lib_SPI_spiBase+0, R3
;__Lib_SPI.c, 353 :: 		
0x084C	0x64300001  LDK.L	R3, #1
0x0850	0xB83008C4  STA.B	__Lib_SPI_spiConf+0, R3
;__Lib_SPI.c, 354 :: 		
0x0854	0x64300001  LDK.L	R3, #1
0x0858	0xB83008C6  STA.B	__Lib_SPI_spiConf+2, R3
;__Lib_SPI.c, 355 :: 		
0x085C	0xB80008C8  STA.B	__Lib_SPI_spiConf+4, R0
; masterClkRatio end address is: 0 (R0)
;__Lib_SPI.c, 356 :: 		
0x0860	0x4430C084  AND.L	R3, R1, #8
0x0864	0x5BE1C002  CMP.S	R3, #0
0x0868	0x0028021D  JMPC	R30, Z, #1, L_SPIM1_Init_Advanced0
; ?FLOC___SPIM1_Init_Advanced?T8 start address is: 0 (R0)
0x086C	0x64000001  LDK.L	R0, #1
; ?FLOC___SPIM1_Init_Advanced?T8 end address is: 0 (R0)
0x0870	0x0030021E  JMP	L_SPIM1_Init_Advanced1
L_SPIM1_Init_Advanced0:
; ?FLOC___SPIM1_Init_Advanced?T8 start address is: 0 (R0)
0x0874	0x64000000  LDK.L	R0, #0
; ?FLOC___SPIM1_Init_Advanced?T8 end address is: 0 (R0)
L_SPIM1_Init_Advanced1:
; ?FLOC___SPIM1_Init_Advanced?T8 start address is: 0 (R0)
0x0878	0xB80008C9  STA.B	__Lib_SPI_spiConf+5, R0
; ?FLOC___SPIM1_Init_Advanced?T8 end address is: 0 (R0)
;__Lib_SPI.c, 357 :: 		
0x087C	0x4430C014  AND.L	R3, R1, #1
0x0880	0x5BE1C002  CMP.S	R3, #0
0x0884	0x00280224  JMPC	R30, Z, #1, L_SPIM1_Init_Advanced2
; ?FLOC___SPIM1_Init_Advanced?T10 start address is: 0 (R0)
0x0888	0x64000001  LDK.L	R0, #1
; ?FLOC___SPIM1_Init_Advanced?T10 end address is: 0 (R0)
0x088C	0x00300225  JMP	L_SPIM1_Init_Advanced3
L_SPIM1_Init_Advanced2:
; ?FLOC___SPIM1_Init_Advanced?T10 start address is: 0 (R0)
0x0890	0x64000000  LDK.L	R0, #0
; ?FLOC___SPIM1_Init_Advanced?T10 end address is: 0 (R0)
L_SPIM1_Init_Advanced3:
; ?FLOC___SPIM1_Init_Advanced?T10 start address is: 0 (R0)
0x0894	0xB80008CA  STA.B	__Lib_SPI_spiConf+6, R0
; ?FLOC___SPIM1_Init_Advanced?T10 end address is: 0 (R0)
;__Lib_SPI.c, 358 :: 		
0x0898	0x4430C104  AND.L	R3, R1, #16
0x089C	0x5BE1C002  CMP.S	R3, #0
0x08A0	0x0028022B  JMPC	R30, Z, #1, L_SPIM1_Init_Advanced4
; ?FLOC___SPIM1_Init_Advanced?T12 start address is: 0 (R0)
0x08A4	0x64000001  LDK.L	R0, #1
; ?FLOC___SPIM1_Init_Advanced?T12 end address is: 0 (R0)
0x08A8	0x0030022C  JMP	L_SPIM1_Init_Advanced5
L_SPIM1_Init_Advanced4:
; ?FLOC___SPIM1_Init_Advanced?T12 start address is: 0 (R0)
0x08AC	0x64000000  LDK.L	R0, #0
; ?FLOC___SPIM1_Init_Advanced?T12 end address is: 0 (R0)
L_SPIM1_Init_Advanced5:
; ?FLOC___SPIM1_Init_Advanced?T12 start address is: 0 (R0)
0x08B0	0xB80008CB  STA.B	__Lib_SPI_spiConf+7, R0
; ?FLOC___SPIM1_Init_Advanced?T12 end address is: 0 (R0)
;__Lib_SPI.c, 359 :: 		
0x08B4	0x4430C804  AND.L	R3, R1, #128
0x08B8	0x5BE1C002  CMP.S	R3, #0
0x08BC	0x00280232  JMPC	R30, Z, #1, L_SPIM1_Init_Advanced6
; ?FLOC___SPIM1_Init_Advanced?T14 start address is: 0 (R0)
0x08C0	0x64000001  LDK.L	R0, #1
; ?FLOC___SPIM1_Init_Advanced?T14 end address is: 0 (R0)
0x08C4	0x00300233  JMP	L_SPIM1_Init_Advanced7
L_SPIM1_Init_Advanced6:
; ?FLOC___SPIM1_Init_Advanced?T14 start address is: 0 (R0)
0x08C8	0x64000000  LDK.L	R0, #0
; ?FLOC___SPIM1_Init_Advanced?T14 end address is: 0 (R0)
L_SPIM1_Init_Advanced7:
; ?FLOC___SPIM1_Init_Advanced?T14 start address is: 0 (R0)
0x08CC	0xB80008CC  STA.B	__Lib_SPI_spiConf+8, R0
; ?FLOC___SPIM1_Init_Advanced?T14 end address is: 0 (R0)
;__Lib_SPI.c, 360 :: 		
0x08D0	0x64300200  LDK.L	R3, #512
0x08D4	0x44308034  AND.L	R3, R1, R3
; config end address is: 4 (R1)
0x08D8	0x5BE1C002  CMP.S	R3, #0
0x08DC	0x0028023A  JMPC	R30, Z, #1, L_SPIM1_Init_Advanced8
; ?FLOC___SPIM1_Init_Advanced?T16 start address is: 0 (R0)
0x08E0	0x64000001  LDK.L	R0, #1
; ?FLOC___SPIM1_Init_Advanced?T16 end address is: 0 (R0)
0x08E4	0x0030023B  JMP	L_SPIM1_Init_Advanced9
L_SPIM1_Init_Advanced8:
; ?FLOC___SPIM1_Init_Advanced?T16 start address is: 0 (R0)
0x08E8	0x64000000  LDK.L	R0, #0
; ?FLOC___SPIM1_Init_Advanced?T16 end address is: 0 (R0)
L_SPIM1_Init_Advanced9:
; ?FLOC___SPIM1_Init_Advanced?T16 start address is: 0 (R0)
0x08EC	0xB80008CD  STA.B	__Lib_SPI_spiConf+9, R0
; ?FLOC___SPIM1_Init_Advanced?T16 end address is: 0 (R0)
;__Lib_SPI.c, 363 :: 		
0x08F0	0x64300000  LDK.L	R3, #0
0x08F4	0xB83008C7  STA.B	__Lib_SPI_spiConf+3, R3
;__Lib_SPI.c, 364 :: 		
0x08F8	0x64300000  LDK.L	R3, #0
0x08FC	0xB83008CE  STA.B	__Lib_SPI_spiConf+10, R3
;__Lib_SPI.c, 365 :: 		
0x0900	0x64300000  LDK.L	R3, #0
0x0904	0xB83008CF  STA.B	__Lib_SPI_spiConf+11, R3
;__Lib_SPI.c, 366 :: 		
0x0908	0x64300000  LDK.L	R3, #0
0x090C	0xB83008D0  STA.B	__Lib_SPI_spiConf+12, R3
;__Lib_SPI.c, 367 :: 		
0x0910	0x64300000  LDK.L	R3, #0
0x0914	0xB83008D1  STA.B	__Lib_SPI_spiConf+13, R3
;__Lib_SPI.c, 369 :: 		
0x0918	0xC43008C0  LDA.L	R3, __Lib_SPI_spiBase+0
0x091C	0x4411400D  BEXTU.L	R1, R2, #0
; ssLine end address is: 8 (R2)
0x0920	0x4401C000  MOVE.L	R0, R3
0x0924	0x0034007C  CALL	__Lib_SPI_SPIx_Pad_Init+0
;__Lib_SPI.c, 370 :: 		
0x0928	0xC43008C0  LDA.L	R3, __Lib_SPI_spiBase+0
0x092C	0x641008C4  LDK.L	R1, #__Lib_SPI_spiConf+0
0x0930	0x4401C000  MOVE.L	R0, R3
0x0934	0x0034016A  CALL	__Lib_SPI_SPIx_Init_Advanced+0
;__Lib_SPI.c, 371 :: 		
L_end_SPIM1_Init_Advanced:
0x0938	0xA0000000  RETURN	
; end of _SPIM1_Init_Advanced
__Lib_SPI_SPIx_Pad_Init:
;__Lib_SPI.c, 646 :: 		
; ssLine start address is: 4 (R1)
; spiBase start address is: 0 (R0)
0x01F0	0x95D00004  LINK	LR, #4
; ssLine end address is: 4 (R1)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
; ssLine start address is: 4 (R1)
;__Lib_SPI.c, 648 :: 		
0x01F4	0x642102A0  LDK.L	R2, #SPIM_CNTL+0
0x01F8	0x5DE00022  CMP.L	R0, R2
0x01FC	0x002000C8  JMPC	R30, Z, #0, L___Lib_SPI_SPIx_Pad_Init10
; spiBase end address is: 0 (R0)
;__Lib_SPI.c, 653 :: 		
0x0200	0xC4210008  LDA.L	R2, CLKCFG+0
0x0204	0x44214805  OR.L	R2, R2, #128
0x0208	0xBC210008  STA.L	CLKCFG+0, R2
;__Lib_SPI.c, 655 :: 		
0x020C	0xC4310034  LDA.L	R3, PIN_24_27+0
0x0210	0x6C2000DC  LPM.L	R2, $+352
0x0214	0x44218024  AND.L	R2, R3, R2
0x0218	0xBC210034  STA.L	PIN_24_27+0, R2
;__Lib_SPI.c, 656 :: 		
0x021C	0xC4310034  LDA.L	R3, PIN_24_27+0
0x0220	0x6C2000DD  LPM.L	R2, $+340
0x0224	0x44218025  OR.L	R2, R3, R2
0x0228	0xBC210034  STA.L	PIN_24_27+0, R2
;__Lib_SPI.c, 658 :: 		
; setMask start address is: 0 (R0)
0x022C	0x6C0000DE  LPM.L	R0, $+332
;__Lib_SPI.c, 659 :: 		
0x0230	0x4420C014  AND.L	R2, R1, #1
0x0234	0x5BE14002  CMP.S	R2, #0
0x0238	0x00280091  JMPC	R30, Z, #1, L___Lib_SPI_SPIx_Pad_Init11
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T34 start address is: 12 (R3)
0x023C	0x64300050  LDK.L	R3, #80
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T34 end address is: 12 (R3)
0x0240	0x00300092  JMP	L___Lib_SPI_SPIx_Pad_Init12
L___Lib_SPI_SPIx_Pad_Init11:
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T34 start address is: 12 (R3)
0x0244	0x64300000  LDK.L	R3, #0
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T34 end address is: 12 (R3)
L___Lib_SPI_SPIx_Pad_Init12:
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T34 start address is: 12 (R3)
0x0248	0x44000035  OR.L	R0, R0, R3
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T34 end address is: 12 (R3)
;__Lib_SPI.c, 660 :: 		
0x024C	0x4420C014  AND.L	R2, R1, #1
0x0250	0x5BE14002  CMP.S	R2, #0
0x0254	0x00280098  JMPC	R30, Z, #1, L___Lib_SPI_SPIx_Pad_Init13
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T37 start address is: 16 (R4)
0x0258	0x6C4000DF  LPM.L	R4, $+292
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T37 end address is: 16 (R4)
0x025C	0x00300099  JMP	L___Lib_SPI_SPIx_Pad_Init14
L___Lib_SPI_SPIx_Pad_Init13:
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T37 start address is: 16 (R4)
0x0260	0x6C4000E0  LPM.L	R4, $+288
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T37 end address is: 16 (R4)
L___Lib_SPI_SPIx_Pad_Init14:
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T37 start address is: 16 (R4)
0x0264	0xAC2F8000  LDI.L	R2, SP, #0
0x0268	0x44310044  AND.L	R3, R2, R4
; ?FLOC____Lib_SPI_SPIx_Pad_Init?T37 end address is: 16 (R4)
0x026C	0xB5F18000  STI.L	SP, #0, R3
;__Lib_SPI.c, 661 :: 		
0x0270	0xC4210038  LDA.L	R2, PIN_28_31+0
0x0274	0x44210034  AND.L	R2, R2, R3
0x0278	0xBC210038  STA.L	PIN_28_31+0, R2
;__Lib_SPI.c, 662 :: 		
0x027C	0xC4210038  LDA.L	R2, PIN_28_31+0
0x0280	0x44210005  OR.L	R2, R2, R0
; setMask end address is: 0 (R0)
0x0284	0xBC210038  STA.L	PIN_28_31+0, R2
;__Lib_SPI.c, 665 :: 		
0x0288	0x4420C024  AND.L	R2, R1, #2
0x028C	0x5BE14002  CMP.S	R2, #0
0x0290	0x002800A9  JMPC	R30, Z, #1, L___Lib_SPI_SPIx_Pad_Init15
;__Lib_SPI.c, 667 :: 		
; setMask start address is: 0 (R0)
0x0294	0x64005000  LDK.L	R0, #20480
;__Lib_SPI.c, 668 :: 		
0x0298	0x642F00FF  LDK.L	R2, #-65281
0x029C	0xB5F10000  STI.L	SP, #0, R2
;__Lib_SPI.c, 669 :: 		
; setMask end address is: 0 (R0)
0x02A0	0x003000AC  JMP	L___Lib_SPI_SPIx_Pad_Init16
L___Lib_SPI_SPIx_Pad_Init15:
;__Lib_SPI.c, 672 :: 		
; setMask start address is: 0 (R0)
0x02A4	0x64000000  LDK.L	R0, #0
;__Lib_SPI.c, 673 :: 		
0x02A8	0x642FFFFF  LDK.L	R2, #-1
0x02AC	0xB5F10000  STI.L	SP, #0, R2
; setMask end address is: 0 (R0)
;__Lib_SPI.c, 674 :: 		
L___Lib_SPI_SPIx_Pad_Init16:
;__Lib_SPI.c, 675 :: 		
; setMask start address is: 0 (R0)
0x02B0	0x4420C044  AND.L	R2, R1, #4
0x02B4	0x5BE14002  CMP.S	R2, #0
0x02B8	0x002800B6  JMPC	R30, Z, #1, L___Lib_SPI_SPIx_Pad_Init145
;__Lib_SPI.c, 677 :: 		
0x02BC	0x6C2000E1  LPM.L	R2, $+200
0x02C0	0x44000025  OR.L	R0, R0, R2
;__Lib_SPI.c, 678 :: 		
0x02C4	0xAC3F8000  LDI.L	R3, SP, #0
0x02C8	0x6C2000E2  LPM.L	R2, $+192
0x02CC	0x44218024  AND.L	R2, R3, R2
0x02D0	0xB5F10000  STI.L	SP, #0, R2
; setMask end address is: 0 (R0)
;__Lib_SPI.c, 679 :: 		
0x02D4	0x003000B6  JMP	L___Lib_SPI_SPIx_Pad_Init17
L___Lib_SPI_SPIx_Pad_Init145:
;__Lib_SPI.c, 675 :: 		
;__Lib_SPI.c, 679 :: 		
L___Lib_SPI_SPIx_Pad_Init17:
;__Lib_SPI.c, 680 :: 		
; setMask start address is: 0 (R0)
0x02D8	0x4420C084  AND.L	R2, R1, #8
; ssLine end address is: 4 (R1)
0x02DC	0x5BE14002  CMP.S	R2, #0
0x02E0	0x002800C0  JMPC	R30, Z, #1, L___Lib_SPI_SPIx_Pad_Init146
;__Lib_SPI.c, 682 :: 		
0x02E4	0x6C2000DD  LPM.L	R2, $+144
0x02E8	0x44000025  OR.L	R0, R0, R2
;__Lib_SPI.c, 683 :: 		
0x02EC	0xAC3F8000  LDI.L	R3, SP, #0
0x02F0	0x6C2000DC  LPM.L	R2, $+128
0x02F4	0x44218024  AND.L	R2, R3, R2
0x02F8	0xB5F10000  STI.L	SP, #0, R2
; setMask end address is: 0 (R0)
;__Lib_SPI.c, 684 :: 		
0x02FC	0x003000C0  JMP	L___Lib_SPI_SPIx_Pad_Init18
L___Lib_SPI_SPIx_Pad_Init146:
;__Lib_SPI.c, 680 :: 		
;__Lib_SPI.c, 684 :: 		
L___Lib_SPI_SPIx_Pad_Init18:
;__Lib_SPI.c, 686 :: 		
; setMask start address is: 0 (R0)
0x0300	0xAC3F8000  LDI.L	R3, SP, #0
0x0304	0xC421003C  LDA.L	R2, PIN_32_35+0
0x0308	0x44210034  AND.L	R2, R2, R3
0x030C	0xBC21003C  STA.L	PIN_32_35+0, R2
;__Lib_SPI.c, 687 :: 		
0x0310	0xC421003C  LDA.L	R2, PIN_32_35+0
0x0314	0x44210005  OR.L	R2, R2, R0
; setMask end address is: 0 (R0)
0x0318	0xBC21003C  STA.L	PIN_32_35+0, R2
;__Lib_SPI.c, 688 :: 		
0x031C	0x003000DA  JMP	L___Lib_SPI_SPIx_Pad_Init19
L___Lib_SPI_SPIx_Pad_Init10:
;__Lib_SPI.c, 689 :: 		
; spiBase start address is: 0 (R0)
0x0320	0x642102C0  LDK.L	R2, #SPIS1_CNTL+0
0x0324	0x5DE00022  CMP.L	R0, R2
0x0328	0x002000D3  JMPC	R30, Z, #0, L___Lib_SPI_SPIx_Pad_Init20
; spiBase end address is: 0 (R0)
;__Lib_SPI.c, 692 :: 		
0x032C	0xC4210008  LDA.L	R2, CLKCFG+0
0x0330	0x44214405  OR.L	R2, R2, #64
0x0334	0xBC210008  STA.L	CLKCFG+0, R2
;__Lib_SPI.c, 693 :: 		
0x0338	0xC4310040  LDA.L	R3, PIN_36_39+0
0x033C	0x6C2000E3  LPM.L	R2, $+80
0x0340	0x44218025  OR.L	R2, R3, R2
0x0344	0xBC210040  STA.L	PIN_36_39+0, R2
;__Lib_SPI.c, 694 :: 		
0x0348	0x003000DA  JMP	L___Lib_SPI_SPIx_Pad_Init21
L___Lib_SPI_SPIx_Pad_Init20:
;__Lib_SPI.c, 698 :: 		
0x034C	0xC4210008  LDA.L	R2, CLKCFG+0
0x0350	0x44214205  OR.L	R2, R2, #32
0x0354	0xBC210008  STA.L	CLKCFG+0, R2
;__Lib_SPI.c, 699 :: 		
0x0358	0xC4310044  LDA.L	R3, PIN_40_43+0
0x035C	0x6C2000E3  LPM.L	R2, $+48
0x0360	0x44218025  OR.L	R2, R3, R2
0x0364	0xBC210044  STA.L	PIN_40_43+0, R2
;__Lib_SPI.c, 700 :: 		
L___Lib_SPI_SPIx_Pad_Init21:
L___Lib_SPI_SPIx_Pad_Init19:
;__Lib_SPI.c, 701 :: 		
L_end_SPIx_Pad_Init:
0x0368	0x99D00000  UNLINK	LR
0x036C	0xA0000000  RETURN	
0x0370	0x00FFFFFF  	#16777215
0x0374	0x50000000  	#1342177280
0x0378	0x00505000  	#5263360
0x037C	0xFF0000FF  	#-16776961
0x0380	0xFF000000  	#-16777216
0x0384	0x00500000  	#5242880
0x0388	0xFF00FFFF  	#-16711681
0x038C	0x40404040  	#1077952576
; end of __Lib_SPI_SPIx_Pad_Init
__Lib_SPI_SPIx_Init_Advanced:
;__Lib_SPI.c, 716 :: 		
; conf start address is: 4 (R1)
; spiBase start address is: 0 (R0)
; conf end address is: 4 (R1)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
; conf start address is: 4 (R1)
;__Lib_SPI.c, 718 :: 		
;__Lib_SPI.c, 720 :: 		
0x05A8	0x4420C010  ADD.L	R2, R1, #1
0x05AC	0xA8210000  LDI.B	R2, R2, #0
0x05B0	0x44414078  ASHL.L	R4, R2, #7
;__Lib_SPI.c, 721 :: 		
0x05B4	0xA8208000  LDI.B	R2, R1, #0
0x05B8	0x44214068  ASHL.L	R2, R2, #6
0x05BC	0x4431500D  BEXTU.L	R3, R2, #256
0x05C0	0x4422500D  BEXTU.L	R2, R4, #256
0x05C4	0x44410035  OR.L	R4, R2, R3
0x05C8	0x4442500D  BEXTU.L	R4, R4, #256
;__Lib_SPI.c, 722 :: 		
0x05CC	0x4420C020  ADD.L	R2, R1, #2
0x05D0	0xA8210000  LDI.B	R2, R2, #0
0x05D4	0x44214048  ASHL.L	R2, R2, #4
0x05D8	0x4421500D  BEXTU.L	R2, R2, #256
0x05DC	0x44420025  OR.L	R4, R4, R2
0x05E0	0x4442500D  BEXTU.L	R4, R4, #256
;__Lib_SPI.c, 723 :: 		
0x05E4	0x4420C050  ADD.L	R2, R1, #5
0x05E8	0xA8210000  LDI.B	R2, R2, #0
0x05EC	0x44214038  ASHL.L	R2, R2, #3
0x05F0	0x4421500D  BEXTU.L	R2, R2, #256
0x05F4	0x44420025  OR.L	R4, R4, R2
0x05F8	0x4442500D  BEXTU.L	R4, R4, #256
;__Lib_SPI.c, 724 :: 		
0x05FC	0x4420C060  ADD.L	R2, R1, #6
0x0600	0xA8210000  LDI.B	R2, R2, #0
0x0604	0x44214028  ASHL.L	R2, R2, #2
0x0608	0x4421500D  BEXTU.L	R2, R2, #256
0x060C	0x44420025  OR.L	R4, R4, R2
0x0610	0x4442500D  BEXTU.L	R4, R4, #256
; tmp start address is: 16 (R4)
;__Lib_SPI.c, 726 :: 		
0x0614	0x4420C040  ADD.L	R2, R1, #4
0x0618	0xA8210000  LDI.B	R2, R2, #0
0x061C	0x59E14102  CMP.B	R2, #16
0x0620	0x0020018F  JMPC	R30, Z, #0, L___Lib_SPI_SPIx_Init_Advanced22
;__Lib_SPI.c, 729 :: 		
0x0624	0x443041C0  ADD.L	R3, R0, #28
0x0628	0xAC218000  LDI.L	R2, R3, #0
0x062C	0x44214105  OR.L	R2, R2, #16
0x0630	0xB4310000  STI.L	R3, #0, R2
;__Lib_SPI.c, 730 :: 		
0x0634	0x4422500D  BEXTU.L	R2, R4, #256
0x0638	0x00300198  JMP	L___Lib_SPI_SPIx_Init_Advanced23
L___Lib_SPI_SPIx_Init_Advanced22:
;__Lib_SPI.c, 734 :: 		
0x063C	0x4420C040  ADD.L	R2, R1, #4
0x0640	0xA8210000  LDI.B	R2, R2, #0
0x0644	0x44220020  ADD.L	R2, R4, R2
0x0648	0x4441500D  BEXTU.L	R4, R2, #256
;__Lib_SPI.c, 735 :: 		
0x064C	0x44304140  ADD.L	R3, R0, #20
0x0650	0xAC218000  LDI.L	R2, R3, #0
0x0654	0x44217EF4  AND.L	R2, R2, #-17
0x0658	0xB4310000  STI.L	R3, #0, R2
; tmp end address is: 16 (R4)
0x065C	0x4422500D  BEXTU.L	R2, R4, #256
;__Lib_SPI.c, 736 :: 		
L___Lib_SPI_SPIx_Init_Advanced23:
;__Lib_SPI.c, 738 :: 		
; tmp start address is: 8 (R2)
0x0660	0xB4010000  STI.L	R0, #0, R2
; tmp end address is: 8 (R2)
;__Lib_SPI.c, 740 :: 		
0x0664	0x4420C020  ADD.L	R2, R1, #2
0x0668	0xA8210000  LDI.B	R2, R2, #0
0x066C	0x59E14012  CMP.B	R2, #1
0x0670	0x002001A6  JMPC	R30, Z, #0, L___Lib_SPI_SPIx_Init_Advanced149
0x0674	0x4420C070  ADD.L	R2, R1, #7
0x0678	0xA8210000  LDI.B	R2, R2, #0
0x067C	0x59E14012  CMP.B	R2, #1
0x0680	0x002001A6  JMPC	R30, Z, #0, L___Lib_SPI_SPIx_Init_Advanced148
L___Lib_SPI_SPIx_Init_Advanced147:
;__Lib_SPI.c, 742 :: 		
0x0684	0x44304040  ADD.L	R3, R0, #4
0x0688	0xAC218000  LDI.L	R2, R3, #0
0x068C	0x44214015  OR.L	R2, R2, #1
0x0690	0xB4310000  STI.L	R3, #0, R2
;__Lib_SPI.c, 743 :: 		
0x0694	0x003001AA  JMP	L___Lib_SPI_SPIx_Init_Advanced27
;__Lib_SPI.c, 740 :: 		
L___Lib_SPI_SPIx_Init_Advanced149:
L___Lib_SPI_SPIx_Init_Advanced148:
;__Lib_SPI.c, 746 :: 		
0x0698	0x44304040  ADD.L	R3, R0, #4
0x069C	0xAC218000  LDI.L	R2, R3, #0
0x06A0	0x44217FE4  AND.L	R2, R2, #-2
0x06A4	0xB4310000  STI.L	R3, #0, R2
;__Lib_SPI.c, 747 :: 		
L___Lib_SPI_SPIx_Init_Advanced27:
;__Lib_SPI.c, 749 :: 		
0x06A8	0x4420C0B0  ADD.L	R2, R1, #11
0x06AC	0xA8310000  LDI.B	R3, R2, #0
;__Lib_SPI.c, 750 :: 		
0x06B0	0x4420C090  ADD.L	R2, R1, #9
0x06B4	0xA8210000  LDI.B	R2, R2, #0
0x06B8	0x44214058  ASHL.L	R2, R2, #5
0x06BC	0x4421500D  BEXTU.L	R2, R2, #256
0x06C0	0x44318025  OR.L	R3, R3, R2
0x06C4	0x4431D00D  BEXTU.L	R3, R3, #256
;__Lib_SPI.c, 751 :: 		
0x06C8	0x4420C0A0  ADD.L	R2, R1, #10
0x06CC	0xA8210000  LDI.B	R2, R2, #0
0x06D0	0x44214048  ASHL.L	R2, R2, #4
0x06D4	0x4421500D  BEXTU.L	R2, R2, #256
0x06D8	0x44318025  OR.L	R3, R3, R2
0x06DC	0x4431D00D  BEXTU.L	R3, R3, #256
;__Lib_SPI.c, 752 :: 		
0x06E0	0x4420C0D0  ADD.L	R2, R1, #13
0x06E4	0xA8210000  LDI.B	R2, R2, #0
0x06E8	0x44214038  ASHL.L	R2, R2, #3
0x06EC	0x4421500D  BEXTU.L	R2, R2, #256
0x06F0	0x44318025  OR.L	R3, R3, R2
0x06F4	0x4431D00D  BEXTU.L	R3, R3, #256
;__Lib_SPI.c, 753 :: 		
0x06F8	0x4420C080  ADD.L	R2, R1, #8
0x06FC	0xA8210000  LDI.B	R2, R2, #0
0x0700	0x44318025  OR.L	R3, R3, R2
0x0704	0x4431D00D  BEXTU.L	R3, R3, #256
;__Lib_SPI.c, 755 :: 		
0x0708	0x44204100  ADD.L	R2, R0, #16
0x070C	0xB4218000  STI.L	R2, #0, R3
;__Lib_SPI.c, 757 :: 		
0x0710	0x44204140  ADD.L	R2, R0, #20
0x0714	0xAC210000  LDI.L	R2, R2, #0
;__Lib_SPI.c, 758 :: 		
0x0718	0x4421500D  BEXTU.L	R2, R2, #256
0x071C	0x44314F44  AND.L	R3, R2, #244
0x0720	0x4431D00D  BEXTU.L	R3, R3, #256
;__Lib_SPI.c, 759 :: 		
0x0724	0x4420C0C0  ADD.L	R2, R1, #12
0x0728	0xA8210000  LDI.B	R2, R2, #0
0x072C	0x44214038  ASHL.L	R2, R2, #3
0x0730	0x4421500D  BEXTU.L	R2, R2, #256
0x0734	0x44218025  OR.L	R2, R3, R2
; tmp start address is: 16 (R4)
0x0738	0x4441500D  BEXTU.L	R4, R2, #256
;__Lib_SPI.c, 761 :: 		
0x073C	0x4430C030  ADD.L	R3, R1, #3
; conf end address is: 4 (R1)
0x0740	0x003001D9  JMP	L___Lib_SPI_SPIx_Init_Advanced28
;__Lib_SPI.c, 763 :: 		
L___Lib_SPI_SPIx_Init_Advanced30:
0x0744	0x4412500D  BEXTU.L	R1, R4, #256
0x0748	0x003001E3  JMP	L___Lib_SPI_SPIx_Init_Advanced29
;__Lib_SPI.c, 764 :: 		
L___Lib_SPI_SPIx_Init_Advanced31:
;__Lib_SPI.c, 766 :: 		
0x074C	0x44124015  OR.L	R1, R4, #1
0x0750	0x4410D00D  BEXTU.L	R1, R1, #256
; tmp end address is: 16 (R4)
; tmp start address is: 4 (R1)
;__Lib_SPI.c, 767 :: 		
; tmp end address is: 4 (R1)
0x0754	0x003001E3  JMP	L___Lib_SPI_SPIx_Init_Advanced29
;__Lib_SPI.c, 769 :: 		
L___Lib_SPI_SPIx_Init_Advanced32:
;__Lib_SPI.c, 771 :: 		
; tmp start address is: 16 (R4)
0x0758	0x44124025  OR.L	R1, R4, #2
0x075C	0x4410D00D  BEXTU.L	R1, R1, #256
; tmp end address is: 16 (R4)
; tmp start address is: 4 (R1)
;__Lib_SPI.c, 772 :: 		
; tmp end address is: 4 (R1)
0x0760	0x003001E3  JMP	L___Lib_SPI_SPIx_Init_Advanced29
;__Lib_SPI.c, 774 :: 		
L___Lib_SPI_SPIx_Init_Advanced28:
; tmp start address is: 16 (R4)
0x0764	0xA8218000  LDI.B	R2, R3, #0
0x0768	0x59E14002  CMP.B	R2, #0
0x076C	0x002801D1  JMPC	R30, Z, #1, L___Lib_SPI_SPIx_Init_Advanced30
0x0770	0xA8218000  LDI.B	R2, R3, #0
0x0774	0x59E14012  CMP.B	R2, #1
0x0778	0x002801D3  JMPC	R30, Z, #1, L___Lib_SPI_SPIx_Init_Advanced31
0x077C	0xA8218000  LDI.B	R2, R3, #0
0x0780	0x59E14022  CMP.B	R2, #2
0x0784	0x002801D6  JMPC	R30, Z, #1, L___Lib_SPI_SPIx_Init_Advanced32
; tmp end address is: 16 (R4)
0x0788	0x4412500D  BEXTU.L	R1, R4, #256
L___Lib_SPI_SPIx_Init_Advanced29:
;__Lib_SPI.c, 776 :: 		
; tmp start address is: 4 (R1)
0x078C	0x44204140  ADD.L	R2, R0, #20
; spiBase end address is: 0 (R0)
0x0790	0xB4208000  STI.L	R2, #0, R1
; tmp end address is: 4 (R1)
;__Lib_SPI.c, 777 :: 		
L_end_SPIx_Init_Advanced:
0x0794	0xA0000000  RETURN	
; end of __Lib_SPI_SPIx_Init_Advanced
_matrixrgb_init:
;matrixrgb_hw.c, 75 :: 		void matrixrgb_init( uint8_t width, uint8_t height )
0x07AC	0x95D00008  LINK	LR, #8
0x07B0	0xB1F00000  STI.B	SP, #0, R0
0x07B4	0xB1F08004  STI.B	SP, #4, R1
;matrixrgb_hw.c, 77 :: 		matrixrgb_hal_init();
0x07B8	0x00340160  CALL	_matrixrgb_hal_init+0
;matrixrgb_hw.c, 78 :: 		Delay_ms(300);
0x07BC	0x6DC001F5  LPM.L	R28, $+24
0x07C0	0x44004000  NOP	
L_matrixrgb_init0:
0x07C4	0x45CE4012  SUB.L	R28, R28, #1
0x07C8	0x5DEE4002  CMP.L	R28, #0
0x07CC	0x002001F1  JMPC	R30, Z, #0, L_matrixrgb_init0
0x07D0	0x003001F6  JMP	$+8
0x07D4	0x0098967E  	#9999998
0x07D8	0x44004000  NOP	
;matrixrgb_hw.c, 80 :: 		spi_buffer[0] = SETUP_CMD;
0x07DC	0x64200001  LDK.L	R2, #1
0x07E0	0xB8200833  STA.B	matrixrgb_hw_spi_buffer+0, R2
;matrixrgb_hw.c, 81 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x07E4	0x64100001  LDK.L	R1, #1
0x07E8	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x07EC	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 82 :: 		spi_buffer[0] = width;
0x07F0	0xA82F8000  LDI.B	R2, SP, #0
0x07F4	0xB8200833  STA.B	matrixrgb_hw_spi_buffer+0, R2
;matrixrgb_hw.c, 83 :: 		spi_buffer[1] = height;
0x07F8	0xA82F8004  LDI.B	R2, SP, #4
0x07FC	0xB8200834  STA.B	matrixrgb_hw_spi_buffer+1, R2
;matrixrgb_hw.c, 84 :: 		matrixrgb_hal_write( &spi_buffer, 2 );
0x0800	0x64100002  LDK.L	R1, #2
0x0804	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0808	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 86 :: 		}
L_end_matrixrgb_init:
0x080C	0x99D00000  UNLINK	LR
0x0810	0xA0000000  RETURN	
; end of _matrixrgb_init
_matrixrgb_hal_init:
;matrixrgb_hal.c, 90 :: 		void matrixrgb_hal_init()
;matrixrgb_hal.c, 105 :: 		write_spi_p             = SPIM_Wr_Ptr;
0x0580	0xC400089C  LDA.L	R0, _SPIM_Wr_Ptr+0
0x0584	0xBC000898  STA.L	matrixrgb_hal_write_spi_p+0, R0
;matrixrgb_hal.c, 106 :: 		read_spi_p              = SPIM_Rd_Ptr;
0x0588	0xC40008A4  LDA.L	R0, _SPIM_Rd_Ptr+0
0x058C	0xBC0008A0  STA.L	matrixrgb_hal_read_spi_p+0, R0
;matrixrgb_hal.c, 107 :: 		write_bytes_spi_p       = SPIM_WrBytes_Ptr;
0x0590	0xC40008AC  LDA.L	R0, _SPIM_WrBytes_Ptr+0
0x0594	0xBC0008A8  STA.L	matrixrgb_hal_write_bytes_spi_p+0, R0
;matrixrgb_hal.c, 108 :: 		read_bytes_spi_p        = SPIM_RdBytes_Ptr;
0x0598	0xC40008B4  LDA.L	R0, _SPIM_RdBytes_Ptr+0
0x059C	0xBC0008B0  STA.L	matrixrgb_hal_read_bytes_spi_p+0, R0
;matrixrgb_hal.c, 111 :: 		matrixrgb_hal_cs_high();
0x05A0	0x0034004D  CALL	_matrixrgb_hal_cs_high+0
;matrixrgb_hal.c, 113 :: 		}
L_end_matrixrgb_hal_init:
0x05A4	0xA0000000  RETURN	
; end of _matrixrgb_hal_init
_matrixrgb_hal_cs_high:
;matrixrgb_hal.c, 80 :: 		void matrixrgb_hal_cs_high()
;matrixrgb_hal.c, 82 :: 		MATRIXRGB_CS = 1;
0x0134	0xC4010084  LDA.L	R0, MATRIXRGB_CS+0
0x0138	0x440063CB  BINS.L	R0, R0, #BitPos(MATRIXRGB_CS+0)=1
0x013C	0xBC010084  STA.L	MATRIXRGB_CS+0, R0
;matrixrgb_hal.c, 83 :: 		}
L_end_matrixrgb_hal_cs_high:
0x0140	0xA0000000  RETURN	
; end of _matrixrgb_hal_cs_high
_matrixrgb_hal_write:
;matrixrgb_hal.c, 116 :: 		uint16_t count )
0x0180	0x95D00008  LINK	LR, #8
0x0184	0xB5F00000  STI.L	SP, #0, R0
0x0188	0xB3F08004  STI.S	SP, #4, R1
;matrixrgb_hal.c, 119 :: 		while( MATRIXRGB_READY != 1 )
L_matrixrgb_hal_write0:
0x018C	0xC4210084  LDA.L	R2, MATRIXRGB_READY+0
0x0190	0x4421423D  BEXTU.L	R2, R2, #BitPos(MATRIXRGB_READY+0)
0x0194	0x5DE14002  CMP.L	R2, #0
0x0198	0x00200068  JMPC	R30, Z, #0, L_matrixrgb_hal_write1
;matrixrgb_hal.c, 122 :: 		}  //Wait till slave is ready
0x019C	0x00300063  JMP	L_matrixrgb_hal_write0
L_matrixrgb_hal_write1:
;matrixrgb_hal.c, 124 :: 		while( count-- )
L_matrixrgb_hal_write2:
0x01A0	0xAA3F8004  LDI.S	R3, SP, #4
0x01A4	0xAA2F8004  LDI.S	R2, SP, #4
0x01A8	0x44214012  SUB.L	R2, R2, #1
0x01AC	0xB3F10004  STI.S	SP, #4, R2
0x01B0	0x5BE1C002  CMP.S	R3, #0
0x01B4	0x0028007A  JMPC	R30, Z, #1, L_matrixrgb_hal_write3
;matrixrgb_hal.c, 126 :: 		matrixrgb_hal_cs_low();
0x01B8	0x00340049  CALL	_matrixrgb_hal_cs_low+0
;matrixrgb_hal.c, 127 :: 		write_spi_p( *( buffer++ ) );
0x01BC	0xAC2F8000  LDI.L	R2, SP, #0
0x01C0	0xA8210000  LDI.B	R2, R2, #0
0x01C4	0x4461500D  BEXTU.L	R6, R2, #256
0x01C8	0x4403500D  BEXTU.L	R0, R6, #256
0x01CC	0xC4600898  LDA.L	R6, matrixrgb_hal_write_spi_p+0
0x01D0	0x08340060  CALLI	R6
0x01D4	0xAC2F8000  LDI.L	R2, SP, #0
0x01D8	0x44214010  ADD.L	R2, R2, #1
0x01DC	0xB5F10000  STI.L	SP, #0, R2
;matrixrgb_hal.c, 128 :: 		matrixrgb_hal_cs_high();
0x01E0	0x0034004D  CALL	_matrixrgb_hal_cs_high+0
;matrixrgb_hal.c, 129 :: 		}
0x01E4	0x00300068  JMP	L_matrixrgb_hal_write2
L_matrixrgb_hal_write3:
;matrixrgb_hal.c, 131 :: 		}
L_end_matrixrgb_hal_write:
0x01E8	0x99D00000  UNLINK	LR
0x01EC	0xA0000000  RETURN	
; end of _matrixrgb_hal_write
_matrixrgb_hal_cs_low:
;matrixrgb_hal.c, 85 :: 		void matrixrgb_hal_cs_low()
;matrixrgb_hal.c, 87 :: 		MATRIXRGB_CS = 0;
0x0124	0xC4010084  LDA.L	R0, MATRIXRGB_CS+0
0x0128	0x440043CB  BINS.L	R0, R0, #BitPos(MATRIXRGB_CS+0)=0
0x012C	0xBC010084  STA.L	MATRIXRGB_CS+0, R0
;matrixrgb_hal.c, 88 :: 		}
L_end_matrixrgb_hal_cs_low:
0x0130	0xA0000000  RETURN	
; end of _matrixrgb_hal_cs_low
_SPIM1_Write:
;__Lib_SPI.c, 395 :: 		
0x0144	0x95D00004  LINK	LR, #4
0x0148	0xB1F00000  STI.B	SP, #0, R0
;__Lib_SPI.c, 397 :: 		
0x014C	0x441FC000  ADD.L	R1, SP, #0
0x0150	0x640102A0  LDK.L	R0, #SPIM_CNTL+0
0x0154	0x00340024  CALL	__Lib_SPI_SPIx_Read+0
;__Lib_SPI.c, 398 :: 		
L_end_SPIM1_Write:
0x0158	0x99D00000  UNLINK	LR
0x015C	0xA0000000  RETURN	
; end of _SPIM1_Write
__Lib_SPI_SPIx_Read:
;__Lib_SPI.c, 808 :: 		
; bufferIn start address is: 4 (R1)
; spiBase start address is: 0 (R0)
; bufferIn end address is: 4 (R1)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
; bufferIn start address is: 4 (R1)
;__Lib_SPI.c, 811 :: 		
0x0090	0x44304080  ADD.L	R3, R0, #8
0x0094	0xA8208000  LDI.B	R2, R1, #0
; bufferIn end address is: 4 (R1)
0x0098	0xB4310000  STI.L	R3, #0, R2
; spiBase end address is: 0 (R0)
;__Lib_SPI.c, 814 :: 		
L___Lib_SPI_SPIx_Read36:
; spiBase start address is: 0 (R0)
0x009C	0x44204040  ADD.L	R2, R0, #4
0x00A0	0xAC210000  LDI.L	R2, R2, #0
0x00A4	0x44214044  AND.L	R2, R2, #4
0x00A8	0x5DE14002  CMP.L	R2, #0
0x00AC	0x0020002D  JMPC	R30, Z, #0, L___Lib_SPI_SPIx_Read37
0x00B0	0x00300027  JMP	L___Lib_SPI_SPIx_Read36
L___Lib_SPI_SPIx_Read37:
;__Lib_SPI.c, 817 :: 		
L___Lib_SPI_SPIx_Read38:
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
0x00B4	0x44204040  ADD.L	R2, R0, #4
0x00B8	0xAC210000  LDI.L	R2, R2, #0
0x00BC	0x44214084  AND.L	R2, R2, #8
0x00C0	0x5DE14002  CMP.L	R2, #0
0x00C4	0x00200033  JMPC	R30, Z, #0, L___Lib_SPI_SPIx_Read39
0x00C8	0x0030002D  JMP	L___Lib_SPI_SPIx_Read38
L___Lib_SPI_SPIx_Read39:
;__Lib_SPI.c, 820 :: 		
L___Lib_SPI_SPIx_Read40:
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
0x00CC	0x44204040  ADD.L	R2, R0, #4
0x00D0	0xAC210000  LDI.L	R2, R2, #0
0x00D4	0x44214804  AND.L	R2, R2, #128
0x00D8	0x5DE14002  CMP.L	R2, #0
0x00DC	0x00200039  JMPC	R30, Z, #0, L___Lib_SPI_SPIx_Read41
0x00E0	0x00300033  JMP	L___Lib_SPI_SPIx_Read40
L___Lib_SPI_SPIx_Read41:
;__Lib_SPI.c, 823 :: 		
0x00E4	0x44204080  ADD.L	R2, R0, #8
; spiBase end address is: 0 (R0)
0x00E8	0xAC210000  LDI.L	R2, R2, #0
0x00EC	0x4401500D  BEXTU.L	R0, R2, #256
;__Lib_SPI.c, 824 :: 		
L_end_SPIx_Read:
0x00F0	0xA0000000  RETURN	
; end of __Lib_SPI_SPIx_Read
_SPIM1_Enable_SS:
;__Lib_SPI.c, 422 :: 		
; ssLine start address is: 0 (R0)
; ssLine end address is: 0 (R0)
; ssLine start address is: 0 (R0)
;__Lib_SPI.c, 424 :: 		
0x0170	0x4410500D  BEXTU.L	R1, R0, #256
; ssLine end address is: 0 (R0)
0x0174	0x640102A0  LDK.L	R0, #SPIM_CNTL+0
0x0178	0x0034003D  CALL	__Lib_SPI_SPIx_Enable_SS+0
;__Lib_SPI.c, 425 :: 		
L_end_SPIM1_Enable_SS:
0x017C	0xA0000000  RETURN	
; end of _SPIM1_Enable_SS
__Lib_SPI_SPIx_Enable_SS:
;__Lib_SPI.c, 1086 :: 		
; ssLine start address is: 4 (R1)
; spiBase start address is: 0 (R0)
; ssLine end address is: 4 (R1)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
; ssLine start address is: 4 (R1)
;__Lib_SPI.c, 1088 :: 		
0x00F4	0x444040C0  ADD.L	R4, R0, #12
; spiBase end address is: 0 (R0)
0x00F8	0x4420D00D  BEXTU.L	R2, R1, #256
; ssLine end address is: 4 (R1)
0x00FC	0x44317FF6  XOR.L	R3, R2, #-1
0x0100	0xAC220000  LDI.L	R2, R4, #0
0x0104	0x44210034  AND.L	R2, R2, R3
0x0108	0xB4410000  STI.L	R4, #0, R2
;__Lib_SPI.c, 1089 :: 		
L_end_SPIx_Enable_SS:
0x010C	0xA0000000  RETURN	
; end of __Lib_SPI_SPIx_Enable_SS
_SPIM1_Disable_SS:
;__Lib_SPI.c, 431 :: 		
; ssLine start address is: 0 (R0)
; ssLine end address is: 0 (R0)
; ssLine start address is: 0 (R0)
;__Lib_SPI.c, 433 :: 		
0x0160	0x4410500D  BEXTU.L	R1, R0, #256
; ssLine end address is: 0 (R0)
0x0164	0x640102A0  LDK.L	R0, #SPIM_CNTL+0
0x0168	0x00340044  CALL	__Lib_SPI_SPIx_Disable_SS+0
;__Lib_SPI.c, 434 :: 		
L_end_SPIM1_Disable_SS:
0x016C	0xA0000000  RETURN	
; end of _SPIM1_Disable_SS
__Lib_SPI_SPIx_Disable_SS:
;__Lib_SPI.c, 1102 :: 		
; ssLine start address is: 4 (R1)
; spiBase start address is: 0 (R0)
; ssLine end address is: 4 (R1)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
; ssLine start address is: 4 (R1)
;__Lib_SPI.c, 1104 :: 		
0x0110	0x443040C0  ADD.L	R3, R0, #12
; spiBase end address is: 0 (R0)
0x0114	0xAC218000  LDI.L	R2, R3, #0
0x0118	0x44210015  OR.L	R2, R2, R1
; ssLine end address is: 4 (R1)
0x011C	0xB4310000  STI.L	R3, #0, R2
;__Lib_SPI.c, 1105 :: 		
L_end_SPIx_Disable_SS:
0x0120	0xA0000000  RETURN	
; end of __Lib_SPI_SPIx_Disable_SS
_matrixrgb_scroll_img_right:
;matrixrgb_hw.c, 154 :: 		void matrixrgb_scroll_img_right( uint8_t *bmp, uint8_t width, uint8_t height, uint8_t speed )
; bmp start address is: 0 (R0)
0x0BC4	0x95D00014  LINK	LR, #20
0x0BC8	0xB1F08008  STI.B	SP, #8, R1
0x0BCC	0xB1F1000C  STI.B	SP, #12, R2
0x0BD0	0xB1F18010  STI.B	SP, #16, R3
; bmp end address is: 0 (R0)
; bmp start address is: 0 (R0)
;matrixrgb_hw.c, 157 :: 		uint8_t *ptr = bmp;
0x0BD4	0xB5F00004  STI.L	SP, #4, R0
; bmp end address is: 0 (R0)
;matrixrgb_hw.c, 159 :: 		spi_buffer[0] = SCROLL_IMG_RIGHT_CMD;         // Send command for image load
0x0BD8	0x64400004  LDK.L	R4, #4
0x0BDC	0xB8400833  STA.B	matrixrgb_hw_spi_buffer+0, R4
;matrixrgb_hw.c, 160 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0BE0	0x64100001  LDK.L	R1, #1
0x0BE4	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0BE8	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 161 :: 		spi_buffer[0] = width;
0x0BEC	0xA84F8008  LDI.B	R4, SP, #8
0x0BF0	0xB8400833  STA.B	matrixrgb_hw_spi_buffer+0, R4
;matrixrgb_hw.c, 162 :: 		spi_buffer[1] = height;
0x0BF4	0xA84F800C  LDI.B	R4, SP, #12
0x0BF8	0xB8400834  STA.B	matrixrgb_hw_spi_buffer+1, R4
;matrixrgb_hw.c, 163 :: 		matrixrgb_hal_write( &spi_buffer, 2 );
0x0BFC	0x64100002  LDK.L	R1, #2
0x0C00	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0C04	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 164 :: 		spi_buffer[0] = speed;
0x0C08	0xA84F8010  LDI.B	R4, SP, #16
0x0C0C	0xB8400833  STA.B	matrixrgb_hw_spi_buffer+0, R4
;matrixrgb_hw.c, 165 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0C10	0x64100001  LDK.L	R1, #1
0x0C14	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0C18	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 167 :: 		for( i = 0; i < height; i++ )
; i start address is: 12 (R3)
0x0C1C	0x64300000  LDK.L	R3, #0
; i end address is: 12 (R3)
L_matrixrgb_scroll_img_right17:
; i start address is: 12 (R3)
0x0C20	0xA84F800C  LDI.B	R4, SP, #12
0x0C24	0x5BE18042  CMP.S	R3, R4
0x0C28	0x0060032F  JMPC	R30, C, #0, L_matrixrgb_scroll_img_right18
;matrixrgb_hw.c, 168 :: 		for( j = 0; j < width; j++ )
; j start address is: 24 (R6)
0x0C2C	0x64600000  LDK.L	R6, #0
; j end address is: 24 (R6)
; i end address is: 12 (R3)
0x0C30	0x4411C00D  BEXTU.L	R1, R3, #0
0x0C34	0x4403400D  BEXTU.L	R0, R6, #0
L_matrixrgb_scroll_img_right20:
; j start address is: 0 (R0)
; i start address is: 4 (R1)
0x0C38	0xA84F8008  LDI.B	R4, SP, #8
0x0C3C	0x5BE00042  CMP.S	R0, R4
0x0C40	0x0060032C  JMPC	R30, C, #0, L_matrixrgb_scroll_img_right21
;matrixrgb_hw.c, 170 :: 		spi_buffer[0] = ptr[ 2 * ( i * width + j ) ];
0x0C44	0xA84F8008  LDI.B	R4, SP, #8
0x0C48	0xF4408048  MUL.L	R4, R1, R4
0x0C4C	0x4442400D  BEXTU.L	R4, R4, #0
0x0C50	0x44420000  ADD.L	R4, R4, R0
0x0C54	0x4442400D  BEXTU.L	R4, R4, #0
0x0C58	0x44624018  ASHL.L	R6, R4, #1
0x0C5C	0x4463400D  BEXTU.L	R6, R6, #0
0x0C60	0xAC5F8004  LDI.L	R5, SP, #4
0x0C64	0x44428060  ADD.L	R4, R5, R6
0x0C68	0xA8420000  LDI.B	R4, R4, #0
0x0C6C	0xB8400833  STA.B	matrixrgb_hw_spi_buffer+0, R4
;matrixrgb_hw.c, 171 :: 		spi_buffer[1] = ptr[ 2 * ( i * width + j ) + 1 ];
0x0C70	0x44434010  ADD.L	R4, R6, #1
0x0C74	0x4442400D  BEXTU.L	R4, R4, #0
0x0C78	0x44428040  ADD.L	R4, R5, R4
0x0C7C	0xA8420000  LDI.B	R4, R4, #0
0x0C80	0xB8400834  STA.B	matrixrgb_hw_spi_buffer+1, R4
;matrixrgb_hw.c, 172 :: 		matrixrgb_hal_write( &spi_buffer, 2 );
0x0C84	0xB3F08000  STI.S	SP, #0, R1
0x0C88	0xB3F00002  STI.S	SP, #2, R0
0x0C8C	0x64100002  LDK.L	R1, #2
0x0C90	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0C94	0x00340060  CALL	_matrixrgb_hal_write+0
0x0C98	0xAA0F8002  LDI.S	R0, SP, #2
0x0C9C	0xAA1F8000  LDI.S	R1, SP, #0
;matrixrgb_hw.c, 168 :: 		for( j = 0; j < width; j++ )
0x0CA0	0x44404010  ADD.L	R4, R0, #1
; j end address is: 0 (R0)
; j start address is: 24 (R6)
0x0CA4	0x4462400D  BEXTU.L	R6, R4, #0
;matrixrgb_hw.c, 173 :: 		}
; j end address is: 24 (R6)
0x0CA8	0x4403400D  BEXTU.L	R0, R6, #0
0x0CAC	0x0030030E  JMP	L_matrixrgb_scroll_img_right20
L_matrixrgb_scroll_img_right21:
;matrixrgb_hw.c, 167 :: 		for( i = 0; i < height; i++ )
0x0CB0	0x4440C010  ADD.L	R4, R1, #1
; i end address is: 4 (R1)
; i start address is: 12 (R3)
0x0CB4	0x4432400D  BEXTU.L	R3, R4, #0
;matrixrgb_hw.c, 173 :: 		}
; i end address is: 12 (R3)
0x0CB8	0x00300308  JMP	L_matrixrgb_scroll_img_right17
L_matrixrgb_scroll_img_right18:
;matrixrgb_hw.c, 174 :: 		}
L_end_matrixrgb_scroll_img_right:
0x0CBC	0x99D00000  UNLINK	LR
0x0CC0	0xA0000000  RETURN	
; end of _matrixrgb_scroll_img_right
_matrixrgb_scroll_off_scrn_down:
;matrixrgb_hw.c, 292 :: 		void matrixrgb_scroll_off_scrn_down( uint8_t speed )
0x0B8C	0x95D00004  LINK	LR, #4
0x0B90	0xB1F00000  STI.B	SP, #0, R0
;matrixrgb_hw.c, 294 :: 		spi_buffer[0] = DISPLAY_SCROLL_OFF_SCRN_DWN_CMD;
0x0B94	0x6410000F  LDK.L	R1, #15
0x0B98	0xB8100833  STA.B	matrixrgb_hw_spi_buffer+0, R1
;matrixrgb_hw.c, 295 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0B9C	0x64100001  LDK.L	R1, #1
0x0BA0	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0BA4	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 297 :: 		spi_buffer[0] = speed;
0x0BA8	0xA81F8000  LDI.B	R1, SP, #0
0x0BAC	0xB8100833  STA.B	matrixrgb_hw_spi_buffer+0, R1
;matrixrgb_hw.c, 298 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0BB0	0x64100001  LDK.L	R1, #1
0x0BB4	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0BB8	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 299 :: 		}
L_end_matrixrgb_scroll_off_scrn_down:
0x0BBC	0x99D00000  UNLINK	LR
0x0BC0	0xA0000000  RETURN	
; end of _matrixrgb_scroll_off_scrn_down
_matrixrgb_set_color:
;matrixrgb_hw.c, 333 :: 		void matrixrgb_set_color( color_t *color, uint8_t red_color, uint8_t green_color, uint8_t blue_color )
; blue_color start address is: 12 (R3)
; green_color start address is: 8 (R2)
; red_color start address is: 4 (R1)
; color start address is: 0 (R0)
; blue_color end address is: 12 (R3)
; green_color end address is: 8 (R2)
; red_color end address is: 4 (R1)
; color end address is: 0 (R0)
; color start address is: 0 (R0)
; red_color start address is: 4 (R1)
; green_color start address is: 8 (R2)
; blue_color start address is: 12 (R3)
;matrixrgb_hw.c, 336 :: 		color->red   = red_color;
0x0ABC	0xB0008000  STI.B	R0, #0, R1
; red_color end address is: 4 (R1)
;matrixrgb_hw.c, 337 :: 		color->green = green_color;
0x0AC0	0x44404010  ADD.L	R4, R0, #1
0x0AC4	0xB0410000  STI.B	R4, #0, R2
; green_color end address is: 8 (R2)
;matrixrgb_hw.c, 338 :: 		color->blue  = blue_color;
0x0AC8	0x44404020  ADD.L	R4, R0, #2
; color end address is: 0 (R0)
0x0ACC	0xB0418000  STI.B	R4, #0, R3
; blue_color end address is: 12 (R3)
;matrixrgb_hw.c, 340 :: 		}
L_end_matrixrgb_set_color:
0x0AD0	0xA0000000  RETURN	
; end of _matrixrgb_set_color
_matrixrgb_scroll_text_left:
;matrixrgb_hw.c, 199 :: 		void matrixrgb_scroll_text_left( char *text, color_t color, uint8_t speed , uint8_t text_size )
; text start address is: 0 (R0)
0x0988	0x95D00010  LINK	LR, #16
0x098C	0xB1F08008  STI.B	SP, #8, R1
0x0990	0xB1F1000C  STI.B	SP, #12, R2
; text end address is: 0 (R0)
; text start address is: 0 (R0)
;matrixrgb_hw.c, 201 :: 		uint8_t i = 0;
;matrixrgb_hw.c, 202 :: 		uint8_t *ptr = text;
0x0994	0xB5F00000  STI.L	SP, #0, R0
; text end address is: 0 (R0)
;matrixrgb_hw.c, 204 :: 		spi_buffer[0] = SCROLL_TEXT_LEFT_CMD;
0x0998	0x64300008  LDK.L	R3, #8
0x099C	0xB8300833  STA.B	matrixrgb_hw_spi_buffer+0, R3
;matrixrgb_hw.c, 205 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x09A0	0x64100001  LDK.L	R1, #1
0x09A4	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x09A8	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 206 :: 		spi_buffer[0] = text_size;
0x09AC	0xA83F800C  LDI.B	R3, SP, #12
0x09B0	0xB8300833  STA.B	matrixrgb_hw_spi_buffer+0, R3
;matrixrgb_hw.c, 207 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x09B4	0x64100001  LDK.L	R1, #1
0x09B8	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x09BC	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 208 :: 		spi_buffer[0] = color.red;
0x09C0	0xA83F8018  LDI.B	R3, SP, #24
0x09C4	0xB8300833  STA.B	matrixrgb_hw_spi_buffer+0, R3
;matrixrgb_hw.c, 209 :: 		spi_buffer[1] = color.green;
0x09C8	0xA83F8019  LDI.B	R3, SP, #25
0x09CC	0xB8300834  STA.B	matrixrgb_hw_spi_buffer+1, R3
;matrixrgb_hw.c, 210 :: 		spi_buffer[2] = color.blue;
0x09D0	0xA83F801A  LDI.B	R3, SP, #26
0x09D4	0xB8300835  STA.B	matrixrgb_hw_spi_buffer+2, R3
;matrixrgb_hw.c, 211 :: 		matrixrgb_hal_write( &spi_buffer, 3 );
0x09D8	0x64100003  LDK.L	R1, #3
0x09DC	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x09E0	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 212 :: 		spi_buffer[0] = speed;
0x09E4	0xA83F8008  LDI.B	R3, SP, #8
0x09E8	0xB8300833  STA.B	matrixrgb_hw_spi_buffer+0, R3
;matrixrgb_hw.c, 213 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x09EC	0x64100001  LDK.L	R1, #1
0x09F0	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x09F4	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 215 :: 		for( i = 0; i < text_size; i++ )
0x09F8	0x64300000  LDK.L	R3, #0
0x09FC	0xB1F18004  STI.B	SP, #4, R3
L_matrixrgb_scroll_text_left26:
0x0A00	0xA84F800C  LDI.B	R4, SP, #12
0x0A04	0xA83F8004  LDI.B	R3, SP, #4
0x0A08	0x59E18042  CMP.B	R3, R4
0x0A0C	0x00600291  JMPC	R30, C, #0, L_matrixrgb_scroll_text_left27
;matrixrgb_hw.c, 217 :: 		spi_buffer[0] = *ptr++;
0x0A10	0xAC3F8000  LDI.L	R3, SP, #0
0x0A14	0xA8318000  LDI.B	R3, R3, #0
0x0A18	0xB8300833  STA.B	matrixrgb_hw_spi_buffer+0, R3
0x0A1C	0xAC3F8000  LDI.L	R3, SP, #0
0x0A20	0x4431C010  ADD.L	R3, R3, #1
0x0A24	0xB5F18000  STI.L	SP, #0, R3
;matrixrgb_hw.c, 218 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0A28	0x64100001  LDK.L	R1, #1
0x0A2C	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0A30	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 215 :: 		for( i = 0; i < text_size; i++ )
0x0A34	0xA83F8004  LDI.B	R3, SP, #4
0x0A38	0x4431C010  ADD.L	R3, R3, #1
0x0A3C	0xB1F18004  STI.B	SP, #4, R3
;matrixrgb_hw.c, 219 :: 		}
0x0A40	0x00300280  JMP	L_matrixrgb_scroll_text_left26
L_matrixrgb_scroll_text_left27:
;matrixrgb_hw.c, 221 :: 		}
L_end_matrixrgb_scroll_text_left:
0x0A44	0x99D00000  UNLINK	LR
0x0A48	0xA0000000  RETURN	
; end of _matrixrgb_scroll_text_left
_matrixrgb_scroll_off_scrn_up:
;matrixrgb_hw.c, 283 :: 		void matrixrgb_scroll_off_scrn_up( uint8_t speed )
0x0950	0x95D00004  LINK	LR, #4
0x0954	0xB1F00000  STI.B	SP, #0, R0
;matrixrgb_hw.c, 285 :: 		spi_buffer[0] = DISPLAY_SCROLL_OFF_SCRN_UP_CMD;
0x0958	0x6410000E  LDK.L	R1, #14
0x095C	0xB8100833  STA.B	matrixrgb_hw_spi_buffer+0, R1
;matrixrgb_hw.c, 286 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0960	0x64100001  LDK.L	R1, #1
0x0964	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0968	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 288 :: 		spi_buffer[0] = speed;
0x096C	0xA81F8000  LDI.B	R1, SP, #0
0x0970	0xB8100833  STA.B	matrixrgb_hw_spi_buffer+0, R1
;matrixrgb_hw.c, 289 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0974	0x64100001  LDK.L	R1, #1
0x0978	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x097C	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 290 :: 		}
L_end_matrixrgb_scroll_off_scrn_up:
0x0980	0x99D00000  UNLINK	LR
0x0984	0xA0000000  RETURN	
; end of _matrixrgb_scroll_off_scrn_up
_matrixrgb_scroll_off_scrn_left:
;matrixrgb_hw.c, 301 :: 		void matrixrgb_scroll_off_scrn_left( uint8_t speed )
0x0A84	0x95D00004  LINK	LR, #4
0x0A88	0xB1F00000  STI.B	SP, #0, R0
;matrixrgb_hw.c, 303 :: 		spi_buffer[0] = DISPLAY_SCROLL_OFF_SCRN_LEFT_CMD;
0x0A8C	0x64100010  LDK.L	R1, #16
0x0A90	0xB8100833  STA.B	matrixrgb_hw_spi_buffer+0, R1
;matrixrgb_hw.c, 304 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0A94	0x64100001  LDK.L	R1, #1
0x0A98	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0A9C	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 306 :: 		spi_buffer[0] = speed;
0x0AA0	0xA81F8000  LDI.B	R1, SP, #0
0x0AA4	0xB8100833  STA.B	matrixrgb_hw_spi_buffer+0, R1
;matrixrgb_hw.c, 307 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0AA8	0x64100001  LDK.L	R1, #1
0x0AAC	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0AB0	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 308 :: 		}
L_end_matrixrgb_scroll_off_scrn_left:
0x0AB4	0x99D00000  UNLINK	LR
0x0AB8	0xA0000000  RETURN	
; end of _matrixrgb_scroll_off_scrn_left
_matrixrgb_scroll_off_scrn_right:
;matrixrgb_hw.c, 310 :: 		void matrixrgb_scroll_off_scrn_right( uint8_t speed )
0x0A4C	0x95D00004  LINK	LR, #4
0x0A50	0xB1F00000  STI.B	SP, #0, R0
;matrixrgb_hw.c, 312 :: 		spi_buffer[0] = DISPLAY_SCROLL_OFF_SCRN_RIGHT_CMD;
0x0A54	0x64100011  LDK.L	R1, #17
0x0A58	0xB8100833  STA.B	matrixrgb_hw_spi_buffer+0, R1
;matrixrgb_hw.c, 313 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0A5C	0x64100001  LDK.L	R1, #1
0x0A60	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0A64	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 315 :: 		spi_buffer[0] = speed;
0x0A68	0xA81F8000  LDI.B	R1, SP, #0
0x0A6C	0xB8100833  STA.B	matrixrgb_hw_spi_buffer+0, R1
;matrixrgb_hw.c, 316 :: 		matrixrgb_hal_write( &spi_buffer, 1 );
0x0A70	0x64100001  LDK.L	R1, #1
0x0A74	0x64000833  LDK.L	R0, #matrixrgb_hw_spi_buffer+0
0x0A78	0x00340060  CALL	_matrixrgb_hal_write+0
;matrixrgb_hw.c, 317 :: 		}
L_end_matrixrgb_scroll_off_scrn_right:
0x0A7C	0x99D00000  UNLINK	LR
0x0A80	0xA0000000  RETURN	
; end of _matrixrgb_scroll_off_scrn_right
___CC2DB:
;__Lib_System.c, 4 :: 		
;__Lib_System.c, 6 :: 		
L_loopCC2DB:
;__Lib_System.c, 7 :: 		
0x0AD4	0xC99E0000  LPMI.B	R25, R28, #0
;__Lib_System.c, 8 :: 		
0x0AD8	0xB1BC8000  STI.B	R27, #0, R25
;__Lib_System.c, 9 :: 		
0x0ADC	0x45CE4010  ADD.L	R28, R28, #1
;__Lib_System.c, 10 :: 		
0x0AE0	0x45BDC010  ADD.L	R27, R27, #1
;__Lib_System.c, 11 :: 		
0x0AE4	0x5DED81A2  CMP.L	R27, R26
;__Lib_System.c, 12 :: 		
0x0AE8	0x002002B5  JMPC	R30, Z, #0, L_loopCC2DB
;__Lib_System.c, 14 :: 		
L_end___CC2DB:
0x0AEC	0xA0000000  RETURN	
; end of ___CC2DB
__Lib_System_InitialSetUpCLKPMC:
;__Lib_System.c, 43 :: 		
;__Lib_System.c, 48 :: 		
0x0CCC	0x6C000336  LPM.L	R0, $+12
0x0CD0	0xBC0008D4  STA.L	___System_CLOCK_IN_KHZ+0, R0
;__Lib_System.c, 52 :: 		
L_end_InitialSetUpCLKPMC:
0x0CD4	0xA0000000  RETURN	
0x0CD8	0x000186A0  	#100000
; end of __Lib_System_InitialSetUpCLKPMC
___GenExcept:
;__Lib_System.c, 79 :: 		
;__Lib_System.c, 80 :: 		
L___GenExcept4:
0x0CC4	0x00300331  JMP	L___GenExcept4
;__Lib_System.c, 81 :: 		
L_end___GenExcept:
0x0CC8	0xA0000000  RETURN	
; end of ___GenExcept
0x1830	0x65B00004  LDK.L	R27, #4
0x1834	0x65A00897  LDK.L	R26, #2199
0x1838	0x65C00F9C  LDK.L	R28, #3996
0x183C	0x003402B5  CALL	___CC2DB
0x1840	0xA0000000  RETURN	
0x1844	0x64000004  LDK.L	R0, #4
0x1848	0x64100000  LDK.L	R1, #0
0x184C	0x642008D4  LDK.L	R2, #2260
0x1850	0xF0008027  MEMSET.B	R0, R1, R2
0x1854	0xA0000000  RETURN	
;resources.c,0 :: ?ICS_MikroeBITMAP_bmp [2048]
0x0F9C	0x00000000 ;?ICS_MikroeBITMAP_bmp+0
0x0FA0	0x00000000 ;?ICS_MikroeBITMAP_bmp+4
0x0FA4	0x00000000 ;?ICS_MikroeBITMAP_bmp+8
0x0FA8	0x00000000 ;?ICS_MikroeBITMAP_bmp+12
0x0FAC	0x00000000 ;?ICS_MikroeBITMAP_bmp+16
0x0FB0	0x00000000 ;?ICS_MikroeBITMAP_bmp+20
0x0FB4	0x00000000 ;?ICS_MikroeBITMAP_bmp+24
0x0FB8	0x00000000 ;?ICS_MikroeBITMAP_bmp+28
0x0FBC	0x00000000 ;?ICS_MikroeBITMAP_bmp+32
0x0FC0	0x00000000 ;?ICS_MikroeBITMAP_bmp+36
0x0FC4	0x00000000 ;?ICS_MikroeBITMAP_bmp+40
0x0FC8	0x00000000 ;?ICS_MikroeBITMAP_bmp+44
0x0FCC	0x00000000 ;?ICS_MikroeBITMAP_bmp+48
0x0FD0	0x00000000 ;?ICS_MikroeBITMAP_bmp+52
0x0FD4	0x00000000 ;?ICS_MikroeBITMAP_bmp+56
0x0FD8	0x00000000 ;?ICS_MikroeBITMAP_bmp+60
0x0FDC	0x00000000 ;?ICS_MikroeBITMAP_bmp+64
0x0FE0	0x00000000 ;?ICS_MikroeBITMAP_bmp+68
0x0FE4	0x00000000 ;?ICS_MikroeBITMAP_bmp+72
0x0FE8	0x00000000 ;?ICS_MikroeBITMAP_bmp+76
0x0FEC	0x00000000 ;?ICS_MikroeBITMAP_bmp+80
0x0FF0	0x00000000 ;?ICS_MikroeBITMAP_bmp+84
0x0FF4	0x00000000 ;?ICS_MikroeBITMAP_bmp+88
0x0FF8	0x00000000 ;?ICS_MikroeBITMAP_bmp+92
0x0FFC	0x00000000 ;?ICS_MikroeBITMAP_bmp+96
0x1000	0x00000000 ;?ICS_MikroeBITMAP_bmp+100
0x1004	0x00000000 ;?ICS_MikroeBITMAP_bmp+104
0x1008	0x00000000 ;?ICS_MikroeBITMAP_bmp+108
0x100C	0x00000000 ;?ICS_MikroeBITMAP_bmp+112
0x1010	0x00000000 ;?ICS_MikroeBITMAP_bmp+116
0x1014	0x00000000 ;?ICS_MikroeBITMAP_bmp+120
0x1018	0x00000000 ;?ICS_MikroeBITMAP_bmp+124
0x101C	0x00000000 ;?ICS_MikroeBITMAP_bmp+128
0x1020	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+132
0x1024	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+136
0x1028	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+140
0x102C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+144
0x1030	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+148
0x1034	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+152
0x1038	0x00000000 ;?ICS_MikroeBITMAP_bmp+156
0x103C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+160
0x1040	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+164
0x1044	0x00000000 ;?ICS_MikroeBITMAP_bmp+168
0x1048	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+172
0x104C	0x00000000 ;?ICS_MikroeBITMAP_bmp+176
0x1050	0x00000000 ;?ICS_MikroeBITMAP_bmp+180
0x1054	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+184
0x1058	0x00000000 ;?ICS_MikroeBITMAP_bmp+188
0x105C	0x00000000 ;?ICS_MikroeBITMAP_bmp+192
0x1060	0x00000000 ;?ICS_MikroeBITMAP_bmp+196
0x1064	0x00000000 ;?ICS_MikroeBITMAP_bmp+200
0x1068	0x00000000 ;?ICS_MikroeBITMAP_bmp+204
0x106C	0x00000000 ;?ICS_MikroeBITMAP_bmp+208
0x1070	0x00000000 ;?ICS_MikroeBITMAP_bmp+212
0x1074	0x00000000 ;?ICS_MikroeBITMAP_bmp+216
0x1078	0x00000000 ;?ICS_MikroeBITMAP_bmp+220
0x107C	0x00000000 ;?ICS_MikroeBITMAP_bmp+224
0x1080	0x00000000 ;?ICS_MikroeBITMAP_bmp+228
0x1084	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+232
0x1088	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+236
0x108C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+240
0x1090	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+244
0x1094	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+248
0x1098	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+252
0x109C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+256
0x10A0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+260
0x10A4	0x00000000 ;?ICS_MikroeBITMAP_bmp+264
0x10A8	0x00000000 ;?ICS_MikroeBITMAP_bmp+268
0x10AC	0x00000000 ;?ICS_MikroeBITMAP_bmp+272
0x10B0	0x00000000 ;?ICS_MikroeBITMAP_bmp+276
0x10B4	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+280
0x10B8	0x00000000 ;?ICS_MikroeBITMAP_bmp+284
0x10BC	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+288
0x10C0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+292
0x10C4	0x00000000 ;?ICS_MikroeBITMAP_bmp+296
0x10C8	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+300
0x10CC	0x00000000 ;?ICS_MikroeBITMAP_bmp+304
0x10D0	0x00000000 ;?ICS_MikroeBITMAP_bmp+308
0x10D4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+312
0x10D8	0x00000000 ;?ICS_MikroeBITMAP_bmp+316
0x10DC	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+320
0x10E0	0x00000000 ;?ICS_MikroeBITMAP_bmp+324
0x10E4	0x00000000 ;?ICS_MikroeBITMAP_bmp+328
0x10E8	0x00000000 ;?ICS_MikroeBITMAP_bmp+332
0x10EC	0x00000000 ;?ICS_MikroeBITMAP_bmp+336
0x10F0	0x00000000 ;?ICS_MikroeBITMAP_bmp+340
0x10F4	0x00000000 ;?ICS_MikroeBITMAP_bmp+344
0x10F8	0x00000000 ;?ICS_MikroeBITMAP_bmp+348
0x10FC	0x00000000 ;?ICS_MikroeBITMAP_bmp+352
0x1100	0x00000000 ;?ICS_MikroeBITMAP_bmp+356
0x1104	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+360
0x1108	0x00000000 ;?ICS_MikroeBITMAP_bmp+364
0x110C	0x00000000 ;?ICS_MikroeBITMAP_bmp+368
0x1110	0x00000000 ;?ICS_MikroeBITMAP_bmp+372
0x1114	0x00000000 ;?ICS_MikroeBITMAP_bmp+376
0x1118	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+380
0x111C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+384
0x1120	0x00000000 ;?ICS_MikroeBITMAP_bmp+388
0x1124	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+392
0x1128	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+396
0x112C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+400
0x1130	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+404
0x1134	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+408
0x1138	0x00000000 ;?ICS_MikroeBITMAP_bmp+412
0x113C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+416
0x1140	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+420
0x1144	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+424
0x1148	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+428
0x114C	0x00000000 ;?ICS_MikroeBITMAP_bmp+432
0x1150	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+436
0x1154	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+440
0x1158	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+444
0x115C	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+448
0x1160	0x00000000 ;?ICS_MikroeBITMAP_bmp+452
0x1164	0x00000000 ;?ICS_MikroeBITMAP_bmp+456
0x1168	0x00000000 ;?ICS_MikroeBITMAP_bmp+460
0x116C	0x00000000 ;?ICS_MikroeBITMAP_bmp+464
0x1170	0x00000000 ;?ICS_MikroeBITMAP_bmp+468
0x1174	0x00000000 ;?ICS_MikroeBITMAP_bmp+472
0x1178	0x00000000 ;?ICS_MikroeBITMAP_bmp+476
0x117C	0x00000000 ;?ICS_MikroeBITMAP_bmp+480
0x1180	0x00000000 ;?ICS_MikroeBITMAP_bmp+484
0x1184	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+488
0x1188	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+492
0x118C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+496
0x1190	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+500
0x1194	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+504
0x1198	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+508
0x119C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+512
0x11A0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+516
0x11A4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+520
0x11A8	0x00000000 ;?ICS_MikroeBITMAP_bmp+524
0x11AC	0x00000000 ;?ICS_MikroeBITMAP_bmp+528
0x11B0	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+532
0x11B4	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+536
0x11B8	0x00000000 ;?ICS_MikroeBITMAP_bmp+540
0x11BC	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+544
0x11C0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+548
0x11C4	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+552
0x11C8	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+556
0x11CC	0x00000000 ;?ICS_MikroeBITMAP_bmp+560
0x11D0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+564
0x11D4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+568
0x11D8	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+572
0x11DC	0x00000000 ;?ICS_MikroeBITMAP_bmp+576
0x11E0	0x00000000 ;?ICS_MikroeBITMAP_bmp+580
0x11E4	0x00000000 ;?ICS_MikroeBITMAP_bmp+584
0x11E8	0x00000000 ;?ICS_MikroeBITMAP_bmp+588
0x11EC	0x00000000 ;?ICS_MikroeBITMAP_bmp+592
0x11F0	0x00000000 ;?ICS_MikroeBITMAP_bmp+596
0x11F4	0x00000000 ;?ICS_MikroeBITMAP_bmp+600
0x11F8	0x00000000 ;?ICS_MikroeBITMAP_bmp+604
0x11FC	0x00000000 ;?ICS_MikroeBITMAP_bmp+608
0x1200	0x00000000 ;?ICS_MikroeBITMAP_bmp+612
0x1204	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+616
0x1208	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+620
0x120C	0x00000000 ;?ICS_MikroeBITMAP_bmp+624
0x1210	0x00000000 ;?ICS_MikroeBITMAP_bmp+628
0x1214	0x00000000 ;?ICS_MikroeBITMAP_bmp+632
0x1218	0x00000000 ;?ICS_MikroeBITMAP_bmp+636
0x121C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+640
0x1220	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+644
0x1224	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+648
0x1228	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+652
0x122C	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+656
0x1230	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+660
0x1234	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+664
0x1238	0x00000000 ;?ICS_MikroeBITMAP_bmp+668
0x123C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+672
0x1240	0x00000000 ;?ICS_MikroeBITMAP_bmp+676
0x1244	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+680
0x1248	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+684
0x124C	0x00000000 ;?ICS_MikroeBITMAP_bmp+688
0x1250	0x00000000 ;?ICS_MikroeBITMAP_bmp+692
0x1254	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+696
0x1258	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+700
0x125C	0x00000000 ;?ICS_MikroeBITMAP_bmp+704
0x1260	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+708
0x1264	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+712
0x1268	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+716
0x126C	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+720
0x1270	0x00000000 ;?ICS_MikroeBITMAP_bmp+724
0x1274	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+728
0x1278	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+732
0x127C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+736
0x1280	0x00000000 ;?ICS_MikroeBITMAP_bmp+740
0x1284	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+744
0x1288	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+748
0x128C	0x00000000 ;?ICS_MikroeBITMAP_bmp+752
0x1290	0x00000000 ;?ICS_MikroeBITMAP_bmp+756
0x1294	0x00000000 ;?ICS_MikroeBITMAP_bmp+760
0x1298	0x00000000 ;?ICS_MikroeBITMAP_bmp+764
0x129C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+768
0x12A0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+772
0x12A4	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+776
0x12A8	0x00000000 ;?ICS_MikroeBITMAP_bmp+780
0x12AC	0x00000000 ;?ICS_MikroeBITMAP_bmp+784
0x12B0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+788
0x12B4	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+792
0x12B8	0x00000000 ;?ICS_MikroeBITMAP_bmp+796
0x12BC	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+800
0x12C0	0x00000000 ;?ICS_MikroeBITMAP_bmp+804
0x12C4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+808
0x12C8	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+812
0x12CC	0x00000000 ;?ICS_MikroeBITMAP_bmp+816
0x12D0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+820
0x12D4	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+824
0x12D8	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+828
0x12DC	0x00000000 ;?ICS_MikroeBITMAP_bmp+832
0x12E0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+836
0x12E4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+840
0x12E8	0x00000000 ;?ICS_MikroeBITMAP_bmp+844
0x12EC	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+848
0x12F0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+852
0x12F4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+856
0x12F8	0x00000000 ;?ICS_MikroeBITMAP_bmp+860
0x12FC	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+864
0x1300	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+868
0x1304	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+872
0x1308	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+876
0x130C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+880
0x1310	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+884
0x1314	0x00000000 ;?ICS_MikroeBITMAP_bmp+888
0x1318	0x00000000 ;?ICS_MikroeBITMAP_bmp+892
0x131C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+896
0x1320	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+900
0x1324	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+904
0x1328	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+908
0x132C	0x00000000 ;?ICS_MikroeBITMAP_bmp+912
0x1330	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+916
0x1334	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+920
0x1338	0x00000000 ;?ICS_MikroeBITMAP_bmp+924
0x133C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+928
0x1340	0x00000000 ;?ICS_MikroeBITMAP_bmp+932
0x1344	0x00000000 ;?ICS_MikroeBITMAP_bmp+936
0x1348	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+940
0x134C	0x00000000 ;?ICS_MikroeBITMAP_bmp+944
0x1350	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+948
0x1354	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+952
0x1358	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+956
0x135C	0x00000000 ;?ICS_MikroeBITMAP_bmp+960
0x1360	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+964
0x1364	0x00000000 ;?ICS_MikroeBITMAP_bmp+968
0x1368	0x00000000 ;?ICS_MikroeBITMAP_bmp+972
0x136C	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+976
0x1370	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+980
0x1374	0x00000000 ;?ICS_MikroeBITMAP_bmp+984
0x1378	0x00000000 ;?ICS_MikroeBITMAP_bmp+988
0x137C	0x00000000 ;?ICS_MikroeBITMAP_bmp+992
0x1380	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+996
0x1384	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1000
0x1388	0x00000000 ;?ICS_MikroeBITMAP_bmp+1004
0x138C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1008
0x1390	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1012
0x1394	0x00000000 ;?ICS_MikroeBITMAP_bmp+1016
0x1398	0x00000000 ;?ICS_MikroeBITMAP_bmp+1020
0x139C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1024
0x13A0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1028
0x13A4	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1032
0x13A8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1036
0x13AC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1040
0x13B0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1044
0x13B4	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1048
0x13B8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1052
0x13BC	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1056
0x13C0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1060
0x13C4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1064
0x13C8	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1068
0x13CC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1072
0x13D0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1076
0x13D4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1080
0x13D8	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1084
0x13DC	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1088
0x13E0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1092
0x13E4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1096
0x13E8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1100
0x13EC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1104
0x13F0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1108
0x13F4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1112
0x13F8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1116
0x13FC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1120
0x1400	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1124
0x1404	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1128
0x1408	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1132
0x140C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1136
0x1410	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1140
0x1414	0x00000000 ;?ICS_MikroeBITMAP_bmp+1144
0x1418	0x00000000 ;?ICS_MikroeBITMAP_bmp+1148
0x141C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1152
0x1420	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1156
0x1424	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1160
0x1428	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1164
0x142C	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1168
0x1430	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1172
0x1434	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1176
0x1438	0x00000000 ;?ICS_MikroeBITMAP_bmp+1180
0x143C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1184
0x1440	0x00000000 ;?ICS_MikroeBITMAP_bmp+1188
0x1444	0x00000000 ;?ICS_MikroeBITMAP_bmp+1192
0x1448	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1196
0x144C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1200
0x1450	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1204
0x1454	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1208
0x1458	0x00000000 ;?ICS_MikroeBITMAP_bmp+1212
0x145C	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1216
0x1460	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1220
0x1464	0x00000000 ;?ICS_MikroeBITMAP_bmp+1224
0x1468	0x00000000 ;?ICS_MikroeBITMAP_bmp+1228
0x146C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1232
0x1470	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1236
0x1474	0x00000000 ;?ICS_MikroeBITMAP_bmp+1240
0x1478	0x00000000 ;?ICS_MikroeBITMAP_bmp+1244
0x147C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1248
0x1480	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1252
0x1484	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1256
0x1488	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1260
0x148C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1264
0x1490	0x00000000 ;?ICS_MikroeBITMAP_bmp+1268
0x1494	0x00000000 ;?ICS_MikroeBITMAP_bmp+1272
0x1498	0x00000000 ;?ICS_MikroeBITMAP_bmp+1276
0x149C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1280
0x14A0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1284
0x14A4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1288
0x14A8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1292
0x14AC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1296
0x14B0	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1300
0x14B4	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1304
0x14B8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1308
0x14BC	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1312
0x14C0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1316
0x14C4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1320
0x14C8	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1324
0x14CC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1328
0x14D0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1332
0x14D4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1336
0x14D8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1340
0x14DC	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1344
0x14E0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1348
0x14E4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1352
0x14E8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1356
0x14EC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1360
0x14F0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1364
0x14F4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1368
0x14F8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1372
0x14FC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1376
0x1500	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1380
0x1504	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1384
0x1508	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1388
0x150C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1392
0x1510	0x00000000 ;?ICS_MikroeBITMAP_bmp+1396
0x1514	0x00000000 ;?ICS_MikroeBITMAP_bmp+1400
0x1518	0x00000000 ;?ICS_MikroeBITMAP_bmp+1404
0x151C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1408
0x1520	0x00000000 ;?ICS_MikroeBITMAP_bmp+1412
0x1524	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1416
0x1528	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1420
0x152C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1424
0x1530	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1428
0x1534	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1432
0x1538	0x00000000 ;?ICS_MikroeBITMAP_bmp+1436
0x153C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1440
0x1540	0x00000000 ;?ICS_MikroeBITMAP_bmp+1444
0x1544	0x00000000 ;?ICS_MikroeBITMAP_bmp+1448
0x1548	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1452
0x154C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1456
0x1550	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1460
0x1554	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1464
0x1558	0x00000000 ;?ICS_MikroeBITMAP_bmp+1468
0x155C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1472
0x1560	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1476
0x1564	0x00000000 ;?ICS_MikroeBITMAP_bmp+1480
0x1568	0x00000000 ;?ICS_MikroeBITMAP_bmp+1484
0x156C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1488
0x1570	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1492
0x1574	0x00000000 ;?ICS_MikroeBITMAP_bmp+1496
0x1578	0x00000000 ;?ICS_MikroeBITMAP_bmp+1500
0x157C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1504
0x1580	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1508
0x1584	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1512
0x1588	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1516
0x158C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1520
0x1590	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1524
0x1594	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1528
0x1598	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1532
0x159C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1536
0x15A0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1540
0x15A4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1544
0x15A8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1548
0x15AC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1552
0x15B0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1556
0x15B4	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1560
0x15B8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1564
0x15BC	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1568
0x15C0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1572
0x15C4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1576
0x15C8	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1580
0x15CC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1584
0x15D0	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1588
0x15D4	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1592
0x15D8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1596
0x15DC	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1600
0x15E0	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1604
0x15E4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1608
0x15E8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1612
0x15EC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1616
0x15F0	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1620
0x15F4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1624
0x15F8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1628
0x15FC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1632
0x1600	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1636
0x1604	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1640
0x1608	0x00000000 ;?ICS_MikroeBITMAP_bmp+1644
0x160C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1648
0x1610	0x00000000 ;?ICS_MikroeBITMAP_bmp+1652
0x1614	0x00000000 ;?ICS_MikroeBITMAP_bmp+1656
0x1618	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1660
0x161C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1664
0x1620	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1668
0x1624	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1672
0x1628	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1676
0x162C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1680
0x1630	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1684
0x1634	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1688
0x1638	0x00000000 ;?ICS_MikroeBITMAP_bmp+1692
0x163C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1696
0x1640	0x00000000 ;?ICS_MikroeBITMAP_bmp+1700
0x1644	0x00000000 ;?ICS_MikroeBITMAP_bmp+1704
0x1648	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1708
0x164C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1712
0x1650	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1716
0x1654	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1720
0x1658	0x00000000 ;?ICS_MikroeBITMAP_bmp+1724
0x165C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1728
0x1660	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1732
0x1664	0x00000000 ;?ICS_MikroeBITMAP_bmp+1736
0x1668	0x00000000 ;?ICS_MikroeBITMAP_bmp+1740
0x166C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1744
0x1670	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1748
0x1674	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1752
0x1678	0x00000000 ;?ICS_MikroeBITMAP_bmp+1756
0x167C	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1760
0x1680	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1764
0x1684	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1768
0x1688	0x00000000 ;?ICS_MikroeBITMAP_bmp+1772
0x168C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1776
0x1690	0x00000000 ;?ICS_MikroeBITMAP_bmp+1780
0x1694	0x00000000 ;?ICS_MikroeBITMAP_bmp+1784
0x1698	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1788
0x169C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1792
0x16A0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1796
0x16A4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1800
0x16A8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1804
0x16AC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1808
0x16B0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1812
0x16B4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1816
0x16B8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1820
0x16BC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1824
0x16C0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1828
0x16C4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1832
0x16C8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1836
0x16CC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1840
0x16D0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1844
0x16D4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1848
0x16D8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1852
0x16DC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1856
0x16E0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1860
0x16E4	0x00000000 ;?ICS_MikroeBITMAP_bmp+1864
0x16E8	0x00000000 ;?ICS_MikroeBITMAP_bmp+1868
0x16EC	0x00000000 ;?ICS_MikroeBITMAP_bmp+1872
0x16F0	0x00000000 ;?ICS_MikroeBITMAP_bmp+1876
0x16F4	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1880
0x16F8	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1884
0x16FC	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1888
0x1700	0x00000000 ;?ICS_MikroeBITMAP_bmp+1892
0x1704	0xE8E40000 ;?ICS_MikroeBITMAP_bmp+1896
0x1708	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1900
0x170C	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1904
0x1710	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1908
0x1714	0xE8E4E8E4 ;?ICS_MikroeBITMAP_bmp+1912
0x1718	0x0000E8E4 ;?ICS_MikroeBITMAP_bmp+1916
0x171C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1920
0x1720	0x00000000 ;?ICS_MikroeBITMAP_bmp+1924
0x1724	0x00000000 ;?ICS_MikroeBITMAP_bmp+1928
0x1728	0x00000000 ;?ICS_MikroeBITMAP_bmp+1932
0x172C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1936
0x1730	0x00000000 ;?ICS_MikroeBITMAP_bmp+1940
0x1734	0x00000000 ;?ICS_MikroeBITMAP_bmp+1944
0x1738	0x00000000 ;?ICS_MikroeBITMAP_bmp+1948
0x173C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1952
0x1740	0x00000000 ;?ICS_MikroeBITMAP_bmp+1956
0x1744	0x00000000 ;?ICS_MikroeBITMAP_bmp+1960
0x1748	0x00000000 ;?ICS_MikroeBITMAP_bmp+1964
0x174C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1968
0x1750	0x00000000 ;?ICS_MikroeBITMAP_bmp+1972
0x1754	0x00000000 ;?ICS_MikroeBITMAP_bmp+1976
0x1758	0x00000000 ;?ICS_MikroeBITMAP_bmp+1980
0x175C	0x00000000 ;?ICS_MikroeBITMAP_bmp+1984
0x1760	0x00000000 ;?ICS_MikroeBITMAP_bmp+1988
0x1764	0x00000000 ;?ICS_MikroeBITMAP_bmp+1992
0x1768	0x00000000 ;?ICS_MikroeBITMAP_bmp+1996
0x176C	0x00000000 ;?ICS_MikroeBITMAP_bmp+2000
0x1770	0x00000000 ;?ICS_MikroeBITMAP_bmp+2004
0x1774	0x00000000 ;?ICS_MikroeBITMAP_bmp+2008
0x1778	0x00000000 ;?ICS_MikroeBITMAP_bmp+2012
0x177C	0x00000000 ;?ICS_MikroeBITMAP_bmp+2016
0x1780	0x00000000 ;?ICS_MikroeBITMAP_bmp+2020
0x1784	0x00000000 ;?ICS_MikroeBITMAP_bmp+2024
0x1788	0x00000000 ;?ICS_MikroeBITMAP_bmp+2028
0x178C	0x00000000 ;?ICS_MikroeBITMAP_bmp+2032
0x1790	0x00000000 ;?ICS_MikroeBITMAP_bmp+2036
0x1794	0x00000000 ;?ICS_MikroeBITMAP_bmp+2040
0x1798	0x00000000 ;?ICS_MikroeBITMAP_bmp+2044
; end of ?ICS_MikroeBITMAP_bmp
;MatrixRGB_FT90.c,0 :: ?ICS?lstr1_MatrixRGB_FT90 [8]
0x179C	0x7274614D ;?ICS?lstr1_MatrixRGB_FT90+0
0x17A0	0x00207869 ;?ICS?lstr1_MatrixRGB_FT90+4
; end of ?ICS?lstr1_MatrixRGB_FT90
;MatrixRGB_FT90.c,0 :: ?ICS?lstr2_MatrixRGB_FT90 [2]
0x17A4	0x0052 ;?ICS?lstr2_MatrixRGB_FT90+0
; end of ?ICS?lstr2_MatrixRGB_FT90
;MatrixRGB_FT90.c,0 :: ?ICS?lstr3_MatrixRGB_FT90 [2]
0x17A6	0x0047 ;?ICS?lstr3_MatrixRGB_FT90+0
; end of ?ICS?lstr3_MatrixRGB_FT90
;,0 :: _initBlock_4 [8]
; Containing: ?ICS?lstr4_MatrixRGB_FT90 [3]
;             ?ICS?lstr5_MatrixRGB_FT90 [5]
0x17A8	0x42002042 ;_initBlock_4+0 : ?ICS?lstr4_MatrixRGB_FT90 at 0x17A8 : ?ICS?lstr5_MatrixRGB_FT90 at 0x17AB
0x17AC	0x00203A79 ;_initBlock_4+4
; end of _initBlock_4
;,0 :: _initBlock_5 [14]
; Containing: ?ICS?lstr6_MatrixRGB_FT90 [7]
;             ?ICS?lstr7_MatrixRGB_FT90 [7]
0x17B0	0x65726F43 ;_initBlock_5+0 : ?ICS?lstr6_MatrixRGB_FT90 at 0x17B0
0x17B4	0x4C002079 ;_initBlock_5+4 : ?ICS?lstr7_MatrixRGB_FT90 at 0x17B7
0x17B8	0x79656B61 ;_initBlock_5+8
0x17BC	0x0020 ;_initBlock_5+12
; end of _initBlock_5
;,0 :: _initBlock_6 [113]
; Containing: ?ICS?lstr8_MatrixRGB_FT90 [7]
;             ?ICS?lstr9_MatrixRGB_FT90 [2]
;             ?ICS?lstr10_MatrixRGB_FT90 [2]
;             ?ICS?lstr11_MatrixRGB_FT90 [2]
;             ?ICSmatrixrgb_hw_spi_buffer [100]
0x17BE	0x7274614D ;_initBlock_6+0 : ?ICS?lstr8_MatrixRGB_FT90 at 0x17BE
0x17C2	0x52007869 ;_initBlock_6+4 : ?ICS?lstr9_MatrixRGB_FT90 at 0x17C5
0x17C6	0x42004700 ;_initBlock_6+8 : ?ICS?lstr10_MatrixRGB_FT90 at 0x17C7 : ?ICS?lstr11_MatrixRGB_FT90 at 0x17C9
0x17CA	0x00000000 ;_initBlock_6+12 : ?ICSmatrixrgb_hw_spi_buffer at 0x17CB
0x17CE	0x00000000 ;_initBlock_6+16
0x17D2	0x00000000 ;_initBlock_6+20
0x17D6	0x00000000 ;_initBlock_6+24
0x17DA	0x00000000 ;_initBlock_6+28
0x17DE	0x00000000 ;_initBlock_6+32
0x17E2	0x00000000 ;_initBlock_6+36
0x17E6	0x00000000 ;_initBlock_6+40
0x17EA	0x00000000 ;_initBlock_6+44
0x17EE	0x00000000 ;_initBlock_6+48
0x17F2	0x00000000 ;_initBlock_6+52
0x17F6	0x00000000 ;_initBlock_6+56
0x17FA	0x00000000 ;_initBlock_6+60
0x17FE	0x00000000 ;_initBlock_6+64
0x1802	0x00000000 ;_initBlock_6+68
0x1806	0x00000000 ;_initBlock_6+72
0x180A	0x00000000 ;_initBlock_6+76
0x180E	0x00000000 ;_initBlock_6+80
0x1812	0x00000000 ;_initBlock_6+84
0x1816	0x00000000 ;_initBlock_6+88
0x181A	0x00000000 ;_initBlock_6+92
0x181E	0x00000000 ;_initBlock_6+96
0x1822	0x00000000 ;_initBlock_6+100
0x1826	0x00000000 ;_initBlock_6+104
0x182A	0x00000000 ;_initBlock_6+108
0x182E	0x00 ;_initBlock_6+112
; end of _initBlock_6
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0090     [100]    __Lib_SPI_SPIx_Read
0x00F4      [28]    __Lib_SPI_SPIx_Enable_SS
0x0110      [20]    __Lib_SPI_SPIx_Disable_SS
0x0124      [16]    _matrixrgb_hal_cs_low
0x0134      [16]    _matrixrgb_hal_cs_high
0x0144      [28]    _SPIM1_Write
0x0160      [16]    _SPIM1_Disable_SS
0x0170      [16]    _SPIM1_Enable_SS
0x0180     [112]    _matrixrgb_hal_write
0x01F0     [416]    __Lib_SPI_SPIx_Pad_Init
0x0390     [496]    _GPIO_Config
0x0580      [40]    _matrixrgb_hal_init
0x05A8     [496]    __Lib_SPI_SPIx_Init_Advanced
0x0798      [20]    _GPIO_Digital_Output
0x07AC     [104]    _matrixrgb_init
0x0814     [296]    _SPIM1_Init_Advanced
0x093C      [20]    _GPIO_Digital_Input
0x0950      [56]    _matrixrgb_scroll_off_scrn_up
0x0988     [196]    _matrixrgb_scroll_text_left
0x0A4C      [56]    _matrixrgb_scroll_off_scrn_right
0x0A84      [56]    _matrixrgb_scroll_off_scrn_left
0x0ABC      [24]    _matrixrgb_set_color
0x0AD4      [28]    ___CC2DB
0x0AF0     [156]    _system_setup
0x0B8C      [56]    _matrixrgb_scroll_off_scrn_down
0x0BC4     [256]    _matrixrgb_scroll_img_right
0x0CC4       [8]    ___GenExcept
0x0CCC      [16]    __Lib_System_InitialSetUpCLKPMC
0x0CDC     [704]    _main
0x1830      [20]    _InitStaticLink
0x1844      [20]    _ZeroStaticLink
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0004    [2048]    _MikroeBITMAP_bmp
0x0804       [8]    ?lstr1_MatrixRGB_FT90
0x080C       [2]    ?lstr2_MatrixRGB_FT90
0x080E       [2]    ?lstr3_MatrixRGB_FT90
0x0810       [3]    ?lstr4_MatrixRGB_FT90
0x0813       [5]    ?lstr5_MatrixRGB_FT90
0x0818       [7]    ?lstr6_MatrixRGB_FT90
0x081F       [7]    ?lstr7_MatrixRGB_FT90
0x0826       [7]    ?lstr8_MatrixRGB_FT90
0x082D       [2]    ?lstr9_MatrixRGB_FT90
0x082F       [2]    ?lstr10_MatrixRGB_FT90
0x0831       [2]    ?lstr11_MatrixRGB_FT90
0x0833     [100]    matrixrgb_hw_spi_buffer
0x0898       [4]    matrixrgb_hal_write_spi_p
0x089C       [4]    _SPIM_Wr_Ptr
0x08A0       [4]    matrixrgb_hal_read_spi_p
0x08A4       [4]    _SPIM_Rd_Ptr
0x08A8       [4]    matrixrgb_hal_write_bytes_spi_p
0x08AC       [4]    _SPIM_WrBytes_Ptr
0x08B0       [4]    matrixrgb_hal_read_bytes_spi_p
0x08B4       [4]    _SPIM_RdBytes_Ptr
0x08B8       [4]    _SPIM_EnSS_Ptr
0x08BC       [4]    _SPIM_DisSS_Ptr
0x08C0       [4]    __Lib_SPI_spiBase
0x08C4      [14]    __Lib_SPI_spiConf
0x08D4       [4]    ___System_CLOCK_IN_KHZ
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0F9C    [2048]    ?ICS_MikroeBITMAP_bmp
0x179C       [8]    ?ICS?lstr1_MatrixRGB_FT90
0x17A4       [2]    ?ICS?lstr2_MatrixRGB_FT90
0x17A6       [2]    ?ICS?lstr3_MatrixRGB_FT90
0x17A8       [3]    ?ICS?lstr4_MatrixRGB_FT90
0x17AB       [5]    ?ICS?lstr5_MatrixRGB_FT90
0x17B0       [7]    ?ICS?lstr6_MatrixRGB_FT90
0x17B7       [7]    ?ICS?lstr7_MatrixRGB_FT90
0x17BE       [7]    ?ICS?lstr8_MatrixRGB_FT90
0x17C5       [2]    ?ICS?lstr9_MatrixRGB_FT90
0x17C7       [2]    ?ICS?lstr10_MatrixRGB_FT90
0x17C9       [2]    ?ICS?lstr11_MatrixRGB_FT90
0x17CB     [100]    ?ICSmatrixrgb_hw_spi_buffer
